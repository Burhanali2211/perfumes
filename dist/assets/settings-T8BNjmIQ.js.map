{"version":3,"file":"settings-T8BNjmIQ.js","sources":["../../src/components/Settings/ProfileSettings.tsx","../../src/components/Settings/NotificationSettings.tsx","../../src/components/Settings/SecuritySettings.tsx","../../src/components/Settings/PaymentSettings.tsx","../../src/components/Settings/AdminSettings.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Camera, Save, User, Mail, Phone, Calendar, Check } from 'lucide-react';\r\nimport { motion } from 'framer-motion';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\nimport { updateUserProfile } from '../../lib/supabase';\r\nimport { useNotification } from '../../contexts/NotificationContext';\r\n\r\nexport const ProfileSettings: React.FC = () => {\r\n  const { user, updateProfile } = useAuth();\r\n  const { showNotification } = useNotification();\r\n  const [loading, setLoading] = useState(false);\r\n  const [errors, setErrors] = useState<Record<string, string>>({});\r\n  const [success, setSuccess] = useState<boolean>(false);\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    dateOfBirth: '',\r\n    avatar: '',\r\n    bio: '',\r\n    location: '',\r\n    website: ''\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      console.log('üîÑ ProfileSettings: Initializing form data with user:', user);\r\n      setFormData({\r\n        name: user.name || '',\r\n        email: user.email || '',\r\n        phone: user.phone || '',\r\n        dateOfBirth: user.dateOfBirth || '',\r\n        avatar: user.avatar || '',\r\n        bio: '',\r\n        location: '',\r\n        website: ''\r\n      });\r\n    }\r\n  }, [user]);\r\n\r\n  const validateForm = () => {\r\n    const newErrors: Record<string, string> = {};\r\n\r\n    if (!formData.name.trim()) {\r\n      newErrors.name = 'Name is required';\r\n    } else if (formData.name.trim().length < 2) {\r\n      newErrors.name = 'Name must be at least 2 characters';\r\n    }\r\n\r\n    if (!formData.email.trim()) {\r\n      newErrors.email = 'Email is required';\r\n    } else if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(formData.email)) {\r\n      newErrors.email = 'Please enter a valid email address';\r\n    }\r\n\r\n    if (formData.phone && !/^[+]?[1-9][\\d]{0,15}$/.test(formData.phone.replace(/\\s/g, ''))) {\r\n      newErrors.phone = 'Please enter a valid phone number';\r\n    }\r\n\r\n    if (formData.dateOfBirth) {\r\n      const birthDate = new Date(formData.dateOfBirth);\r\n      const today = new Date();\r\n      const age = today.getFullYear() - birthDate.getFullYear();\r\n      if (age < 13) {\r\n        newErrors.dateOfBirth = 'You must be at least 13 years old';\r\n      }\r\n    }\r\n\r\n    if (formData.website && !/^https?:\\/\\/.+/.test(formData.website)) {\r\n      newErrors.website = 'Please enter a valid URL (starting with http:// or https://)';\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n\r\n    // Clear error for this field when user starts typing\r\n    if (errors[name]) {\r\n      setErrors(prev => ({\r\n        ...prev,\r\n        [name]: ''\r\n      }));\r\n    }\r\n\r\n    // Clear success state when user makes changes\r\n    if (success) {\r\n      setSuccess(false);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!user) return;\r\n\r\n    if (!validateForm()) {\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setErrors({});\r\n\r\n    try {\r\n      console.log('üîÑ ProfileSettings: Starting profile update with data:', formData);\r\n\r\n      // Use the AuthContext updateProfile method which handles both database and auth updates\r\n      await updateProfile({\r\n        name: formData.name,\r\n        phone: formData.phone,\r\n        dateOfBirth: formData.dateOfBirth,\r\n        avatar: formData.avatar\r\n      });\r\n\r\n      setSuccess(true);\r\n      showNotification({\r\n        type: 'success',\r\n        title: 'Profile Updated',\r\n        message: 'Your profile has been updated successfully'\r\n      });\r\n\r\n      console.log('‚úÖ ProfileSettings: Profile update completed successfully');\r\n    } catch (error) {\r\n      console.error('‚ùå ProfileSettings: Error updating profile:', error);\r\n      showNotification({\r\n        type: 'error',\r\n        title: 'Update Failed',\r\n        message: error instanceof Error ? error.message : 'An error occurred while updating your profile'\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleAvatarUpload = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = e.target.files?.[0];\r\n    if (file) {\r\n      // In a real app, you would upload to a cloud storage service\r\n      const reader = new FileReader();\r\n      reader.onload = (event) => {\r\n        const result = event.target?.result as string;\r\n        setFormData(prev => ({\r\n          ...prev,\r\n          avatar: result\r\n        }));\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-6\">\r\n      <div className=\"mb-6\">\r\n        <h2 className=\"text-2xl font-bold text-gray-900\">Profile Settings</h2>\r\n        <p className=\"text-gray-600 mt-1\">Update your personal information and preferences</p>\r\n      </div>\r\n\r\n      {success && (\r\n        <div className=\"mb-6 bg-green-50 border border-green-200 rounded-lg p-4\">\r\n          <div className=\"flex items-center gap-3\">\r\n            <Check className=\"h-5 w-5 text-green-600\" />\r\n            <div>\r\n              <h3 className=\"text-sm font-medium text-green-800\">Profile Updated</h3>\r\n              <p className=\"text-sm text-green-700 mt-1\">Your profile has been updated successfully</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n        {/* Avatar Section */}\r\n        <div className=\"flex items-center gap-6\">\r\n          <div className=\"relative\">\r\n            <div className=\"h-24 w-24 rounded-full bg-gray-200 flex items-center justify-center overflow-hidden\">\r\n              {formData.avatar ? (\r\n                <img\r\n                  src={formData.avatar}\r\n                  alt=\"Profile\"\r\n                  className=\"h-full w-full object-cover\"\r\n                />\r\n              ) : (\r\n                <User className=\"h-12 w-12 text-gray-400\" />\r\n              )}\r\n            </div>\r\n            <label\r\n              htmlFor=\"avatar-upload\"\r\n              className=\"absolute bottom-0 right-0 bg-indigo-600 text-white p-2 rounded-full cursor-pointer hover:bg-indigo-700 transition-colors\"\r\n            >\r\n              <Camera className=\"h-4 w-4\" />\r\n              <input\r\n                id=\"avatar-upload\"\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={handleAvatarUpload}\r\n                className=\"hidden\"\r\n              />\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <h3 className=\"text-lg font-medium text-gray-900\">Profile Photo</h3>\r\n            <p className=\"text-sm text-gray-600\">Upload a new profile photo</p>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Form Fields */}\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n          <div>\r\n            <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n              Full Name <span className=\"text-red-500\">*</span>\r\n            </label>\r\n            <div className=\"relative\">\r\n              <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n                <User className=\"h-5 w-5 text-gray-400\" />\r\n              </div>\r\n              <input\r\n                type=\"text\"\r\n                id=\"name\"\r\n                name=\"name\"\r\n                value={formData.name}\r\n                onChange={handleInputChange}\r\n                required\r\n                className={`input-field pl-10 ${errors.name ? 'border-red-500' : ''}`}\r\n                placeholder=\"Enter your full name\"\r\n              />\r\n            </div>\r\n            {errors.name && (\r\n              <p className=\"mt-1 text-sm text-red-600\">{errors.name}</p>\r\n            )}\r\n          </div>\r\n\r\n          <div>\r\n            <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n              Email Address <span className=\"text-red-500\">*</span>\r\n            </label>\r\n            <div className=\"relative\">\r\n              <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n                <Mail className=\"h-5 w-5 text-gray-400\" />\r\n              </div>\r\n              <input\r\n                type=\"email\"\r\n                id=\"email\"\r\n                name=\"email\"\r\n                value={formData.email}\r\n                disabled\r\n                className=\"input-field pl-10 bg-gray-50 cursor-not-allowed\"\r\n                placeholder=\"Email cannot be changed\"\r\n              />\r\n            </div>\r\n            <p className=\"text-xs text-gray-500 mt-1\">Email address cannot be changed</p>\r\n          </div>\r\n\r\n          <div>\r\n            <label htmlFor=\"phone\" className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n              Phone Number\r\n            </label>\r\n            <div className=\"relative\">\r\n              <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n                <Phone className=\"h-5 w-5 text-gray-400\" />\r\n              </div>\r\n              <input\r\n                type=\"tel\"\r\n                id=\"phone\"\r\n                name=\"phone\"\r\n                value={formData.phone}\r\n                onChange={handleInputChange}\r\n                className={`input-field pl-10 ${errors.phone ? 'border-red-500' : ''}`}\r\n                placeholder=\"Enter your phone number\"\r\n              />\r\n            </div>\r\n            {errors.phone && (\r\n              <p className=\"mt-1 text-sm text-red-600\">{errors.phone}</p>\r\n            )}\r\n          </div>\r\n\r\n          <div>\r\n            <label htmlFor=\"dateOfBirth\" className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n              Date of Birth\r\n            </label>\r\n            <div className=\"relative\">\r\n              <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n                <Calendar className=\"h-5 w-5 text-gray-400\" />\r\n              </div>\r\n              <input\r\n                type=\"date\"\r\n                id=\"dateOfBirth\"\r\n                name=\"dateOfBirth\"\r\n                value={formData.dateOfBirth}\r\n                onChange={handleInputChange}\r\n                className={`input-field pl-10 ${errors.dateOfBirth ? 'border-red-500' : ''}`}\r\n              />\r\n            </div>\r\n            {errors.dateOfBirth && (\r\n              <p className=\"mt-1 text-sm text-red-600\">{errors.dateOfBirth}</p>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"md:col-span-2\">\r\n            <label htmlFor=\"bio\" className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n              Bio\r\n            </label>\r\n            <textarea\r\n              id=\"bio\"\r\n              name=\"bio\"\r\n              value={formData.bio}\r\n              onChange={handleInputChange}\r\n              className=\"input-field min-h-[100px]\"\r\n              placeholder=\"Tell us a little about yourself\"\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label htmlFor=\"location\" className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n              Location\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"location\"\r\n              name=\"location\"\r\n              value={formData.location}\r\n              onChange={handleInputChange}\r\n              className=\"input-field\"\r\n              placeholder=\"City, Country\"\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label htmlFor=\"website\" className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n              Website\r\n            </label>\r\n            <input\r\n              type=\"url\"\r\n              id=\"website\"\r\n              name=\"website\"\r\n              value={formData.website}\r\n              onChange={handleInputChange}\r\n              className={`input-field ${errors.website ? 'border-red-500' : ''}`}\r\n              placeholder=\"https://example.com\"\r\n            />\r\n            {errors.website && (\r\n              <p className=\"mt-1 text-sm text-red-600\">{errors.website}</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Role Display */}\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n            Account Role\r\n          </label>\r\n          <div className=\"px-4 py-2 bg-gray-50 border border-gray-200 rounded-lg\">\r\n            <span className=\"capitalize font-medium text-gray-900\">{user?.role}</span>\r\n            <p className=\"text-xs text-gray-500 mt-1\">\r\n              Your account role determines your access level and permissions\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Submit Button */}\r\n        <div className=\"flex justify-end pt-6 border-t border-gray-200\">\r\n          <motion.button\r\n            type=\"submit\"\r\n            disabled={loading}\r\n            className={`btn-primary flex items-center gap-2 ${loading ? 'opacity-70 cursor-not-allowed' : ''}`}\r\n            whileHover={loading ? {} : { scale: 1.02 }}\r\n            whileTap={loading ? {} : { scale: 0.98 }}\r\n          >\r\n            {loading ? (\r\n              <>\r\n                <svg className=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                  <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\r\n                  <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n                </svg>\r\n                Saving...\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Save className=\"h-4 w-4\" />\r\n                Save Changes\r\n              </>\r\n            )}\r\n          </motion.button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Bell, Mail, Smartphone, Save, AlertCircle } from 'lucide-react';\r\nimport { motion } from 'framer-motion';\r\nimport { useNotification } from '../../contexts/NotificationContext';\r\nimport { getUserPreferences, updateUserPreferences } from '../../lib/supabase';\r\nimport { UserPreferences } from '../../types';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\n\r\nexport const NotificationSettings: React.FC = () => {\r\n  const { showNotification } = useNotification();\r\n  const { user } = useAuth();\r\n  const [loading, setLoading] = useState(true);\r\n  const [saving, setSaving] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  const [settings, setSettings] = useState({\r\n    email: {\r\n      orderUpdates: true,\r\n      promotions: true,\r\n      newsletter: false,\r\n      security: true,\r\n      productUpdates: false\r\n    },\r\n    push: {\r\n      orderUpdates: true,\r\n      promotions: false,\r\n      newsletter: false,\r\n      security: true,\r\n      productUpdates: false\r\n    },\r\n    sms: {\r\n      orderUpdates: false,\r\n      promotions: false,\r\n      newsletter: false,\r\n      security: true,\r\n      productUpdates: false\r\n    }\r\n  });\r\n\r\n  // Load user preferences from database\r\n  useEffect(() => {\r\n    const loadPreferences = async () => {\r\n      if (!user) return;\r\n\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      try {\r\n        const userPreferences = await getUserPreferences(user.id);\r\n\r\n        if (userPreferences) {\r\n          setPreferences(userPreferences);\r\n\r\n          // Update settings state with database values\r\n          setSettings({\r\n            email: {\r\n              orderUpdates: userPreferences.emailOrderUpdates,\r\n              promotions: userPreferences.emailPromotions,\r\n              newsletter: userPreferences.emailNewsletter,\r\n              security: userPreferences.emailSecurity,\r\n              productUpdates: userPreferences.emailProductUpdates\r\n            },\r\n            push: {\r\n              orderUpdates: userPreferences.pushOrderUpdates,\r\n              promotions: userPreferences.pushPromotions,\r\n              newsletter: userPreferences.pushNewsletter,\r\n              security: userPreferences.pushSecurity,\r\n              productUpdates: userPreferences.pushProductUpdates\r\n            },\r\n            sms: {\r\n              orderUpdates: userPreferences.smsOrderUpdates,\r\n              promotions: userPreferences.smsPromotions,\r\n              newsletter: userPreferences.smsNewsletter,\r\n              security: userPreferences.smsSecurity,\r\n              productUpdates: userPreferences.smsProductUpdates\r\n            }\r\n          });\r\n        }\r\n      } catch (err) {\r\n        console.error('Error loading preferences:', err);\r\n        setError('Failed to load notification preferences. Please try again.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    loadPreferences();\r\n  }, [user]);\r\n\r\n  const handleToggle = (category: keyof typeof settings, setting: string) => {\r\n    setSettings(prev => ({\r\n      ...prev,\r\n      [category]: {\r\n        ...prev[category],\r\n        [setting]: !prev[category][setting as keyof typeof prev[category]]\r\n      }\r\n    }));\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    if (!user) return;\r\n\r\n    setSaving(true);\r\n    setError(null);\r\n\r\n    try {\r\n      // Map settings to UserPreferences format\r\n      const updatedPreferences: Partial<UserPreferences> = {\r\n        userId: user.id,\r\n        emailOrderUpdates: settings.email.orderUpdates,\r\n        emailPromotions: settings.email.promotions,\r\n        emailNewsletter: settings.email.newsletter,\r\n        emailSecurity: settings.email.security,\r\n        emailProductUpdates: settings.email.productUpdates,\r\n        pushOrderUpdates: settings.push.orderUpdates,\r\n        pushPromotions: settings.push.promotions,\r\n        pushNewsletter: settings.push.newsletter,\r\n        pushSecurity: settings.push.security,\r\n        pushProductUpdates: settings.push.productUpdates,\r\n        smsOrderUpdates: settings.sms.orderUpdates,\r\n        smsPromotions: settings.sms.promotions,\r\n        smsNewsletter: settings.sms.newsletter,\r\n        smsSecurity: settings.sms.security,\r\n        smsProductUpdates: settings.sms.productUpdates\r\n      };\r\n\r\n      // Save to database\r\n      const success = await updateUserPreferences(updatedPreferences);\r\n\r\n      if (success) {\r\n        showNotification({\r\n          type: 'success',\r\n          title: 'Settings Saved',\r\n          message: 'Your notification preferences have been updated'\r\n        });\r\n      } else {\r\n        throw new Error('Failed to update preferences');\r\n      }\r\n    } catch (err) {\r\n      console.error('Error saving preferences:', err);\r\n      setError('Failed to save notification settings. Please try again.');\r\n      showNotification({\r\n        type: 'error',\r\n        title: 'Save Failed',\r\n        message: 'Failed to save notification settings'\r\n      });\r\n    } finally {\r\n      setSaving(false);\r\n    }\r\n  };\r\n\r\n  const notificationTypes = [\r\n    {\r\n      key: 'orderUpdates',\r\n      title: 'Order Updates',\r\n      description: 'Notifications about your order status and delivery'\r\n    },\r\n    {\r\n      key: 'promotions',\r\n      title: 'Promotions & Deals',\r\n      description: 'Special offers, discounts, and promotional campaigns'\r\n    },\r\n    {\r\n      key: 'newsletter',\r\n      title: 'Newsletter',\r\n      description: 'Weekly newsletter with new products and features'\r\n    },\r\n    {\r\n      key: 'security',\r\n      title: 'Security Alerts',\r\n      description: 'Important security notifications and account changes'\r\n    },\r\n    {\r\n      key: 'productUpdates',\r\n      title: 'Product Updates',\r\n      description: 'New product launches and feature announcements'\r\n    }\r\n  ];\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"p-6\">\r\n        <div className=\"mb-6\">\r\n          <h2 className=\"text-2xl font-bold text-gray-900\">Notification Settings</h2>\r\n          <p className=\"text-gray-600 mt-1\">Choose how you want to be notified about updates and activities</p>\r\n        </div>\r\n        <div className=\"animate-pulse space-y-4\">\r\n          {[1, 2, 3, 4, 5].map((i) => (\r\n            <div key={i} className=\"bg-gray-200 h-16 rounded-lg\"></div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"p-6\">\r\n      <div className=\"mb-6\">\r\n        <h2 className=\"text-2xl font-bold text-gray-900\">Notification Settings</h2>\r\n        <p className=\"text-gray-600 mt-1\">Choose how you want to be notified about updates and activities</p>\r\n      </div>\r\n\r\n      {error && (\r\n        <div className=\"mb-6 bg-red-50 border border-red-200 rounded-lg p-4\">\r\n          <div className=\"flex items-center gap-3\">\r\n            <AlertCircle className=\"h-5 w-5 text-red-600\" />\r\n            <div>\r\n              <h3 className=\"text-sm font-medium text-red-800\">Error</h3>\r\n              <p className=\"text-sm text-red-700 mt-1\">{error}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"space-y-8\">\r\n        {/* Notification Channels */}\r\n        <div className=\"overflow-x-auto\">\r\n          <table className=\"w-full\">\r\n            <thead>\r\n              <tr className=\"border-b border-gray-200\">\r\n                <th className=\"text-left py-4 px-2 font-medium text-gray-900\">Notification Type</th>\r\n                <th className=\"text-center py-4 px-2 font-medium text-gray-900\">\r\n                  <div className=\"flex items-center justify-center gap-2\">\r\n                    <Mail className=\"h-4 w-4\" />\r\n                    Email\r\n                  </div>\r\n                </th>\r\n                <th className=\"text-center py-4 px-2 font-medium text-gray-900\">\r\n                  <div className=\"flex items-center justify-center gap-2\">\r\n                    <Bell className=\"h-4 w-4\" />\r\n                    Push\r\n                  </div>\r\n                </th>\r\n                <th className=\"text-center py-4 px-2 font-medium text-gray-900\">\r\n                  <div className=\"flex items-center justify-center gap-2\">\r\n                    <Smartphone className=\"h-4 w-4\" />\r\n                    SMS\r\n                  </div>\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {notificationTypes.map((type) => (\r\n                <tr key={type.key} className=\"border-b border-gray-100\">\r\n                  <td className=\"py-4 px-2\">\r\n                    <div>\r\n                      <div className=\"font-medium text-gray-900\">{type.title}</div>\r\n                      <div className=\"text-sm text-gray-600\">{type.description}</div>\r\n                    </div>\r\n                  </td>\r\n                  <td className=\"py-4 px-2 text-center\">\r\n                    <label className=\"inline-flex items-center\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={settings.email[type.key as keyof typeof settings.email]}\r\n                        onChange={() => handleToggle('email', type.key)}\r\n                        className=\"form-checkbox h-4 w-4 text-indigo-600 transition duration-150 ease-in-out\"\r\n                      />\r\n                    </label>\r\n                  </td>\r\n                  <td className=\"py-4 px-2 text-center\">\r\n                    <label className=\"inline-flex items-center\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={settings.push[type.key as keyof typeof settings.push]}\r\n                        onChange={() => handleToggle('push', type.key)}\r\n                        className=\"form-checkbox h-4 w-4 text-indigo-600 transition duration-150 ease-in-out\"\r\n                      />\r\n                    </label>\r\n                  </td>\r\n                  <td className=\"py-4 px-2 text-center\">\r\n                    <label className=\"inline-flex items-center\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={settings.sms[type.key as keyof typeof settings.sms]}\r\n                        onChange={() => handleToggle('sms', type.key)}\r\n                        className=\"form-checkbox h-4 w-4 text-indigo-600 transition duration-150 ease-in-out\"\r\n                      />\r\n                    </label>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        {/* Quick Actions */}\r\n        <div className=\"bg-gray-50 rounded-lg p-6\">\r\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Quick Actions</h3>\r\n          <div className=\"flex flex-wrap gap-4\">\r\n            <button\r\n              onClick={() => {\r\n                setSettings(prev => ({\r\n                  email: Object.keys(prev.email).reduce((acc, key) => ({ ...acc, [key]: true }), {} as Record<string, boolean>),\r\n                  push: Object.keys(prev.push).reduce((acc, key) => ({ ...acc, [key]: true }), {} as Record<string, boolean>),\r\n                  sms: Object.keys(prev.sms).reduce((acc, key) => ({ ...acc, [key]: true }), {} as Record<string, boolean>)\r\n                }));\r\n              }}\r\n              className=\"px-4 py-2 bg-indigo-100 text-indigo-700 rounded-lg hover:bg-indigo-200 transition-colors\"\r\n            >\r\n              Enable All\r\n            </button>\r\n            <button\r\n              onClick={() => {\r\n                setSettings(prev => ({\r\n                  email: Object.keys(prev.email).reduce((acc, key) => ({ ...acc, [key]: false }), {} as Record<string, boolean>),\r\n                  push: Object.keys(prev.push).reduce((acc, key) => ({ ...acc, [key]: false }), {} as Record<string, boolean>),\r\n                  sms: Object.keys(prev.sms).reduce((acc, key) => ({ ...acc, [key]: false }), {} as Record<string, boolean>)\r\n                }));\r\n              }}\r\n              className=\"px-4 py-2 bg-gray-100 text-gray-700 rounded-lg hover:bg-gray-200 transition-colors\"\r\n            >\r\n              Disable All\r\n            </button>\r\n            <button\r\n              onClick={() => {\r\n                setSettings(prev => ({\r\n                  email: { ...prev.email, security: true },\r\n                  push: { ...prev.push, security: true },\r\n                  sms: { ...prev.sms, security: true }\r\n                }));\r\n              }}\r\n              className=\"px-4 py-2 bg-red-100 text-red-700 rounded-lg hover:bg-red-200 transition-colors\"\r\n            >\r\n              Security Only\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Save Button */}\r\n        <div className=\"flex justify-end pt-6 border-t border-gray-200\">\r\n          <motion.button\r\n            onClick={handleSave}\r\n            disabled={saving}\r\n            className={`btn-primary flex items-center gap-2 ${saving ? 'opacity-70 cursor-not-allowed' : ''}`}\r\n            whileHover={saving ? {} : { scale: 1.02 }}\r\n            whileTap={saving ? {} : { scale: 0.98 }}\r\n          >\r\n            <Save className=\"h-4 w-4\" />\r\n            {saving ? 'Saving...' : 'Save Preferences'}\r\n          </motion.button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Lock, Shield, AlertTriangle, Smartphone, Mail } from 'lucide-react';\r\nimport { motion } from 'framer-motion';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\nimport { useNotification } from '../../contexts/NotificationContext';\r\nimport { getUserSecuritySettings, updateUserSecuritySettings } from '../../lib/supabase';\r\nimport { UserSecuritySettings } from '../../types';\r\n\r\nexport const SecuritySettings: React.FC = () => {\r\n  const { user, updatePassword } = useAuth();\r\n  const { showNotification } = useNotification();\r\n  const [loading, setLoading] = useState(true);\r\n  const [saving, setSaving] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [securitySettings, setSecuritySettings] = useState<UserSecuritySettings | null>(null);\r\n  const [showPasswords, setShowPasswords] = useState({\r\n    current: false,\r\n    new: false,\r\n    confirm: false\r\n  });\r\n  const [formData, setFormData] = useState({\r\n    currentPassword: '',\r\n    newPassword: '',\r\n    confirmPassword: ''\r\n  });\r\n\r\n  // Load security settings from database\r\n  useEffect(() => {\r\n    const loadSecuritySettings = async () => {\r\n      if (!user) return;\r\n\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      try {\r\n        const settings = await getUserSecuritySettings(user.id);\r\n        if (settings) {\r\n          setSecuritySettings(settings);\r\n        }\r\n      } catch (err) {\r\n        console.error('Error loading security settings:', err);\r\n        setError('Failed to load security settings. Please try again.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    loadSecuritySettings();\r\n  }, [user]);\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  const togglePasswordVisibility = (field: keyof typeof showPasswords) => {\r\n    setShowPasswords(prev => ({\r\n      ...prev,\r\n      [field]: !prev[field]\r\n    }));\r\n  };\r\n\r\n  const handleSecuritySettingChange = async (setting: keyof UserSecuritySettings, value: boolean) => {\r\n    if (!securitySettings) return;\r\n\r\n    const updatedSettings = {\r\n      ...securitySettings,\r\n      [setting]: value\r\n    };\r\n\r\n    setSecuritySettings(updatedSettings);\r\n\r\n    // Save to database immediately for security settings\r\n    setSaving(true);\r\n    try {\r\n      const success = await updateUserSecuritySettings({ [setting]: value });\r\n      if (success) {\r\n        showNotification({\r\n          type: 'success',\r\n          title: 'Setting Updated',\r\n          message: 'Security setting has been updated successfully'\r\n        });\r\n      } else {\r\n        throw new Error('Failed to update setting');\r\n      }\r\n    } catch (err) {\r\n      console.error('Error updating security setting:', err);\r\n      // Revert the change\r\n      setSecuritySettings(securitySettings);\r\n      showNotification({\r\n        type: 'error',\r\n        title: 'Update Failed',\r\n        message: 'Failed to update security setting'\r\n      });\r\n    } finally {\r\n      setSaving(false);\r\n    }\r\n  };\r\n\r\n  const handlePasswordChange = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    if (formData.newPassword !== formData.confirmPassword) {\r\n      showNotification({\r\n        type: 'error',\r\n        title: 'Password Mismatch',\r\n        message: 'New password and confirmation do not match'\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (formData.newPassword.length < 6) {\r\n      showNotification({\r\n        type: 'error',\r\n        title: 'Password Too Short',\r\n        message: 'Password must be at least 6 characters long'\r\n      });\r\n      return;\r\n    }\r\n\r\n    setSaving(true);\r\n    try {\r\n      await updatePassword(formData.newPassword);\r\n\r\n      // Update password changed timestamp in security settings\r\n      if (securitySettings) {\r\n        await updateUserSecuritySettings({\r\n          passwordChangedAt: new Date()\r\n        });\r\n      }\r\n\r\n      showNotification({\r\n        type: 'success',\r\n        title: 'Password Updated',\r\n        message: 'Your password has been updated successfully'\r\n      });\r\n      setFormData({\r\n        currentPassword: '',\r\n        newPassword: '',\r\n        confirmPassword: ''\r\n      });\r\n    } catch (error) {\r\n      showNotification({\r\n        type: 'error',\r\n        title: 'Update Failed',\r\n        message: error instanceof Error ? error.message : 'Failed to update password'\r\n      });\r\n    } finally {\r\n      setSaving(false);\r\n    }\r\n  };\r\n\r\n  const getPasswordStrength = (password: string) => {\r\n    let strength = 0;\r\n    if (password.length >= 8) strength++;\r\n    if (/[A-Z]/.test(password)) strength++;\r\n    if (/[a-z]/.test(password)) strength++;\r\n    if (/[0-9]/.test(password)) strength++;\r\n    if (/[^A-Za-z0-9]/.test(password)) strength++;\r\n    return strength;\r\n  };\r\n\r\n  const passwordStrength = getPasswordStrength(formData.newPassword);\r\n  const strengthLabels = ['Very Weak', 'Weak', 'Fair', 'Good', 'Strong'];\r\n  const strengthColors = ['bg-red-500', 'bg-orange-500', 'bg-yellow-500', 'bg-blue-500', 'bg-green-500'];\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"p-6\">\r\n        <div className=\"mb-6\">\r\n          <h2 className=\"text-2xl font-bold text-gray-900\">Security Settings</h2>\r\n          <p className=\"text-gray-600 mt-1\">Manage your password and security preferences</p>\r\n        </div>\r\n        <div className=\"animate-pulse space-y-4\">\r\n          {[1, 2, 3, 4].map((i) => (\r\n            <div key={i} className=\"bg-gray-200 h-24 rounded-lg\"></div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"p-6\">\r\n      <div className=\"mb-6\">\r\n        <h2 className=\"text-2xl font-bold text-gray-900\">Security Settings</h2>\r\n        <p className=\"text-gray-600 mt-1\">Manage your password and security preferences</p>\r\n      </div>\r\n\r\n      {error && (\r\n        <div className=\"mb-6 bg-red-50 border border-red-200 rounded-lg p-4\">\r\n          <div className=\"flex items-center gap-3\">\r\n            <AlertTriangle className=\"h-5 w-5 text-red-600\" />\r\n            <div>\r\n              <h3 className=\"text-sm font-medium text-red-800\">Error</h3>\r\n              <p className=\"text-sm text-red-700 mt-1\">{error}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"space-y-8\">\r\n        {/* Password Change Section */}\r\n        <div className=\"bg-gray-50 rounded-lg p-6\">\r\n          <div className=\"flex items-center gap-3 mb-4\">\r\n            <Lock className=\"h-5 w-5 text-gray-600\" />\r\n            <h3 className=\"text-lg font-semibold text-gray-900\">Change Password</h3>\r\n          </div>\r\n\r\n          <form onSubmit={handlePasswordChange} className=\"space-y-4\">\r\n            <div>\r\n              <label htmlFor=\"currentPassword\" className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Current Password\r\n              </label>\r\n              <div className=\"relative\">\r\n                <input\r\n                  type={showPasswords.current ? 'text' : 'password'}\r\n                  id=\"currentPassword\"\r\n                  name=\"currentPassword\"\r\n                  value={formData.currentPassword}\r\n                  onChange={handleInputChange}\r\n                  required\r\n                  className=\"input-field pr-10\"\r\n                  placeholder=\"Enter your current password\"\r\n                />\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => togglePasswordVisibility('current')}\r\n                  className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600\"\r\n                >\r\n                  {showPasswords.current ? <EyeOff className=\"h-4 w-4\" /> : <Eye className=\"h-4 w-4\" />}\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            <div>\r\n              <label htmlFor=\"newPassword\" className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                New Password\r\n              </label>\r\n              <div className=\"relative\">\r\n                <input\r\n                  type={showPasswords.new ? 'text' : 'password'}\r\n                  id=\"newPassword\"\r\n                  name=\"newPassword\"\r\n                  value={formData.newPassword}\r\n                  onChange={handleInputChange}\r\n                  required\r\n                  className=\"input-field pr-10\"\r\n                  placeholder=\"Enter your new password\"\r\n                />\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => togglePasswordVisibility('new')}\r\n                  className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600\"\r\n                >\r\n                  {showPasswords.new ? <EyeOff className=\"h-4 w-4\" /> : <Eye className=\"h-4 w-4\" />}\r\n                </button>\r\n              </div>\r\n              \r\n              {/* Password Strength Indicator */}\r\n              {formData.newPassword && (\r\n                <div className=\"mt-2\">\r\n                  <div className=\"flex items-center gap-2 mb-1\">\r\n                    <div className=\"flex gap-1\">\r\n                      {[1, 2, 3, 4, 5].map((level) => (\r\n                        <div\r\n                          key={level}\r\n                          className={`h-2 w-6 rounded-full ${\r\n                            level <= passwordStrength ? strengthColors[passwordStrength - 1] : 'bg-gray-200'\r\n                          }`}\r\n                        />\r\n                      ))}\r\n                    </div>\r\n                    <span className=\"text-xs text-gray-600\">\r\n                      {passwordStrength > 0 ? strengthLabels[passwordStrength - 1] : 'Very Weak'}\r\n                    </span>\r\n                  </div>\r\n                  <ul className=\"text-xs text-gray-500 space-y-1\">\r\n                    <li className={formData.newPassword.length >= 8 ? 'text-green-600' : ''}>\r\n                      ‚Ä¢ At least 8 characters\r\n                    </li>\r\n                    <li className={/[A-Z]/.test(formData.newPassword) ? 'text-green-600' : ''}>\r\n                      ‚Ä¢ One uppercase letter\r\n                    </li>\r\n                    <li className={/[a-z]/.test(formData.newPassword) ? 'text-green-600' : ''}>\r\n                      ‚Ä¢ One lowercase letter\r\n                    </li>\r\n                    <li className={/[0-9]/.test(formData.newPassword) ? 'text-green-600' : ''}>\r\n                      ‚Ä¢ One number\r\n                    </li>\r\n                    <li className={/[^A-Za-z0-9]/.test(formData.newPassword) ? 'text-green-600' : ''}>\r\n                      ‚Ä¢ One special character\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            <div>\r\n              <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Confirm New Password\r\n              </label>\r\n              <div className=\"relative\">\r\n                <input\r\n                  type={showPasswords.confirm ? 'text' : 'password'}\r\n                  id=\"confirmPassword\"\r\n                  name=\"confirmPassword\"\r\n                  value={formData.confirmPassword}\r\n                  onChange={handleInputChange}\r\n                  required\r\n                  className=\"input-field pr-10\"\r\n                  placeholder=\"Confirm your new password\"\r\n                />\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => togglePasswordVisibility('confirm')}\r\n                  className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600\"\r\n                >\r\n                  {showPasswords.confirm ? <EyeOff className=\"h-4 w-4\" /> : <Eye className=\"h-4 w-4\" />}\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            <motion.button\r\n              type=\"submit\"\r\n              disabled={saving}\r\n              className={`btn-primary ${saving ? 'opacity-70 cursor-not-allowed' : ''}`}\r\n              whileHover={saving ? {} : { scale: 1.02 }}\r\n              whileTap={saving ? {} : { scale: 0.98 }}\r\n            >\r\n              {saving ? 'Updating...' : 'Update Password'}\r\n            </motion.button>\r\n          </form>\r\n        </div>\r\n\r\n        {/* Two-Factor Authentication */}\r\n        <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\r\n          <div className=\"flex items-center justify-between mb-4\">\r\n            <div className=\"flex items-center gap-3\">\r\n              <Shield className=\"h-5 w-5 text-indigo-600\" />\r\n              <h3 className=\"text-lg font-semibold text-gray-900\">Two-Factor Authentication</h3>\r\n            </div>\r\n            <div className=\"flex items-center\">\r\n              <label className=\"relative inline-flex items-center cursor-pointer\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"sr-only peer\"\r\n                  checked={securitySettings?.twoFactorEnabled || false}\r\n                  onChange={() => handleSecuritySettingChange('twoFactorEnabled', !securitySettings?.twoFactorEnabled)}\r\n                  disabled={saving}\r\n                />\r\n                <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-indigo-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-indigo-600\"></div>\r\n                <span className=\"ml-3 text-sm font-medium text-gray-700\">\r\n                  {securitySettings?.twoFactorEnabled ? 'Enabled' : 'Disabled'}\r\n                </span>\r\n              </label>\r\n            </div>\r\n          </div>\r\n\r\n          <p className=\"text-gray-600 mb-4\">\r\n            Two-factor authentication adds an extra layer of security to your account by requiring a second form of verification in addition to your password.\r\n          </p>\r\n\r\n          {securitySettings?.twoFactorEnabled && (\r\n            <div className=\"mt-4\">\r\n              <div className=\"mb-4\">\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Verification Method\r\n                </label>\r\n                <div className=\"flex gap-3\">\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => handleSecuritySettingChange('twoFactorMethod', 'email')}\r\n                    className={`px-4 py-2 rounded-lg flex items-center gap-2 ${\r\n                      securitySettings.twoFactorMethod === 'email'\r\n                        ? 'bg-indigo-100 text-indigo-700 border border-indigo-300'\r\n                        : 'bg-gray-100 text-gray-700 border border-gray-200'\r\n                    }`}\r\n                  >\r\n                    <Mail className=\"h-4 w-4\" />\r\n                    Email\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => handleSecuritySettingChange('twoFactorMethod', 'sms')}\r\n                    className={`px-4 py-2 rounded-lg flex items-center gap-2 ${\r\n                      securitySettings.twoFactorMethod === 'sms'\r\n                        ? 'bg-indigo-100 text-indigo-700 border border-indigo-300'\r\n                        : 'bg-gray-100 text-gray-700 border border-gray-200'\r\n                    }`}\r\n                  >\r\n                    <Smartphone className=\"h-4 w-4\" />\r\n                    SMS\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => handleSecuritySettingChange('twoFactorMethod', 'authenticator')}\r\n                    className={`px-4 py-2 rounded-lg flex items-center gap-2 ${\r\n                      securitySettings.twoFactorMethod === 'authenticator'\r\n                        ? 'bg-indigo-100 text-indigo-700 border border-indigo-300'\r\n                        : 'bg-gray-100 text-gray-700 border border-gray-200'\r\n                    }`}\r\n                  >\r\n                    <Settings className=\"h-4 w-4\" />\r\n                    Authenticator App\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              {securitySettings.twoFactorMethod === 'sms' && (\r\n                <div className=\"mb-4\">\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                    Phone Number for SMS Verification\r\n                  </label>\r\n                  <div className=\"flex gap-2\">\r\n                    <input\r\n                      type=\"tel\"\r\n                      className=\"input-field flex-1\"\r\n                      placeholder=\"Enter your phone number\"\r\n                      value={securitySettings.twoFactorPhone || ''}\r\n                      onChange={(e) => setSecuritySettings({\r\n                        ...securitySettings,\r\n                        twoFactorPhone: e.target.value\r\n                      })}\r\n                    />\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn-primary\"\r\n                      onClick={() => handleSecuritySettingChange('twoFactorPhone', securitySettings.twoFactorPhone)}\r\n                    >\r\n                      Save\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Security Alerts */}\r\n        <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\r\n          <div className=\"flex items-center justify-between mb-4\">\r\n            <div className=\"flex items-center gap-3\">\r\n              <AlertTriangle className=\"h-5 w-5 text-amber-600\" />\r\n              <h3 className=\"text-lg font-semibold text-gray-900\">Security Alerts</h3>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"space-y-4\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <h4 className=\"font-medium text-gray-900\">Login Alerts</h4>\r\n                <p className=\"text-sm text-gray-600\">Get notified when someone logs into your account</p>\r\n              </div>\r\n              <label className=\"relative inline-flex items-center cursor-pointer\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"sr-only peer\"\r\n                  checked={securitySettings?.loginAlerts || false}\r\n                  onChange={() => handleSecuritySettingChange('loginAlerts', !securitySettings?.loginAlerts)}\r\n                  disabled={saving}\r\n                />\r\n                <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-indigo-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-indigo-600\"></div>\r\n              </label>\r\n            </div>\r\n\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <h4 className=\"font-medium text-gray-900\">Suspicious Activity Alerts</h4>\r\n                <p className=\"text-sm text-gray-600\">Get notified about suspicious account activity</p>\r\n              </div>\r\n              <label className=\"relative inline-flex items-center cursor-pointer\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"sr-only peer\"\r\n                  checked={securitySettings?.suspiciousActivityAlerts || false}\r\n                  onChange={() => handleSecuritySettingChange('suspiciousActivityAlerts', !securitySettings?.suspiciousActivityAlerts)}\r\n                  disabled={saving}\r\n                />\r\n                <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-indigo-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-indigo-600\"></div>\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Security Tips */}\r\n        <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-6\">\r\n          <div className=\"flex items-center gap-3 mb-4\">\r\n            <Shield className=\"h-5 w-5 text-blue-600\" />\r\n            <h3 className=\"text-lg font-semibold text-blue-900\">Security Tips</h3>\r\n          </div>\r\n          <ul className=\"space-y-2 text-sm text-blue-800\">\r\n            <li>‚Ä¢ Use a unique password that you don't use anywhere else</li>\r\n            <li>‚Ä¢ Make your password at least 8 characters long</li>\r\n            <li>‚Ä¢ Include a mix of letters, numbers, and special characters</li>\r\n            <li>‚Ä¢ Don't share your password with anyone</li>\r\n            <li>‚Ä¢ Consider using a password manager</li>\r\n            <li>‚Ä¢ Enable two-factor authentication for extra security</li>\r\n          </ul>\r\n        </div>\r\n\r\n        {/* Account Security Status */}\r\n        <div className=\"bg-green-50 border border-green-200 rounded-lg p-6\">\r\n          <div className=\"flex items-center gap-3 mb-4\">\r\n            <Shield className=\"h-5 w-5 text-green-600\" />\r\n            <h3 className=\"text-lg font-semibold text-green-900\">Account Security Status</h3>\r\n          </div>\r\n          <div className=\"space-y-3\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <span className=\"text-sm text-green-800\">Email Verification</span>\r\n              <span className=\"text-xs bg-green-100 text-green-800 px-2 py-1 rounded-full\">Verified</span>\r\n            </div>\r\n            <div className=\"flex items-center justify-between\">\r\n              <span className=\"text-sm text-green-800\">Strong Password</span>\r\n              <span className=\"text-xs bg-green-100 text-green-800 px-2 py-1 rounded-full\">Active</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { CreditCard, Plus, Edit, Trash2, Star, AlertCircle } from 'lucide-react';\r\nimport { motion } from 'framer-motion';\r\nimport { useNotification } from '../../contexts/NotificationContext';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\nimport {\r\n  getUserPaymentMethods,\r\n  deletePaymentMethod,\r\n  setDefaultPaymentMethod\r\n} from '../../lib/supabase';\r\nimport { PaymentMethod } from '../../types';\r\n\r\nexport const PaymentSettings: React.FC = () => {\r\n  const { showNotification } = useNotification();\r\n  const { user } = useAuth();\r\n  const [paymentMethods, setPaymentMethods] = useState<PaymentMethod[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [saving, setSaving] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n\r\n\r\n  // Load payment methods from database\r\n  useEffect(() => {\r\n    const loadPaymentMethods = async () => {\r\n      if (!user) return;\r\n\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      try {\r\n        const methods = await getUserPaymentMethods();\r\n        setPaymentMethods(methods);\r\n      } catch (err) {\r\n        console.error('Error loading payment methods:', err);\r\n        setError('Failed to load payment methods. Please try again.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    loadPaymentMethods();\r\n  }, [user]);\r\n\r\n  const handleSetDefault = async (id: string) => {\r\n    if (!user) return;\r\n\r\n    setSaving(true);\r\n    try {\r\n      const success = await setDefaultPaymentMethod(id);\r\n\r\n      if (success) {\r\n        // Update local state\r\n        setPaymentMethods(prev =>\r\n          prev.map(method => ({\r\n            ...method,\r\n            isDefault: method.id === id\r\n          }))\r\n        );\r\n\r\n        showNotification({\r\n          type: 'success',\r\n          title: 'Default Payment Method',\r\n          message: 'Default payment method has been updated'\r\n        });\r\n      } else {\r\n        throw new Error('Failed to set default payment method');\r\n      }\r\n    } catch (err) {\r\n      console.error('Error setting default payment method:', err);\r\n      showNotification({\r\n        type: 'error',\r\n        title: 'Update Failed',\r\n        message: 'Failed to set default payment method'\r\n      });\r\n    } finally {\r\n      setSaving(false);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id: string) => {\r\n    if (!window.confirm('Are you sure you want to delete this payment method?')) {\r\n      return;\r\n    }\r\n\r\n    setSaving(true);\r\n    try {\r\n      const success = await deletePaymentMethod(id);\r\n\r\n      if (success) {\r\n        setPaymentMethods(prev => prev.filter(method => method.id !== id));\r\n        showNotification({\r\n          type: 'success',\r\n          title: 'Payment Method Deleted',\r\n          message: 'Payment method has been deleted successfully'\r\n        });\r\n      } else {\r\n        throw new Error('Failed to delete payment method');\r\n      }\r\n    } catch (err) {\r\n      console.error('Error deleting payment method:', err);\r\n      showNotification({\r\n        type: 'error',\r\n        title: 'Delete Failed',\r\n        message: 'Failed to delete payment method'\r\n      });\r\n    } finally {\r\n      setSaving(false);\r\n    }\r\n  };\r\n\r\n  const handleAddPaymentMethod = () => {\r\n    showNotification('Add payment method functionality coming soon', 'info');\r\n  };\r\n\r\n  const handleEditPaymentMethod = (method: PaymentMethod) => {\r\n    showNotification(`Edit payment method ${method.provider} functionality coming soon`, 'info');\r\n  };\r\n\r\n\r\n\r\n  const getCardIcon = (brand: string) => {\r\n    switch (brand.toLowerCase()) {\r\n      case 'visa':\r\n        return 'üí≥';\r\n      case 'mastercard':\r\n        return 'üí≥';\r\n      case 'amex':\r\n      case 'american express':\r\n        return 'üí≥';\r\n      case 'paypal':\r\n        return 'üí∞';\r\n      default:\r\n        return 'üí≥';\r\n    }\r\n  };\r\n\r\n\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"p-6\">\r\n        <div className=\"mb-6\">\r\n          <h2 className=\"text-2xl font-bold text-gray-900\">Payment Settings</h2>\r\n          <p className=\"text-gray-600 mt-1\">Manage your payment methods and billing information</p>\r\n        </div>\r\n        <div className=\"animate-pulse space-y-4\">\r\n          {[1, 2, 3].map((i) => (\r\n            <div key={i} className=\"bg-gray-200 h-32 rounded-lg\"></div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"p-6\">\r\n      <div className=\"mb-6\">\r\n        <h2 className=\"text-2xl font-bold text-gray-900\">Payment Methods</h2>\r\n        <p className=\"text-gray-600 mt-1\">Manage your payment methods and billing information</p>\r\n      </div>\r\n\r\n      {error && (\r\n        <div className=\"mb-6 bg-red-50 border border-red-200 rounded-lg p-4\">\r\n          <div className=\"flex items-center gap-3\">\r\n            <AlertCircle className=\"h-5 w-5 text-red-600\" />\r\n            <div>\r\n              <h3 className=\"text-sm font-medium text-red-800\">Error</h3>\r\n              <p className=\"text-sm text-red-700 mt-1\">{error}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"space-y-6\">\r\n        {/* Add New Payment Method */}\r\n        <div className=\"bg-gray-50 border-2 border-dashed border-gray-300 rounded-lg p-6 text-center hover:border-indigo-300 transition-colors\">\r\n          <CreditCard className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\r\n          <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Add New Payment Method</h3>\r\n          <p className=\"text-gray-600 mb-4\">Add a credit card, debit card, or PayPal account</p>\r\n          <motion.button\r\n            className=\"btn-primary flex items-center gap-2 mx-auto\"\r\n            whileHover={{ scale: 1.02 }}\r\n            whileTap={{ scale: 0.98 }}\r\n            onClick={handleAddPaymentMethod}\r\n          >\r\n            <Plus className=\"h-4 w-4\" />\r\n            Add Payment Method\r\n          </motion.button>\r\n        </div>\r\n\r\n        {/* Existing Payment Methods */}\r\n        <div>\r\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Your Payment Methods</h3>\r\n          <div className=\"space-y-4\">\r\n            {paymentMethods.map((method, index) => (\r\n              <motion.div\r\n                key={method.id}\r\n                initial={{ opacity: 0, y: 20 }}\r\n                animate={{ opacity: 1, y: 0 }}\r\n                transition={{ delay: index * 0.1 }}\r\n                className=\"bg-white border border-gray-200 rounded-lg p-6 hover:shadow-md transition-shadow\"\r\n              >\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div className=\"flex items-center gap-4\">\r\n                    <div className=\"text-2xl\">{getCardIcon(method.provider)}</div>\r\n                    <div>\r\n                      <div className=\"flex items-center gap-2\">\r\n                        <span className=\"font-medium text-gray-900\">\r\n                          {method.provider} ‚Ä¢‚Ä¢‚Ä¢‚Ä¢ {method.lastFour}\r\n                        </span>\r\n                        {method.isDefault && (\r\n                          <Star className=\"h-4 w-4 text-yellow-500 fill-current\" />\r\n                        )}\r\n                      </div>\r\n                      <p className=\"text-sm text-gray-600\">\r\n                        {method.holderName} ‚Ä¢ Expires {method.expiryMonth?.toString().padStart(2, '0')}/{method.expiryYear}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  <div className=\"flex items-center gap-2\">\r\n                    {!method.isDefault && (\r\n                      <button\r\n                        onClick={() => handleSetDefault(method.id)}\r\n                        className=\"text-sm px-3 py-1 bg-gray-100 text-gray-700 rounded-md hover:bg-gray-200 transition-colors\"\r\n                      >\r\n                        Set as Default\r\n                      </button>\r\n                    )}\r\n                    <button\r\n                      onClick={() => handleEditPaymentMethod(method)}\r\n                      className=\"p-2 text-gray-400 hover:text-indigo-600 transition-colors\"\r\n                      disabled={saving}\r\n                    >\r\n                      <Edit className=\"h-4 w-4\" />\r\n                    </button>\r\n                    <button\r\n                      onClick={() => handleDelete(method.id!)}\r\n                      className=\"p-2 text-gray-400 hover:text-red-600 transition-colors\"\r\n                      disabled={saving}\r\n                    >\r\n                      <Trash2 className=\"h-4 w-4\" />\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </motion.div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Billing Information */}\r\n        <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-6\">\r\n          <h3 className=\"text-lg font-semibold text-blue-900 mb-4\">Billing Information</h3>\r\n          <div className=\"space-y-3 text-sm text-blue-800\">\r\n            <div className=\"flex justify-between\">\r\n              <span>Billing Address:</span>\r\n              <span>Same as shipping address</span>\r\n            </div>\r\n            <div className=\"flex justify-between\">\r\n              <span>Tax ID:</span>\r\n              <span>Not provided</span>\r\n            </div>\r\n            <div className=\"flex justify-between\">\r\n              <span>Currency:</span>\r\n              <span>USD ($)</span>\r\n            </div>\r\n          </div>\r\n          <button className=\"mt-4 text-sm text-blue-700 hover:text-blue-800 font-medium\">\r\n            Update Billing Information\r\n          </button>\r\n        </div>\r\n\r\n        {/* Security Notice */}\r\n        <div className=\"bg-green-50 border border-green-200 rounded-lg p-6\">\r\n          <h3 className=\"text-lg font-semibold text-green-900 mb-2\">Security & Privacy</h3>\r\n          <ul className=\"space-y-2 text-sm text-green-800\">\r\n            <li>‚Ä¢ All payment information is encrypted and secure</li>\r\n            <li>‚Ä¢ We never store your full credit card numbers</li>\r\n            <li>‚Ä¢ Payments are processed by trusted payment providers</li>\r\n            <li>‚Ä¢ You can remove payment methods at any time</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\nimport { Database, Shield, Globe, Save } from 'lucide-react';\r\nimport { motion } from 'framer-motion';\r\nimport { useNotification } from '../../contexts/NotificationContext';\r\n\r\nexport const AdminSettings: React.FC = () => {\r\n  const { showNotification } = useNotification();\r\n  const [loading, setLoading] = useState(false);\r\n  const [settings, setSettings] = useState({\r\n    site: {\r\n      siteName: 'E-Commerce Platform',\r\n      siteDescription: 'Your one-stop shop for everything',\r\n      maintenanceMode: false,\r\n      allowRegistration: true,\r\n      requireEmailVerification: true\r\n    },\r\n    email: {\r\n      smtpHost: 'smtp.gmail.com',\r\n      smtpPort: '587',\r\n      smtpUser: '',\r\n      smtpPassword: '',\r\n      fromEmail: 'noreply@ecommerce.com',\r\n      fromName: 'E-Commerce Platform'\r\n    },\r\n    security: {\r\n      sessionTimeout: '24',\r\n      maxLoginAttempts: '5',\r\n      passwordMinLength: '8',\r\n      requireStrongPassword: true,\r\n      enableTwoFactor: false\r\n    },\r\n    data: {\r\n      dataMode: 'real',\r\n      autoBackup: true,\r\n      backupFrequency: 'daily',\r\n      retentionDays: '30'\r\n    }\r\n  });\r\n\r\n  const handleInputChange = (section: keyof typeof settings, field: string, value: string | boolean) => {\r\n    setSettings(prev => ({\r\n      ...prev,\r\n      [section]: {\r\n        ...prev[section],\r\n        [field]: value\r\n      }\r\n    }));\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    setLoading(true);\r\n    try {\r\n      // In a real app, you would save to the backend\r\n      await new Promise(resolve => setTimeout(resolve, 1500));\r\n      \r\n      showNotification({\r\n        type: 'success',\r\n        title: 'Settings Saved',\r\n        message: 'Admin settings have been updated successfully'\r\n      });\r\n    } catch {\r\n      showNotification({\r\n        type: 'error',\r\n        title: 'Save Failed',\r\n        message: 'Failed to save admin settings'\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const toggleDataMode = () => {\r\n    const newMode = settings.data.dataMode === 'real' ? 'mock' : 'real';\r\n    handleInputChange('data', 'dataMode', newMode);\r\n    localStorage.setItem('ecommerce_data_mode', newMode);\r\n    \r\n    showNotification({\r\n      type: 'info',\r\n      title: 'Data Mode Changed',\r\n      message: `Switched to ${newMode} data mode. Refresh the page to see changes.`\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-6\">\r\n      <div className=\"mb-6\">\r\n        <h2 className=\"text-2xl font-bold text-gray-900\">Admin Settings</h2>\r\n        <p className=\"text-gray-600 mt-1\">Configure system-wide settings and preferences</p>\r\n      </div>\r\n\r\n      <div className=\"space-y-8\">\r\n        {/* Site Settings */}\r\n        <div className=\"bg-white border border-gray-200 rounded-lg p-6\">\r\n          <div className=\"flex items-center gap-3 mb-4\">\r\n            <Globe className=\"h-5 w-5 text-gray-600\" />\r\n            <h3 className=\"text-lg font-semibold text-gray-900\">Site Settings</h3>\r\n          </div>\r\n          \r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">Site Name</label>\r\n              <input\r\n                type=\"text\"\r\n                value={settings.site.siteName}\r\n                onChange={(e) => handleInputChange('site', 'siteName', e.target.value)}\r\n                className=\"input-field\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">Site Description</label>\r\n              <input\r\n                type=\"text\"\r\n                value={settings.site.siteDescription}\r\n                onChange={(e) => handleInputChange('site', 'siteDescription', e.target.value)}\r\n                className=\"input-field\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"mt-4 space-y-3\">\r\n            <label className=\"flex items-center\">\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={settings.site.maintenanceMode}\r\n                onChange={(e) => handleInputChange('site', 'maintenanceMode', e.target.checked)}\r\n                className=\"form-checkbox h-4 w-4 text-indigo-600\"\r\n              />\r\n              <span className=\"ml-2 text-sm text-gray-700\">Maintenance Mode</span>\r\n            </label>\r\n            <label className=\"flex items-center\">\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={settings.site.allowRegistration}\r\n                onChange={(e) => handleInputChange('site', 'allowRegistration', e.target.checked)}\r\n                className=\"form-checkbox h-4 w-4 text-indigo-600\"\r\n              />\r\n              <span className=\"ml-2 text-sm text-gray-700\">Allow User Registration</span>\r\n            </label>\r\n            <label className=\"flex items-center\">\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={settings.site.requireEmailVerification}\r\n                onChange={(e) => handleInputChange('site', 'requireEmailVerification', e.target.checked)}\r\n                className=\"form-checkbox h-4 w-4 text-indigo-600\"\r\n              />\r\n              <span className=\"ml-2 text-sm text-gray-700\">Require Email Verification</span>\r\n            </label>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Data Management */}\r\n        <div className=\"bg-white border border-gray-200 rounded-lg p-6\">\r\n          <div className=\"flex items-center gap-3 mb-4\">\r\n            <Database className=\"h-5 w-5 text-gray-600\" />\r\n            <h3 className=\"text-lg font-semibold text-gray-900\">Data Management</h3>\r\n          </div>\r\n          \r\n          <div className=\"space-y-4\">\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">Data Mode</label>\r\n              <div className=\"flex items-center gap-4\">\r\n                <button\r\n                  onClick={toggleDataMode}\r\n                  className={`px-4 py-2 rounded-lg font-medium transition-colors ${\r\n                    settings.data.dataMode === 'real'\r\n                      ? 'bg-green-100 text-green-700 border border-green-200'\r\n                      : 'bg-blue-100 text-blue-700 border border-blue-200'\r\n                  }`}\r\n                >\r\n                  {settings.data.dataMode === 'real' ? 'Real Data Mode' : 'Mock Data Mode'}\r\n                </button>\r\n                <span className=\"text-sm text-gray-600\">\r\n                  {settings.data.dataMode === 'real' \r\n                    ? 'Using live database data' \r\n                    : 'Using demonstration data'\r\n                  }\r\n                </span>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">Backup Frequency</label>\r\n                <select\r\n                  value={settings.data.backupFrequency}\r\n                  onChange={(e) => handleInputChange('data', 'backupFrequency', e.target.value)}\r\n                  className=\"input-field\"\r\n                >\r\n                  <option value=\"hourly\">Hourly</option>\r\n                  <option value=\"daily\">Daily</option>\r\n                  <option value=\"weekly\">Weekly</option>\r\n                  <option value=\"monthly\">Monthly</option>\r\n                </select>\r\n              </div>\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">Retention Days</label>\r\n                <input\r\n                  type=\"number\"\r\n                  value={settings.data.retentionDays}\r\n                  onChange={(e) => handleInputChange('data', 'retentionDays', e.target.value)}\r\n                  className=\"input-field\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <label className=\"flex items-center\">\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={settings.data.autoBackup}\r\n                onChange={(e) => handleInputChange('data', 'autoBackup', e.target.checked)}\r\n                className=\"form-checkbox h-4 w-4 text-indigo-600\"\r\n              />\r\n              <span className=\"ml-2 text-sm text-gray-700\">Enable Automatic Backups</span>\r\n            </label>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Security Settings */}\r\n        <div className=\"bg-white border border-gray-200 rounded-lg p-6\">\r\n          <div className=\"flex items-center gap-3 mb-4\">\r\n            <Shield className=\"h-5 w-5 text-gray-600\" />\r\n            <h3 className=\"text-lg font-semibold text-gray-900\">Security Settings</h3>\r\n          </div>\r\n          \r\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">Session Timeout (hours)</label>\r\n              <input\r\n                type=\"number\"\r\n                value={settings.security.sessionTimeout}\r\n                onChange={(e) => handleInputChange('security', 'sessionTimeout', e.target.value)}\r\n                className=\"input-field\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">Max Login Attempts</label>\r\n              <input\r\n                type=\"number\"\r\n                value={settings.security.maxLoginAttempts}\r\n                onChange={(e) => handleInputChange('security', 'maxLoginAttempts', e.target.value)}\r\n                className=\"input-field\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">Min Password Length</label>\r\n              <input\r\n                type=\"number\"\r\n                value={settings.security.passwordMinLength}\r\n                onChange={(e) => handleInputChange('security', 'passwordMinLength', e.target.value)}\r\n                className=\"input-field\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"mt-4 space-y-3\">\r\n            <label className=\"flex items-center\">\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={settings.security.requireStrongPassword}\r\n                onChange={(e) => handleInputChange('security', 'requireStrongPassword', e.target.checked)}\r\n                className=\"form-checkbox h-4 w-4 text-indigo-600\"\r\n              />\r\n              <span className=\"ml-2 text-sm text-gray-700\">Require Strong Passwords</span>\r\n            </label>\r\n            <label className=\"flex items-center\">\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={settings.security.enableTwoFactor}\r\n                onChange={(e) => handleInputChange('security', 'enableTwoFactor', e.target.checked)}\r\n                className=\"form-checkbox h-4 w-4 text-indigo-600\"\r\n              />\r\n              <span className=\"ml-2 text-sm text-gray-700\">Enable Two-Factor Authentication</span>\r\n            </label>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Save Button */}\r\n        <div className=\"flex justify-end pt-6 border-t border-gray-200\">\r\n          <motion.button\r\n            onClick={handleSave}\r\n            disabled={loading}\r\n            className=\"btn-primary flex items-center gap-2\"\r\n            whileHover={{ scale: 1.02 }}\r\n            whileTap={{ scale: 0.98 }}\r\n          >\r\n            <Save className=\"h-4 w-4\" />\r\n            {loading ? 'Saving...' : 'Save Settings'}\r\n          </motion.button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"],"names":["ProfileSettings","user","updateProfile","useAuth","showNotification","useNotification","loading","setLoading","useState","errors","setErrors","success","setSuccess","formData","setFormData","name","email","phone","dateOfBirth","avatar","bio","location","website","useEffect","handleInputChange","e","value","target","prev","jsxs","className","children","jsx","Check","onSubmit","async","preventDefault","newErrors","trim","length","test","replace","birthDate","Date","getFullYear","Object","keys","validateForm","type","title","message","error","Error","src","alt","User","htmlFor","Camera","id","accept","onChange","file","_a","files","reader","FileReader","onload","event","result","readAsDataURL","required","placeholder","Mail","disabled","Phone","Calendar","role","motion","button","whileHover","scale","whileTap","Fragment","xmlns","fill","viewBox","cx","cy","r","stroke","strokeWidth","d","Save","NotificationSettings","saving","setSaving","setError","settings","setSettings","orderUpdates","promotions","newsletter","security","productUpdates","push","sms","userPreferences","getUserPreferences","setPreferences","emailOrderUpdates","emailPromotions","emailNewsletter","emailSecurity","emailProductUpdates","pushOrderUpdates","pushPromotions","pushNewsletter","pushSecurity","pushProductUpdates","smsOrderUpdates","smsPromotions","smsNewsletter","smsSecurity","smsProductUpdates","err","loadPreferences","handleToggle","category","setting","map","i","AlertCircle","Bell","Smartphone","key","description","checked","onClick","reduce","acc","updatedPreferences","userId","updateUserPreferences","SecuritySettings","updatePassword","securitySettings","setSecuritySettings","showPasswords","setShowPasswords","current","new","confirm","currentPassword","newPassword","confirmPassword","getUserSecuritySettings","loadSecuritySettings","togglePasswordVisibility","field","handleSecuritySettingChange","updatedSettings","updateUserSecuritySettings","passwordStrength","password","strength","getPasswordStrength","strengthColors","AlertTriangle","Lock","passwordChangedAt","EyeOff","Eye","level","Shield","twoFactorEnabled","twoFactorMethod","Settings","twoFactorPhone","loginAlerts","suspiciousActivityAlerts","PaymentSettings","paymentMethods","setPaymentMethods","methods","getUserPaymentMethods","loadPaymentMethods","getCardIcon","brand","toLowerCase","CreditCard","Plus","method","index","div","initial","opacity","y","animate","transition","delay","provider","lastFour","isDefault","Star","holderName","expiryMonth","toString","padStart","expiryYear","setDefaultPaymentMethod","handleSetDefault","handleEditPaymentMethod","Edit","window","deletePaymentMethod","filter","handleDelete","Trash2","AdminSettings","site","siteName","siteDescription","maintenanceMode","allowRegistration","requireEmailVerification","smtpHost","smtpPort","smtpUser","smtpPassword","fromEmail","fromName","sessionTimeout","maxLoginAttempts","passwordMinLength","requireStrongPassword","enableTwoFactor","data","dataMode","autoBackup","backupFrequency","retentionDays","section","Globe","Database","newMode","localStorage","setItem","Promise","resolve","setTimeout"],"mappings":"kXAOO,MAAMA,EAA4B,KACvC,MAAMC,KAAEA,EAAAC,cAAMA,GAAkBC,KAC1BC,iBAAEA,GAAqBC,KACtBC,EAASC,GAAcC,EAAAA,UAAS,IAChCC,EAAQC,GAAaF,EAAAA,SAAiC,CAAA,IACtDG,EAASC,GAAcJ,EAAAA,UAAkB,IACzCK,EAAUC,GAAeN,WAAS,CACvCO,KAAM,GACNC,MAAO,GACPC,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,IAAK,GACLC,SAAU,GACVC,QAAS,KAGXC,EAAAA,UAAU,KACJtB,GAEFa,EAAY,CACVC,KAAMd,EAAKc,MAAQ,GACnBC,MAAOf,EAAKe,OAAS,GACrBC,MAAOhB,EAAKgB,OAAS,GACrBC,YAAajB,EAAKiB,aAAe,GACjCC,OAAQlB,EAAKkB,QAAU,GACvBC,IAAK,GACLC,SAAU,GACVC,QAAS,MAGZ,CAACrB,IAEJ,MAoCMuB,EAAqBC,IACzB,MAAMV,KAAEA,EAAAW,MAAMA,GAAUD,EAAEE,OAC1Bb,EAAYc,IAAA,IACPA,EACHb,CAACA,GAAOW,KAINjB,EAAOM,IACTL,EAAUkB,IAAA,IACLA,EACHb,CAACA,GAAO,MAKRJ,GACFC,GAAW,IA8Df,SACEiB,KAAC,MAAA,CAAIC,UAAU,MACbC,SAAA,GAAAF,KAAC,MAAA,CAAIC,UAAU,OACbC,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAGF,UAAU,mCAAmCC,SAAA,qBACjDC,EAAAA,IAAC,IAAA,CAAEF,UAAU,qBAAqBC,SAAA,wDAGnCpB,SACE,MAAA,CAAImB,UAAU,0DACbC,SAAAF,EAAAA,KAAC,MAAA,CAAIC,UAAU,0BACbC,SAAA,GAAAC,IAACC,EAAA,CAAMH,UAAU,kCAChB,MAAA,CACCC,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAGF,UAAU,qCAAqCC,SAAA,oBACnDC,EAAAA,IAAC,IAAA,CAAEF,UAAU,8BAA8BC,SAAA,uDAMnDF,EAAAA,KAAC,OAAA,CAAKK,SA7EWC,MAAOV,IAE1B,GADAA,EAAEW,iBACGnC,GA3Dc,MACnB,MAAMoC,EAAoC,CAAA,EAkB1C,GAhBKxB,EAASE,KAAKuB,OAERzB,EAASE,KAAKuB,OAAOC,OAAS,IACvCF,EAAUtB,KAAO,sCAFjBsB,EAAUtB,KAAO,mBAKdF,EAASG,MAAMsB,OAER,6BAA6BE,KAAK3B,EAASG,SACrDqB,EAAUrB,MAAQ,sCAFlBqB,EAAUrB,MAAQ,oBAKhBH,EAASI,QAAU,wBAAwBuB,KAAK3B,EAASI,MAAMwB,QAAQ,MAAO,OAChFJ,EAAUpB,MAAQ,qCAGhBJ,EAASK,YAAa,CACxB,MAAMwB,EAAY,IAAIC,KAAK9B,EAASK,kBAClByB,MACAC,cAAgBF,EAAUE,cAClC,KACRP,EAAUnB,YAAc,oCAE5B,CAOA,OALIL,EAASS,UAAY,iBAAiBkB,KAAK3B,EAASS,WACtDe,EAAUf,QAAU,gEAGtBZ,EAAU2B,GAC+B,IAAlCQ,OAAOC,KAAKT,GAAWE,QA4BzBQ,GAAL,CAIAxC,GAAW,GACXG,EAAU,CAAA,GAEV,UAIQR,EAAc,CAClBa,KAAMF,EAASE,KACfE,MAAOJ,EAASI,MAChBC,YAAaL,EAASK,YACtBC,OAAQN,EAASM,SAGnBP,GAAW,GACXR,EAAiB,CACf4C,KAAM,UACNC,MAAO,kBACPC,QAAS,8CAIb,OAASC,GAEP/C,EAAiB,CACf4C,KAAM,QACNC,MAAO,gBACPC,QAASC,aAAiBC,MAAQD,EAAMD,QAAU,iDAEtD,CAAA,QACE3C,GAAW,EACb,CAjCA,GAuEgCuB,UAAU,YAEtCC,SAAA,GAAAF,KAAC,MAAA,CAAIC,UAAU,0BACbC,SAAA,GAAAF,KAAC,MAAA,CAAIC,UAAU,WACbC,SAAA,CAAAC,EAAAA,IAAC,MAAA,CAAIF,UAAU,sFACZC,SAAAlB,EAASM,OACRa,EAAAA,IAAC,MAAA,CACCqB,IAAKxC,EAASM,OACdmC,IAAI,UACJxB,UAAU,iCAGZE,IAACuB,EAAA,CAAKzB,UAAU,8BAGpBD,EAAAA,KAAC,QAAA,CACC2B,QAAQ,gBACR1B,UAAU,2HAEVC,SAAA,GAAAC,IAACyB,EAAA,CAAO3B,UAAU,YAClBE,EAAAA,IAAC,QAAA,CACC0B,GAAG,gBACHV,KAAK,OACLW,OAAO,UACPC,SA3DcnC,UAC1B,MAAMoC,EAAO,OAAAC,EAAArC,EAAEE,OAAOoC,YAAT,EAAAD,EAAiB,GAC9B,GAAID,EAAM,CAER,MAAMG,EAAS,IAAIC,WACnBD,EAAOE,OAAUC,UACf,MAAMC,EAAS,OAAAN,EAAAK,EAAMxC,eAANmC,EAAcM,OAC7BtD,EAAYc,IAAA,IACPA,EACHT,OAAQiD,MAGZJ,EAAOK,cAAcR,EACvB,GA+CY/B,UAAU,wBAIf,MAAA,CACCC,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAGF,UAAU,oCAAoCC,SAAA,kBAClDC,EAAAA,IAAC,IAAA,CAAEF,UAAU,wBAAwBC,SAAA,uCAKzCF,KAAC,MAAA,CAAIC,UAAU,wCACbC,SAAA,CAAAF,OAAC,MAAA,CACCE,SAAA,CAAAF,EAAAA,KAAC,QAAA,CAAM2B,QAAQ,OAAO1B,UAAU,+CAA+CC,SAAA,CAAA,aACnEC,EAAAA,IAAC,OAAA,CAAKF,UAAU,eAAeC,SAAA,WAE3CF,KAAC,MAAA,CAAIC,UAAU,WACbC,SAAA,CAAAC,EAAAA,IAAC,OAAIF,UAAU,uEACbC,eAACwB,EAAA,CAAKzB,UAAU,4BAElBE,EAAAA,IAAC,QAAA,CACCgB,KAAK,OACLU,GAAG,OACH3C,KAAK,OACLW,MAAOb,EAASE,KAChB6C,SAAUpC,EACV8C,UAAQ,EACRxC,UAAW,sBAAqBrB,EAAOM,KAAO,iBAAmB,IACjEwD,YAAY,4BAGf9D,EAAOM,MACNiB,EAAAA,IAAC,KAAEF,UAAU,4BAA6BC,WAAOhB,iBAIpD,MAAA,CACCgB,SAAA,CAAAF,EAAAA,KAAC,QAAA,CAAM2B,QAAQ,QAAQ1B,UAAU,+CAA+CC,SAAA,CAAA,iBAChEC,EAAAA,IAAC,OAAA,CAAKF,UAAU,eAAeC,SAAA,WAE/CF,KAAC,MAAA,CAAIC,UAAU,WACbC,SAAA,CAAAC,EAAAA,IAAC,OAAIF,UAAU,uEACbC,eAACyC,EAAA,CAAK1C,UAAU,4BAElBE,EAAAA,IAAC,QAAA,CACCgB,KAAK,QACLU,GAAG,QACH3C,KAAK,QACLW,MAAOb,EAASG,MAChByD,UAAQ,EACR3C,UAAU,kDACVyC,YAAY,+BAGhBvC,EAAAA,IAAC,IAAA,CAAEF,UAAU,6BAA6BC,SAAA,8CAG3C,MAAA,CACCA,SAAA,CAAAC,MAAC,QAAA,CAAMwB,QAAQ,QAAQ1B,UAAU,+CAA+CC,SAAA,mBAGhFF,KAAC,MAAA,CAAIC,UAAU,WACbC,SAAA,CAAAC,EAAAA,IAAC,OAAIF,UAAU,uEACbC,eAAC2C,EAAA,CAAM5C,UAAU,4BAEnBE,EAAAA,IAAC,QAAA,CACCgB,KAAK,MACLU,GAAG,QACH3C,KAAK,QACLW,MAAOb,EAASI,MAChB2C,SAAUpC,EACVM,UAAW,sBAAqBrB,EAAOQ,MAAQ,iBAAmB,IAClEsD,YAAY,+BAGf9D,EAAOQ,OACNe,EAAAA,IAAC,KAAEF,UAAU,4BAA6BC,WAAOd,kBAIpD,MAAA,CACCc,SAAA,CAAAC,MAAC,QAAA,CAAMwB,QAAQ,cAAc1B,UAAU,+CAA+CC,SAAA,oBAGtFF,KAAC,MAAA,CAAIC,UAAU,WACbC,SAAA,CAAAC,EAAAA,IAAC,OAAIF,UAAU,uEACbC,eAAC4C,EAAA,CAAS7C,UAAU,4BAEtBE,EAAAA,IAAC,QAAA,CACCgB,KAAK,OACLU,GAAG,cACH3C,KAAK,cACLW,MAAOb,EAASK,YAChB0C,SAAUpC,EACVM,UAAW,sBAAqBrB,EAAOS,YAAc,iBAAmB,SAG3ET,EAAOS,aACNc,EAAAA,IAAC,KAAEF,UAAU,4BAA6BC,WAAOb,mBAIrDW,KAAC,MAAA,CAAIC,UAAU,gBACbC,SAAA,CAAAC,MAAC,QAAA,CAAMwB,QAAQ,MAAM1B,UAAU,+CAA+CC,SAAA,QAG9EC,EAAAA,IAAC,WAAA,CACC0B,GAAG,MACH3C,KAAK,MACLW,MAAOb,EAASO,IAChBwC,SAAUpC,EACVM,UAAU,4BACVyC,YAAY,8CAIf,MAAA,CACCxC,SAAA,CAAAC,MAAC,QAAA,CAAMwB,QAAQ,WAAW1B,UAAU,+CAA+CC,SAAA,aAGnFC,EAAAA,IAAC,QAAA,CACCgB,KAAK,OACLU,GAAG,WACH3C,KAAK,WACLW,MAAOb,EAASQ,SAChBuC,SAAUpC,EACVM,UAAU,cACVyC,YAAY,4BAIf,MAAA,CACCxC,SAAA,CAAAC,MAAC,QAAA,CAAMwB,QAAQ,UAAU1B,UAAU,+CAA+CC,SAAA,YAGlFC,EAAAA,IAAC,QAAA,CACCgB,KAAK,MACLU,GAAG,UACH3C,KAAK,UACLW,MAAOb,EAASS,QAChBsC,SAAUpC,EACVM,UAAW,gBAAerB,EAAOa,QAAU,iBAAmB,IAC9DiD,YAAY,wBAEb9D,EAAOa,SACNU,EAAAA,IAAC,KAAEF,UAAU,4BAA6BC,WAAOT,uBAMtD,MAAA,CACCS,SAAA,CAAAC,EAAAA,IAAC,QAAA,CAAMF,UAAU,+CAA+CC,SAAA,mBAGhEF,KAAC,MAAA,CAAIC,UAAU,yDACbC,SAAA,CAAAC,EAAAA,IAAC,OAAA,CAAKF,UAAU,uCAAwCC,SAAA,MAAA9B,OAAA,EAAAA,EAAM2E,OAC9D5C,EAAAA,IAAC,IAAA,CAAEF,UAAU,6BAA6BC,SAAA,2EAO9CC,IAAC,MAAA,CAAIF,UAAU,iDACbC,SAAAC,EAAAA,IAAC6C,EAAOC,OAAP,CACC9B,KAAK,SACLyB,SAAUnE,EACVwB,UAAW,wCAAuCxB,EAAU,gCAAkC,IAC9FyE,WAAYzE,EAAU,CAAA,EAAK,CAAE0E,MAAO,MACpCC,SAAU3E,EAAU,CAAA,EAAK,CAAE0E,MAAO,KAEjCjD,WACCF,EAAAA,KAAAqD,EAAAA,SAAA,CACEnD,SAAA,CAAAF,EAAAA,KAAC,MAAA,CAAIC,UAAU,6CAA6CqD,MAAM,6BAA6BC,KAAK,OAAOC,QAAQ,YACjHtD,SAAA,GAAAC,IAAC,SAAA,CAAOF,UAAU,aAAawD,GAAG,KAAKC,GAAG,KAAKC,EAAE,KAAKC,OAAO,eAAeC,YAAY,YACvF,OAAA,CAAK5D,UAAU,aAAasD,KAAK,eAAeO,EAAE,uHAC/C,eAIR9D,EAAAA,KAAAqD,EAAAA,SAAA,CACEnD,SAAA,GAAAC,IAAC4D,EAAA,CAAK9D,UAAU,YAAY,6BCrX/B+D,EAAiC,KAC5C,MAAMzF,iBAAEA,GAAqBC,KACvBJ,KAAEA,GAASE,KACVG,EAASC,GAAcC,EAAAA,UAAS,IAChCsF,EAAQC,GAAavF,EAAAA,UAAS,IAC9B2C,EAAO6C,GAAYxF,EAAAA,SAAwB,OAE3CyF,EAAUC,GAAe1F,WAAS,CACvCQ,MAAO,CACLmF,cAAc,EACdC,YAAY,EACZC,YAAY,EACZC,UAAU,EACVC,gBAAgB,GAElBC,KAAM,CACJL,cAAc,EACdC,YAAY,EACZC,YAAY,EACZC,UAAU,EACVC,gBAAgB,GAElBE,IAAK,CACHN,cAAc,EACdC,YAAY,EACZC,YAAY,EACZC,UAAU,EACVC,gBAAgB,KAKpBhF,EAAAA,UAAU,KACgBY,WACtB,GAAKlC,EAAL,CAEAM,GAAW,GACXyF,EAAS,MAET,IACE,MAAMU,QAAwBC,EAAmB1G,EAAKyD,IAElDgD,IACFE,eAAeF,GAGfR,EAAY,CACVlF,MAAO,CACLmF,aAAcO,EAAgBG,kBAC9BT,WAAYM,EAAgBI,gBAC5BT,WAAYK,EAAgBK,gBAC5BT,SAAUI,EAAgBM,cAC1BT,eAAgBG,EAAgBO,qBAElCT,KAAM,CACJL,aAAcO,EAAgBQ,iBAC9Bd,WAAYM,EAAgBS,eAC5Bd,WAAYK,EAAgBU,eAC5Bd,SAAUI,EAAgBW,aAC1Bd,eAAgBG,EAAgBY,oBAElCb,IAAK,CACHN,aAAcO,EAAgBa,gBAC9BnB,WAAYM,EAAgBc,cAC5BnB,WAAYK,EAAgBe,cAC5BnB,SAAUI,EAAgBgB,YAC1BnB,eAAgBG,EAAgBiB,qBAIxC,OAASC,GAEP5B,EAAS,6DACX,CAAA,QACEzF,GAAW,EACb,CAzCW,GA4CbsH,IACC,CAAC5H,IAEJ,MAAM6H,EAAe,CAACC,EAAiCC,KACrD9B,EAAYtE,IAAA,IACPA,EACHmG,CAACA,GAAW,IACPnG,EAAKmG,GACRC,CAACA,IAAWpG,EAAKmG,GAAUC,QAqFjC,OAAI1H,IAEAuB,KAAC,MAAA,CAAIC,UAAU,MACbC,SAAA,GAAAF,KAAC,MAAA,CAAIC,UAAU,OACbC,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAGF,UAAU,mCAAmCC,SAAA,0BACjDC,EAAAA,IAAC,IAAA,CAAEF,UAAU,qBAAqBC,SAAA,uEAEpCC,MAAC,OAAIF,UAAU,0BACZC,UAAC,EAAG,EAAG,EAAG,EAAG,GAAGkG,IAAKC,GACpBlG,MAAC,MAAA,CAAYF,UAAU,+BAAboG,WAQlBrG,KAAC,MAAA,CAAIC,UAAU,MACbC,SAAA,GAAAF,KAAC,MAAA,CAAIC,UAAU,OACbC,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAGF,UAAU,mCAAmCC,SAAA,0BACjDC,EAAAA,IAAC,IAAA,CAAEF,UAAU,qBAAqBC,SAAA,uEAGnCoB,SACE,MAAA,CAAIrB,UAAU,sDACbC,SAAAF,EAAAA,KAAC,MAAA,CAAIC,UAAU,0BACbC,SAAA,GAAAC,IAACmG,EAAA,CAAYrG,UAAU,gCACtB,MAAA,CACCC,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAGF,UAAU,mCAAmCC,SAAA,UACjDC,EAAAA,IAAC,IAAA,CAAEF,UAAU,4BAA6BC,SAAAoB,cAMlDtB,KAAC,MAAA,CAAIC,UAAU,YAEbC,SAAA,CAAAC,EAAAA,IAAC,OAAIF,UAAU,kBACbC,SAAAF,EAAAA,KAAC,QAAA,CAAMC,UAAU,SACfC,SAAA,CAAAC,MAAC,QAAA,CACCD,SAAAF,EAAAA,KAAC,KAAA,CAAGC,UAAU,2BACZC,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAGF,UAAU,gDAAgDC,SAAA,4BAC7D,KAAA,CAAGD,UAAU,kDACZC,SAAAF,EAAAA,KAAC,MAAA,CAAIC,UAAU,yCACbC,SAAA,GAAAC,IAACwC,EAAA,CAAK1C,UAAU,YAAY,mBAI/B,KAAA,CAAGA,UAAU,kDACZC,SAAAF,EAAAA,KAAC,MAAA,CAAIC,UAAU,yCACbC,SAAA,GAAAC,IAACoG,EAAA,CAAKtG,UAAU,YAAY,kBAI/B,KAAA,CAAGA,UAAU,kDACZC,SAAAF,EAAAA,KAAC,MAAA,CAAIC,UAAU,yCACbC,SAAA,GAAAC,IAACqG,EAAA,CAAWvG,UAAU,YAAY,gBAM1CE,EAAAA,IAAC,SACED,SA3Fa,CACxB,CACEuG,IAAK,eACLrF,MAAO,gBACPsF,YAAa,sDAEf,CACED,IAAK,aACLrF,MAAO,qBACPsF,YAAa,wDAEf,CACED,IAAK,aACLrF,MAAO,aACPsF,YAAa,oDAEf,CACED,IAAK,WACLrF,MAAO,kBACPsF,YAAa,wDAEf,CACED,IAAK,iBACLrF,MAAO,kBACPsF,YAAa,mDAmEcN,IAAKjF,KACtBnB,KAAC,KAAA,CAAkBC,UAAU,2BAC3BC,SAAA,CAAAC,MAAC,KAAA,CAAGF,UAAU,YACZC,SAAAF,EAAAA,KAAC,MAAA,CACCE,SAAA,CAAAC,EAAAA,IAAC,MAAA,CAAIF,UAAU,4BAA6BC,SAAAiB,EAAKC,QACjDjB,EAAAA,IAAC,MAAA,CAAIF,UAAU,wBAAyBC,WAAKwG,yBAGhD,KAAA,CAAGzG,UAAU,wBACZC,SAAAC,MAAC,QAAA,CAAMF,UAAU,2BACfC,SAAAC,EAAAA,IAAC,QAAA,CACCgB,KAAK,WACLwF,QAASvC,EAASjF,MAAMgC,EAAKsF,KAC7B1E,SAAU,IAAMkE,EAAa,QAAS9E,EAAKsF,KAC3CxG,UAAU,wFAIf,KAAA,CAAGA,UAAU,wBACZC,SAAAC,MAAC,QAAA,CAAMF,UAAU,2BACfC,SAAAC,EAAAA,IAAC,QAAA,CACCgB,KAAK,WACLwF,QAASvC,EAASO,KAAKxD,EAAKsF,KAC5B1E,SAAU,IAAMkE,EAAa,OAAQ9E,EAAKsF,KAC1CxG,UAAU,wFAIf,KAAA,CAAGA,UAAU,wBACZC,SAAAC,MAAC,QAAA,CAAMF,UAAU,2BACfC,SAAAC,EAAAA,IAAC,QAAA,CACCgB,KAAK,WACLwF,QAASvC,EAASQ,IAAIzD,EAAKsF,KAC3B1E,SAAU,IAAMkE,EAAa,MAAO9E,EAAKsF,KACzCxG,UAAU,oFAjCTkB,EAAKsF,eA4CtBzG,KAAC,MAAA,CAAIC,UAAU,4BACbC,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAGF,UAAU,2CAA2CC,SAAA,oBACzDF,KAAC,MAAA,CAAIC,UAAU,uBACbC,SAAA,CAAAC,EAAAA,IAAC,SAAA,CACCyG,QAAS,KACPvC,EAAYtE,IAAA,CACVZ,MAAO6B,OAAOC,KAAKlB,EAAKZ,OAAO0H,OAAO,CAACC,EAAKL,SAAcK,EAAKL,CAACA,IAAM,IAAS,IAC/E9B,KAAM3D,OAAOC,KAAKlB,EAAK4E,MAAMkC,OAAO,CAACC,EAAKL,SAAcK,EAAKL,CAACA,IAAM,IAAS,IAC7E7B,IAAK5D,OAAOC,KAAKlB,EAAK6E,KAAKiC,OAAO,CAACC,EAAKL,SAAcK,EAAKL,CAACA,IAAM,IAAS,CAAA,OAG/ExG,UAAU,2FACXC,SAAA,eAGDC,EAAAA,IAAC,SAAA,CACCyG,QAAS,KACPvC,EAAYtE,IAAA,CACVZ,MAAO6B,OAAOC,KAAKlB,EAAKZ,OAAO0H,OAAO,CAACC,EAAKL,SAAcK,EAAKL,CAACA,IAAM,IAAU,IAChF9B,KAAM3D,OAAOC,KAAKlB,EAAK4E,MAAMkC,OAAO,CAACC,EAAKL,SAAcK,EAAKL,CAACA,IAAM,IAAU,IAC9E7B,IAAK5D,OAAOC,KAAKlB,EAAK6E,KAAKiC,OAAO,CAACC,EAAKL,SAAcK,EAAKL,CAACA,IAAM,IAAU,CAAA,OAGhFxG,UAAU,qFACXC,SAAA,gBAGDC,EAAAA,IAAC,SAAA,CACCyG,QAAS,KACPvC,EAAYtE,IAAA,CACVZ,MAAO,IAAKY,EAAKZ,MAAOsF,UAAU,GAClCE,KAAM,IAAK5E,EAAK4E,KAAMF,UAAU,GAChCG,IAAK,IAAK7E,EAAK6E,IAAKH,UAAU,OAGlCxE,UAAU,kFACXC,SAAA,0BAOLC,IAAC,MAAA,CAAIF,UAAU,iDACbC,SAAAF,EAAAA,KAACgD,EAAOC,OAAP,CACC2D,QAzOStG,UACjB,GAAKlC,EAAL,CAEA8F,GAAU,GACVC,EAAS,MAET,IAEE,MAAM4C,EAA+C,CACnDC,OAAQ5I,EAAKyD,GACbmD,kBAAmBZ,EAASjF,MAAMmF,aAClCW,gBAAiBb,EAASjF,MAAMoF,WAChCW,gBAAiBd,EAASjF,MAAMqF,WAChCW,cAAef,EAASjF,MAAMsF,SAC9BW,oBAAqBhB,EAASjF,MAAMuF,eACpCW,iBAAkBjB,EAASO,KAAKL,aAChCgB,eAAgBlB,EAASO,KAAKJ,WAC9BgB,eAAgBnB,EAASO,KAAKH,WAC9BgB,aAAcpB,EAASO,KAAKF,SAC5BgB,mBAAoBrB,EAASO,KAAKD,eAClCgB,gBAAiBtB,EAASQ,IAAIN,aAC9BqB,cAAevB,EAASQ,IAAIL,WAC5BqB,cAAexB,EAASQ,IAAIJ,WAC5BqB,YAAazB,EAASQ,IAAIH,SAC1BqB,kBAAmB1B,EAASQ,IAAIF,gBAMlC,WAFsBuC,EAAsBF,IAS1C,MAAM,IAAIxF,MAAM,gCANhBhD,EAAiB,CACf4C,KAAM,UACNC,MAAO,iBACPC,QAAS,mDAKf,OAAS0E,GAEP5B,EAAS,2DACT5F,EAAiB,CACf4C,KAAM,QACNC,MAAO,cACPC,QAAS,wCAEb,CAAA,QACE6C,GAAU,EACZ,CAhDW,GAyOHtB,SAAUqB,EACVhE,UAAW,wCAAuCgE,EAAS,gCAAkC,IAC7Ff,WAAYe,EAAS,CAAA,EAAK,CAAEd,MAAO,MACnCC,SAAUa,EAAS,CAAA,EAAK,CAAEd,MAAO,KAEjCjD,SAAA,GAAAC,IAAC4D,EAAA,CAAK9D,UAAU,YACfgE,EAAS,YAAc,+BC3UvBiD,EAA6B,KACxC,MAAM9I,KAAEA,EAAA+I,eAAMA,GAAmB7I,KAC3BC,iBAAEA,GAAqBC,KACtBC,EAASC,GAAcC,EAAAA,UAAS,IAChCsF,EAAQC,GAAavF,EAAAA,UAAS,IAC9B2C,EAAO6C,GAAYxF,EAAAA,SAAwB,OAC3CyI,EAAkBC,GAAuB1I,EAAAA,SAAsC,OAC/E2I,EAAeC,GAAoB5I,WAAS,CACjD6I,SAAS,EACTC,KAAK,EACLC,SAAS,KAEJ1I,EAAUC,GAAeN,WAAS,CACvCgJ,gBAAiB,GACjBC,YAAa,GACbC,gBAAiB,KAInBnI,EAAAA,UAAU,KACqBY,WAC3B,GAAKlC,EAAL,CAEAM,GAAW,GACXyF,EAAS,MAET,IACE,MAAMC,QAAiB0D,EAAwB1J,EAAKyD,IAChDuC,GACFiD,EAAoBjD,EAExB,OAAS2B,GAEP5B,EAAS,sDACX,CAAA,QACEzF,GAAW,EACb,CAfW,GAkBbqJ,IACC,CAAC3J,IAEJ,MAAMuB,EAAqBC,IACzB,MAAMV,KAAEA,EAAAW,MAAMA,GAAUD,EAAEE,OAC1Bb,EAAYc,IAAA,IACPA,EACHb,CAACA,GAAOW,MAINmI,EAA4BC,IAChCV,EAAiBxH,IAAA,IACZA,EACHkI,CAACA,IAASlI,EAAKkI,OAIbC,EAA8B5H,MAAO6F,EAAqCtG,KAC9E,IAAKuH,EAAkB,OAEvB,MAAMe,EAAkB,IACnBf,EACHjB,CAACA,GAAUtG,GAGbwH,EAAoBc,GAGpBjE,GAAU,GACV,IAEE,WADsBkE,EAA2B,CAAEjC,CAACA,GAAUtG,KAQ5D,MAAM,IAAI0B,MAAM,4BANhBhD,EAAiB,CACf4C,KAAM,UACNC,MAAO,kBACPC,QAAS,kDAKf,OAAS0E,GAGPsB,EAAoBD,GACpB7I,EAAiB,CACf4C,KAAM,QACNC,MAAO,gBACPC,QAAS,qCAEb,CAAA,QACE6C,GAAU,EACZ,GAkEImE,EAVsB,CAACC,IAC3B,IAAIC,EAAW,EAMf,OALID,EAAS5H,QAAU,GAAG6H,IACtB,QAAQ5H,KAAK2H,IAAWC,IACxB,QAAQ5H,KAAK2H,IAAWC,IACxB,QAAQ5H,KAAK2H,IAAWC,IACxB,eAAe5H,KAAK2H,IAAWC,IAC5BA,GAGgBC,CAAoBxJ,EAAS4I,aAEhDa,EAAiB,CAAC,aAAc,gBAAiB,gBAAiB,cAAe,gBAEvF,OAAIhK,IAEAuB,KAAC,MAAA,CAAIC,UAAU,MACbC,SAAA,GAAAF,KAAC,MAAA,CAAIC,UAAU,OACbC,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAGF,UAAU,mCAAmCC,SAAA,sBACjDC,EAAAA,IAAC,IAAA,CAAEF,UAAU,qBAAqBC,SAAA,2DAEnC,MAAA,CAAID,UAAU,0BACZC,SAAA,CAAC,EAAG,EAAG,EAAG,GAAGkG,IAAKC,GACjBlG,EAAAA,IAAC,MAAA,CAAYF,UAAU,+BAAboG,WAQlBrG,KAAC,MAAA,CAAIC,UAAU,MACbC,SAAA,GAAAF,KAAC,MAAA,CAAIC,UAAU,OACbC,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAGF,UAAU,mCAAmCC,SAAA,sBACjDC,EAAAA,IAAC,IAAA,CAAEF,UAAU,qBAAqBC,SAAA,qDAGnCoB,SACE,MAAA,CAAIrB,UAAU,sDACbC,SAAAF,EAAAA,KAAC,MAAA,CAAIC,UAAU,0BACbC,SAAA,GAAAC,IAACuI,EAAA,CAAczI,UAAU,gCACxB,MAAA,CACCC,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAGF,UAAU,mCAAmCC,SAAA,UACjDC,EAAAA,IAAC,IAAA,CAAEF,UAAU,4BAA6BC,SAAAoB,cAMlDtB,KAAC,MAAA,CAAIC,UAAU,YAEbC,SAAA,GAAAF,KAAC,MAAA,CAAIC,UAAU,4BACbC,SAAA,GAAAF,KAAC,MAAA,CAAIC,UAAU,+BACbC,SAAA,GAAAC,IAACwI,EAAA,CAAK1I,UAAU,0BAChBE,EAAAA,IAAC,KAAA,CAAGF,UAAU,sCAAsCC,SAAA,uBAGtDF,EAAAA,KAAC,OAAA,CAAKK,SA9GeC,MAAOV,IAGlC,GAFAA,EAAEW,iBAEEvB,EAAS4I,cAAgB5I,EAAS6I,gBAStC,GAAI7I,EAAS4I,YAAYlH,OAAS,EAChCnC,EAAiB,CACf4C,KAAM,QACNC,MAAO,qBACPC,QAAS,oDAJb,CASA6C,GAAU,GACV,UACQiD,EAAenI,EAAS4I,aAG1BR,SACIgB,EAA2B,CAC/BQ,sBAAuB9H,OAI3BvC,EAAiB,CACf4C,KAAM,UACNC,MAAO,mBACPC,QAAS,gDAEXpC,EAAY,CACV0I,gBAAiB,GACjBC,YAAa,GACbC,gBAAiB,IAErB,OAASvG,GACP/C,EAAiB,CACf4C,KAAM,QACNC,MAAO,gBACPC,QAASC,aAAiBC,MAAQD,EAAMD,QAAU,6BAEtD,CAAA,QACE6C,GAAU,EACZ,CA/BA,MAfE3F,EAAiB,CACf4C,KAAM,QACNC,MAAO,oBACPC,QAAS,gDAuG+BpB,UAAU,YAC9CC,SAAA,CAAAF,OAAC,MAAA,CACCE,SAAA,CAAAC,MAAC,QAAA,CAAMwB,QAAQ,kBAAkB1B,UAAU,+CAA+CC,SAAA,uBAG1FF,KAAC,MAAA,CAAIC,UAAU,WACbC,SAAA,CAAAC,EAAAA,IAAC,QAAA,CACCgB,KAAMmG,EAAcE,QAAU,OAAS,WACvC3F,GAAG,kBACH3C,KAAK,kBACLW,MAAOb,EAAS2I,gBAChB5F,SAAUpC,EACV8C,UAAQ,EACRxC,UAAU,oBACVyC,YAAY,gCAEdvC,EAAAA,IAAC,SAAA,CACCgB,KAAK,SACLyF,QAAS,IAAMoB,EAAyB,WACxC/H,UAAU,wFAETC,SAAAoH,EAAcE,QAAUrH,EAAAA,IAAC0I,OAAA,CAAO5I,UAAU,YAAeE,EAAAA,IAAC2I,IAAA,CAAI7I,UAAU,2BAK9E,MAAA,CACCC,SAAA,CAAAC,MAAC,QAAA,CAAMwB,QAAQ,cAAc1B,UAAU,+CAA+CC,SAAA,mBAGtFF,KAAC,MAAA,CAAIC,UAAU,WACbC,SAAA,CAAAC,EAAAA,IAAC,QAAA,CACCgB,KAAMmG,EAAcG,IAAM,OAAS,WACnC5F,GAAG,cACH3C,KAAK,cACLW,MAAOb,EAAS4I,YAChB7F,SAAUpC,EACV8C,UAAQ,EACRxC,UAAU,oBACVyC,YAAY,4BAEdvC,EAAAA,IAAC,SAAA,CACCgB,KAAK,SACLyF,QAAS,IAAMoB,EAAyB,OACxC/H,UAAU,wFAETC,SAAAoH,EAAcG,IAAMtH,EAAAA,IAAC0I,OAAA,CAAO5I,UAAU,YAAeE,EAAAA,IAAC2I,IAAA,CAAI7I,UAAU,iBAKxEjB,EAAS4I,aACR5H,OAAC,MAAA,CAAIC,UAAU,OACbC,SAAA,GAAAF,KAAC,MAAA,CAAIC,UAAU,+BACbC,SAAA,GAAAC,IAAC,MAAA,CAAIF,UAAU,aACZC,SAAA,CAAC,EAAG,EAAG,EAAG,EAAG,GAAGkG,IAAK2C,GACpB5I,EAAAA,IAAC,MAAA,CAECF,UAAW,wBACT8I,GAASV,EAAmBI,EAAeJ,EAAmB,GAAK,iBAFhEU,MAOX5I,EAAAA,IAAC,OAAA,CAAKF,UAAU,wBACbC,SAAAmI,EAAmB,EA/GjB,CAAC,YAAa,OAAQ,OAAQ,OAAQ,UA+GFA,EAAmB,GAAK,mBAGnErI,KAAC,KAAA,CAAGC,UAAU,kCACZC,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAGF,UAAWjB,EAAS4I,YAAYlH,QAAU,EAAI,iBAAmB,GAAIR,SAAA,4BAGzEC,EAAAA,IAAC,KAAA,CAAGF,UAAW,QAAQU,KAAK3B,EAAS4I,aAAe,iBAAmB,GAAI1H,SAAA,2BAG3EC,EAAAA,IAAC,KAAA,CAAGF,UAAW,QAAQU,KAAK3B,EAAS4I,aAAe,iBAAmB,GAAI1H,SAAA,2BAG3EC,EAAAA,IAAC,KAAA,CAAGF,UAAW,QAAQU,KAAK3B,EAAS4I,aAAe,iBAAmB,GAAI1H,SAAA,iBAG3EC,EAAAA,IAAC,KAAA,CAAGF,UAAW,eAAeU,KAAK3B,EAAS4I,aAAe,iBAAmB,GAAI1H,SAAA,4CAQzF,MAAA,CACCA,SAAA,CAAAC,MAAC,QAAA,CAAMwB,QAAQ,kBAAkB1B,UAAU,+CAA+CC,SAAA,2BAG1FF,KAAC,MAAA,CAAIC,UAAU,WACbC,SAAA,CAAAC,EAAAA,IAAC,QAAA,CACCgB,KAAMmG,EAAcI,QAAU,OAAS,WACvC7F,GAAG,kBACH3C,KAAK,kBACLW,MAAOb,EAAS6I,gBAChB9F,SAAUpC,EACV8C,UAAQ,EACRxC,UAAU,oBACVyC,YAAY,8BAEdvC,EAAAA,IAAC,SAAA,CACCgB,KAAK,SACLyF,QAAS,IAAMoB,EAAyB,WACxC/H,UAAU,wFAETC,SAAAoH,EAAcI,QAAUvH,EAAAA,IAAC0I,OAAA,CAAO5I,UAAU,YAAeE,EAAAA,IAAC2I,IAAA,CAAI7I,UAAU,oBAK/EE,EAAAA,IAAC6C,EAAOC,OAAP,CACC9B,KAAK,SACLyB,SAAUqB,EACVhE,UAAW,gBAAegE,EAAS,gCAAkC,IACrEf,WAAYe,EAAS,CAAA,EAAK,CAAEd,MAAO,MACnCC,SAAUa,EAAS,CAAA,EAAK,CAAEd,MAAO,KAEhCjD,WAAS,cAAgB,4BAMhCF,KAAC,MAAA,CAAIC,UAAU,iDACbC,SAAA,GAAAF,KAAC,MAAA,CAAIC,UAAU,yCACbC,SAAA,GAAAF,KAAC,MAAA,CAAIC,UAAU,0BACbC,SAAA,GAAAC,IAAC6I,EAAA,CAAO/I,UAAU,4BAClBE,EAAAA,IAAC,KAAA,CAAGF,UAAU,sCAAsCC,SAAA,uCAErD,MAAA,CAAID,UAAU,oBACbC,SAAAF,EAAAA,KAAC,QAAA,CAAMC,UAAU,mDACfC,SAAA,CAAAC,EAAAA,IAAC,QAAA,CACCgB,KAAK,WACLlB,UAAU,eACV0G,eAASS,WAAkB6B,oBAAoB,EAC/ClH,SAAU,IAAMmG,EAA4B,2BAAqBd,WAAkB6B,mBACnFrG,SAAUqB,MAEZ9D,IAAC,MAAA,CAAIF,UAAU,sYACd,OAAA,CAAKA,UAAU,yCACbC,UAAA,MAAAkH,OAAA,EAAAA,EAAkB6B,kBAAmB,UAAY,qBAM1D9I,EAAAA,IAAC,IAAA,CAAEF,UAAU,qBAAqBC,SAAA,wJAIjC,MAAAkH,OAAA,EAAAA,EAAkB6B,mBACjBjJ,OAAC,MAAA,CAAIC,UAAU,OACbC,SAAA,GAAAF,KAAC,MAAA,CAAIC,UAAU,OACbC,SAAA,CAAAC,EAAAA,IAAC,QAAA,CAAMF,UAAU,+CAA+CC,SAAA,0BAGhEF,KAAC,MAAA,CAAIC,UAAU,aACbC,SAAA,CAAAF,EAAAA,KAAC,SAAA,CACCmB,KAAK,SACLyF,QAAS,IAAMsB,EAA4B,kBAAmB,SAC9DjI,UAAW,iDAC4B,UAArCmH,EAAiB8B,gBACb,yDACA,oDAGNhJ,SAAA,GAAAC,IAACwC,EAAA,CAAK1C,UAAU,YAAY,WAG9BD,EAAAA,KAAC,SAAA,CACCmB,KAAK,SACLyF,QAAS,IAAMsB,EAA4B,kBAAmB,OAC9DjI,UAAW,iDAC4B,QAArCmH,EAAiB8B,gBACb,yDACA,oDAGNhJ,SAAA,GAAAC,IAACqG,EAAA,CAAWvG,UAAU,YAAY,SAGpCD,EAAAA,KAAC,SAAA,CACCmB,KAAK,SACLyF,QAAS,IAAMsB,EAA4B,kBAAmB,iBAC9DjI,UAAW,iDAC4B,kBAArCmH,EAAiB8B,gBACb,yDACA,oDAGNhJ,SAAA,GAAAC,IAACgJ,SAAA,CAASlJ,UAAU,YAAY,6BAMA,QAArCmH,EAAiB8B,iBAChBlJ,EAAAA,KAAC,MAAA,CAAIC,UAAU,OACbC,SAAA,CAAAC,EAAAA,IAAC,QAAA,CAAMF,UAAU,+CAA+CC,SAAA,wCAGhEF,KAAC,MAAA,CAAIC,UAAU,aACbC,SAAA,CAAAC,EAAAA,IAAC,QAAA,CACCgB,KAAK,MACLlB,UAAU,qBACVyC,YAAY,0BACZ7C,MAAOuH,EAAiBgC,gBAAkB,GAC1CrH,SAAWnC,GAAMyH,EAAoB,IAChCD,EACHgC,eAAgBxJ,EAAEE,OAAOD,UAG7BM,EAAAA,IAAC,SAAA,CACCgB,KAAK,SACLlB,UAAU,cACV2G,QAAS,IAAMsB,EAA4B,iBAAkBd,EAAiBgC,gBAC/ElJ,SAAA,uBAWbF,KAAC,MAAA,CAAIC,UAAU,iDACbC,SAAA,CAAAC,EAAAA,IAAC,OAAIF,UAAU,yCACbC,SAAAF,EAAAA,KAAC,MAAA,CAAIC,UAAU,0BACbC,SAAA,GAAAC,IAACuI,EAAA,CAAczI,UAAU,2BACzBE,EAAAA,IAAC,KAAA,CAAGF,UAAU,sCAAsCC,SAAA,2BAIxDF,KAAC,MAAA,CAAIC,UAAU,YACbC,SAAA,GAAAF,KAAC,MAAA,CAAIC,UAAU,oCACbC,SAAA,CAAAF,OAAC,MAAA,CACCE,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAGF,UAAU,4BAA4BC,SAAA,iBAC1CC,EAAAA,IAAC,IAAA,CAAEF,UAAU,wBAAwBC,SAAA,0DAEvCF,KAAC,QAAA,CAAMC,UAAU,mDACfC,SAAA,CAAAC,EAAAA,IAAC,QAAA,CACCgB,KAAK,WACLlB,UAAU,eACV0G,eAASS,WAAkBiC,eAAe,EAC1CtH,SAAU,IAAMmG,EAA4B,sBAAgBd,WAAkBiC,cAC9EzG,SAAUqB,MAEZ9D,IAAC,MAAA,CAAIF,UAAU,wYAInBD,KAAC,MAAA,CAAIC,UAAU,oCACbC,SAAA,CAAAF,OAAC,MAAA,CACCE,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAGF,UAAU,4BAA4BC,SAAA,+BAC1CC,EAAAA,IAAC,IAAA,CAAEF,UAAU,wBAAwBC,SAAA,wDAEvCF,KAAC,QAAA,CAAMC,UAAU,mDACfC,SAAA,CAAAC,EAAAA,IAAC,QAAA,CACCgB,KAAK,WACLlB,UAAU,eACV0G,eAASS,WAAkBkC,4BAA4B,EACvDvH,SAAU,IAAMmG,EAA4B,mCAA6Bd,WAAkBkC,2BAC3F1G,SAAUqB,MAEZ9D,IAAC,MAAA,CAAIF,UAAU,8YAOvBD,KAAC,MAAA,CAAIC,UAAU,mDACbC,SAAA,GAAAF,KAAC,MAAA,CAAIC,UAAU,+BACbC,SAAA,GAAAC,IAAC6I,EAAA,CAAO/I,UAAU,0BAClBE,EAAAA,IAAC,KAAA,CAAGF,UAAU,sCAAsCC,SAAA,uBAEtDF,KAAC,KAAA,CAAGC,UAAU,kCACZC,SAAA,GAAAC,IAAC,MAAGD,SAAA,+DACJC,IAAC,MAAGD,SAAA,sDACJC,IAAC,MAAGD,SAAA,kEACJC,IAAC,MAAGD,SAAA,8CACJC,IAAC,MAAGD,SAAA,0CACJC,IAAC,MAAGD,SAAA,kEAKRF,KAAC,MAAA,CAAIC,UAAU,qDACbC,SAAA,GAAAF,KAAC,MAAA,CAAIC,UAAU,+BACbC,SAAA,GAAAC,IAAC6I,EAAA,CAAO/I,UAAU,2BAClBE,EAAAA,IAAC,KAAA,CAAGF,UAAU,uCAAuCC,SAAA,iCAEvDF,KAAC,MAAA,CAAIC,UAAU,YACbC,SAAA,GAAAF,KAAC,MAAA,CAAIC,UAAU,oCACbC,SAAA,CAAAC,EAAAA,IAAC,OAAA,CAAKF,UAAU,yBAAyBC,SAAA,uBACzCC,EAAAA,IAAC,OAAA,CAAKF,UAAU,6DAA6DC,SAAA,kBAE/EF,KAAC,MAAA,CAAIC,UAAU,oCACbC,SAAA,CAAAC,EAAAA,IAAC,OAAA,CAAKF,UAAU,yBAAyBC,SAAA,oBACzCC,EAAAA,IAAC,OAAA,CAAKF,UAAU,6DAA6DC,SAAA,2BCzf9EqJ,EAA4B,KACvC,MAAMhL,iBAAEA,GAAqBC,KACvBJ,KAAEA,GAASE,KACVkL,EAAgBC,GAAqB9K,EAAAA,SAA0B,KAC/DF,EAASC,GAAcC,EAAAA,UAAS,IAChCsF,EAAQC,GAAavF,EAAAA,UAAS,IAC9B2C,EAAO6C,GAAYxF,EAAAA,SAAwB,MAKlDe,EAAAA,UAAU,KACmBY,WACzB,GAAKlC,EAAL,CAEAM,GAAW,GACXyF,EAAS,MAET,IACE,MAAMuF,QAAgBC,IACtBF,EAAkBC,EACpB,OAAS3D,GAEP5B,EAAS,oDACX,CAAA,QACEzF,GAAW,EACb,CAbW,GAgBbkL,IACC,CAACxL,IAEJ,MA6EMyL,EAAeC,IACnB,OAAQA,EAAMC,eACZ,IAAK,OAEL,IAAK,aAEL,IAAK,OACL,IAAK,mBAIL,QACE,MAAO,KAHT,IAAK,SACH,MAAO,OAQb,OAAItL,IAEAuB,KAAC,MAAA,CAAIC,UAAU,MACbC,SAAA,GAAAF,KAAC,MAAA,CAAIC,UAAU,OACbC,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAGF,UAAU,mCAAmCC,SAAA,qBACjDC,EAAAA,IAAC,IAAA,CAAEF,UAAU,qBAAqBC,SAAA,iEAEnC,MAAA,CAAID,UAAU,0BACZC,SAAA,CAAC,EAAG,EAAG,GAAGkG,IAAKC,GACdlG,EAAAA,IAAC,MAAA,CAAYF,UAAU,+BAAboG,WAQlBrG,KAAC,MAAA,CAAIC,UAAU,MACbC,SAAA,GAAAF,KAAC,MAAA,CAAIC,UAAU,OACbC,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAGF,UAAU,mCAAmCC,SAAA,oBACjDC,EAAAA,IAAC,IAAA,CAAEF,UAAU,qBAAqBC,SAAA,2DAGnCoB,SACE,MAAA,CAAIrB,UAAU,sDACbC,SAAAF,EAAAA,KAAC,MAAA,CAAIC,UAAU,0BACbC,SAAA,GAAAC,IAACmG,EAAA,CAAYrG,UAAU,gCACtB,MAAA,CACCC,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAGF,UAAU,mCAAmCC,SAAA,UACjDC,EAAAA,IAAC,IAAA,CAAEF,UAAU,4BAA6BC,SAAAoB,cAMlDtB,KAAC,MAAA,CAAIC,UAAU,YAEbC,SAAA,GAAAF,KAAC,MAAA,CAAIC,UAAU,yHACbC,SAAA,GAAAC,IAAC6J,EAAA,CAAW/J,UAAU,yCACtBE,EAAAA,IAAC,KAAA,CAAGF,UAAU,yCAAyCC,SAAA,2BACvDC,EAAAA,IAAC,IAAA,CAAEF,UAAU,qBAAqBC,SAAA,qDAClCF,EAAAA,KAACgD,EAAOC,OAAP,CACChD,UAAU,8CACViD,WAAY,CAAEC,MAAO,MACrBC,SAAU,CAAED,MAAO,KACnByD,QAzEqB,KAC7BrI,EAAiB,+CAAgD,SA0EzD2B,SAAA,GAAAC,IAAC8J,EAAA,CAAKhK,UAAU,YAAY,kCAM/B,MAAA,CACCC,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAGF,UAAU,2CAA2CC,SAAA,yBACzDC,EAAAA,IAAC,OAAIF,UAAU,YACZC,WAAekG,IAAI,CAAC8D,EAAQC,WAC3BhK,OAAAA,EAAAA,IAAC6C,EAAOoH,IAAP,CAECC,QAAS,CAAEC,QAAS,EAAGC,EAAG,IAC1BC,QAAS,CAAEF,QAAS,EAAGC,EAAG,GAC1BE,WAAY,CAAEC,MAAe,GAARP,GACrBlK,UAAU,mFAEVC,SAAAF,EAAAA,KAAC,MAAA,CAAIC,UAAU,oCACbC,SAAA,GAAAF,KAAC,MAAA,CAAIC,UAAU,0BACbC,SAAA,CAAAC,MAAC,OAAIF,UAAU,WAAYC,SAAA2J,EAAYK,EAAOS,mBAC7C,MAAA,CACCzK,SAAA,GAAAF,KAAC,MAAA,CAAIC,UAAU,0BACbC,SAAA,GAAAF,KAAC,OAAA,CAAKC,UAAU,4BACbC,SAAA,CAAAgK,EAAOS,SAAS,SAAOT,EAAOU,YAEhCV,EAAOW,WACN1K,EAAAA,IAAC2K,EAAA,CAAK7K,UAAU,8CAGpBD,KAAC,IAAA,CAAEC,UAAU,wBACVC,SAAA,CAAAgK,EAAOa,WAAW,cAAY,OAAA9I,EAAAiI,EAAOc,kBAAP,EAAA/I,EAAoBgJ,WAAWC,SAAS,EAAG,KAAK,IAAEhB,EAAOiB,sBAK9FnL,KAAC,MAAA,CAAIC,UAAU,0BACZC,SAAA,EAACgK,EAAOW,WACP1K,EAAAA,IAAC,SAAA,CACCyG,QAAS,IApLNtG,OAAOuB,IAC9B,GAAKzD,EAAL,CAEA8F,GAAU,GACV,IAGE,WAFsBkH,EAAwBvJ,IAiB5C,MAAM,IAAIN,MAAM,wCAbhBkI,EAAkB1J,GAChBA,EAAKqG,IAAI8D,IAAA,IACJA,EACHW,UAAWX,EAAOrI,KAAOA,MAI7BtD,EAAiB,CACf4C,KAAM,UACNC,MAAO,yBACPC,QAAS,2CAKf,OAAS0E,GAEPxH,EAAiB,CACf4C,KAAM,QACNC,MAAO,gBACPC,QAAS,wCAEb,CAAA,QACE6C,GAAU,EACZ,CAhCW,GAmLwBmH,CAAiBnB,EAAOrI,IACvC5B,UAAU,6FACXC,SAAA,mBAIHC,EAAAA,IAAC,SAAA,CACCyG,QAAS,IApHG,CAACsD,IAC/B3L,EAAiB,uBAAuB2L,EAAOS,qCAAsC,SAmHpDW,CAAwBpB,GACvCjK,UAAU,4DACV2C,SAAUqB,EAEV/D,SAAAC,EAAAA,IAACoL,EAAA,CAAKtL,UAAU,cAElBE,EAAAA,IAAC,SAAA,CACCyG,QAAS,IA9JRtG,OAAOuB,IAC1B,GAAK2J,OAAO9D,QAAQ,wDAApB,CAIAxD,GAAU,GACV,IAGE,WAFsBuH,EAAoB5J,IAUxC,MAAM,IAAIN,MAAM,mCAPhBkI,KAA0B1J,EAAK2L,UAAiBxB,EAAOrI,KAAOA,IAC9DtD,EAAiB,CACf4C,KAAM,UACNC,MAAO,yBACPC,QAAS,gDAKf,OAAS0E,GAEPxH,EAAiB,CACf4C,KAAM,QACNC,MAAO,gBACPC,QAAS,mCAEb,CAAA,QACE6C,GAAU,EACZ,CAzBA,GA2JiCyH,CAAazB,EAAOrI,IACnC5B,UAAU,yDACV2C,SAAUqB,EAEV/D,SAAAC,EAAAA,IAACyL,EAAA,CAAO3L,UAAU,qBA7CnBiK,EAAOrI,aAuDpB7B,KAAC,MAAA,CAAIC,UAAU,mDACbC,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAGF,UAAU,2CAA2CC,SAAA,0BACzDF,KAAC,MAAA,CAAIC,UAAU,kCACbC,SAAA,GAAAF,KAAC,MAAA,CAAIC,UAAU,uBACbC,SAAA,GAAAC,IAAC,QAAKD,SAAA,uBACNC,IAAC,QAAKD,SAAA,kCAERF,KAAC,MAAA,CAAIC,UAAU,uBACbC,SAAA,GAAAC,IAAC,QAAKD,SAAA,cACNC,IAAC,QAAKD,SAAA,sBAERF,KAAC,MAAA,CAAIC,UAAU,uBACbC,SAAA,GAAAC,IAAC,QAAKD,SAAA,gBACNC,IAAC,QAAKD,SAAA,kBAGVC,EAAAA,IAAC,SAAA,CAAOF,UAAU,6DAA6DC,SAAA,oCAMjFF,KAAC,MAAA,CAAIC,UAAU,qDACbC,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAGF,UAAU,4CAA4CC,SAAA,yBAC1DF,KAAC,KAAA,CAAGC,UAAU,mCACZC,SAAA,GAAAC,IAAC,MAAGD,SAAA,wDACJC,IAAC,MAAGD,SAAA,qDACJC,IAAC,MAAGD,SAAA,4DACJC,IAAC,MAAGD,SAAA,8DCnRH2L,EAA0B,KACrC,MAAMtN,iBAAEA,GAAqBC,KACtBC,EAASC,GAAcC,EAAAA,UAAS,IAChCyF,EAAUC,GAAe1F,WAAS,CACvCmN,KAAM,CACJC,SAAU,sBACVC,gBAAiB,oCACjBC,iBAAiB,EACjBC,mBAAmB,EACnBC,0BAA0B,GAE5BhN,MAAO,CACLiN,SAAU,iBACVC,SAAU,MACVC,SAAU,GACVC,aAAc,GACdC,UAAW,wBACXC,SAAU,uBAEZhI,SAAU,CACRiI,eAAgB,KAChBC,iBAAkB,IAClBC,kBAAmB,IACnBC,uBAAuB,EACvBC,iBAAiB,GAEnBC,KAAM,CACJC,SAAU,OACVC,YAAY,EACZC,gBAAiB,QACjBC,cAAe,QAIbxN,EAAoB,CAACyN,EAAgCnF,EAAepI,KACxEwE,EAAYtE,IAAA,IACPA,EACHqN,CAACA,GAAU,IACNrN,EAAKqN,GACRnF,CAACA,GAAQpI,OAuCf,SACEG,KAAC,MAAA,CAAIC,UAAU,MACbC,SAAA,GAAAF,KAAC,MAAA,CAAIC,UAAU,OACbC,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAGF,UAAU,mCAAmCC,SAAA,mBACjDC,EAAAA,IAAC,IAAA,CAAEF,UAAU,qBAAqBC,SAAA,wDAGpCF,KAAC,MAAA,CAAIC,UAAU,YAEbC,SAAA,GAAAF,KAAC,MAAA,CAAIC,UAAU,iDACbC,SAAA,GAAAF,KAAC,MAAA,CAAIC,UAAU,+BACbC,SAAA,GAAAC,IAACkN,EAAA,CAAMpN,UAAU,0BACjBE,EAAAA,IAAC,KAAA,CAAGF,UAAU,sCAAsCC,SAAA,uBAGtDF,KAAC,MAAA,CAAIC,UAAU,wCACbC,SAAA,CAAAF,OAAC,MAAA,CACCE,SAAA,CAAAC,EAAAA,IAAC,QAAA,CAAMF,UAAU,+CAA+CC,SAAA,cAChEC,EAAAA,IAAC,QAAA,CACCgB,KAAK,OACLtB,MAAOuE,EAAS0H,KAAKC,SACrBhK,SAAWnC,GAAMD,EAAkB,OAAQ,WAAYC,EAAEE,OAAOD,OAChEI,UAAU,0BAGb,MAAA,CACCC,SAAA,CAAAC,EAAAA,IAAC,QAAA,CAAMF,UAAU,+CAA+CC,SAAA,qBAChEC,EAAAA,IAAC,QAAA,CACCgB,KAAK,OACLtB,MAAOuE,EAAS0H,KAAKE,gBACrBjK,SAAWnC,GAAMD,EAAkB,OAAQ,kBAAmBC,EAAEE,OAAOD,OACvEI,UAAU,wBAKhBD,KAAC,MAAA,CAAIC,UAAU,iBACbC,SAAA,GAAAF,KAAC,QAAA,CAAMC,UAAU,oBACfC,SAAA,CAAAC,EAAAA,IAAC,QAAA,CACCgB,KAAK,WACLwF,QAASvC,EAAS0H,KAAKG,gBACvBlK,SAAWnC,GAAMD,EAAkB,OAAQ,kBAAmBC,EAAEE,OAAO6G,SACvE1G,UAAU,0CAEZE,EAAAA,IAAC,OAAA,CAAKF,UAAU,6BAA6BC,SAAA,0BAE/CF,KAAC,QAAA,CAAMC,UAAU,oBACfC,SAAA,CAAAC,EAAAA,IAAC,QAAA,CACCgB,KAAK,WACLwF,QAASvC,EAAS0H,KAAKI,kBACvBnK,SAAWnC,GAAMD,EAAkB,OAAQ,oBAAqBC,EAAEE,OAAO6G,SACzE1G,UAAU,0CAEZE,EAAAA,IAAC,OAAA,CAAKF,UAAU,6BAA6BC,SAAA,iCAE/CF,KAAC,QAAA,CAAMC,UAAU,oBACfC,SAAA,CAAAC,EAAAA,IAAC,QAAA,CACCgB,KAAK,WACLwF,QAASvC,EAAS0H,KAAKK,yBACvBpK,SAAWnC,GAAMD,EAAkB,OAAQ,2BAA4BC,EAAEE,OAAO6G,SAChF1G,UAAU,0CAEZE,EAAAA,IAAC,OAAA,CAAKF,UAAU,6BAA6BC,SAAA,0CAMnDF,KAAC,MAAA,CAAIC,UAAU,iDACbC,SAAA,GAAAF,KAAC,MAAA,CAAIC,UAAU,+BACbC,SAAA,GAAAC,IAACmN,EAAA,CAASrN,UAAU,0BACpBE,EAAAA,IAAC,KAAA,CAAGF,UAAU,sCAAsCC,SAAA,yBAGtDF,KAAC,MAAA,CAAIC,UAAU,YACbC,SAAA,CAAAF,OAAC,MAAA,CACCE,SAAA,CAAAC,EAAAA,IAAC,QAAA,CAAMF,UAAU,+CAA+CC,SAAA,gBAChEF,KAAC,MAAA,CAAIC,UAAU,0BACbC,SAAA,CAAAC,EAAAA,IAAC,SAAA,CACCyG,QA3FO,KACrB,MAAM2G,EAAqC,SAA3BnJ,EAAS2I,KAAKC,SAAsB,OAAS,OAC7DrN,EAAkB,OAAQ,WAAY4N,GACtCC,aAAaC,QAAQ,sBAAuBF,GAE5ChP,EAAiB,CACf4C,KAAM,OACNC,MAAO,oBACPC,QAAS,eAAekM,mDAoFZtN,UAAW,uDACkB,SAA3BmE,EAAS2I,KAAKC,SACV,sDACA,oDAGL9M,SAA2B,SAA3BkE,EAAS2I,KAAKC,SAAsB,iBAAmB,mBAE1D7M,EAAAA,IAAC,QAAKF,UAAU,wBACbC,SAA2B,WAAlB6M,KAAKC,SACX,2BACA,qCAMVhN,KAAC,MAAA,CAAIC,UAAU,wCACbC,SAAA,CAAAF,OAAC,MAAA,CACCE,SAAA,CAAAC,EAAAA,IAAC,QAAA,CAAMF,UAAU,+CAA+CC,SAAA,qBAChEF,EAAAA,KAAC,SAAA,CACCH,MAAOuE,EAAS2I,KAAKG,gBACrBnL,SAAWnC,GAAMD,EAAkB,OAAQ,kBAAmBC,EAAEE,OAAOD,OACvEI,UAAU,cAEVC,SAAA,CAAAC,EAAAA,IAAC,SAAA,CAAON,MAAM,SAASK,SAAA,WACvBC,EAAAA,IAAC,SAAA,CAAON,MAAM,QAAQK,SAAA,UACtBC,EAAAA,IAAC,SAAA,CAAON,MAAM,SAASK,SAAA,WACvBC,EAAAA,IAAC,SAAA,CAAON,MAAM,UAAUK,SAAA,yBAG3B,MAAA,CACCA,SAAA,CAAAC,EAAAA,IAAC,QAAA,CAAMF,UAAU,+CAA+CC,SAAA,mBAChEC,EAAAA,IAAC,QAAA,CACCgB,KAAK,SACLtB,MAAOuE,EAAS2I,KAAKI,cACrBpL,SAAWnC,GAAMD,EAAkB,OAAQ,gBAAiBC,EAAEE,OAAOD,OACrEI,UAAU,wBAKhBD,KAAC,QAAA,CAAMC,UAAU,oBACfC,SAAA,CAAAC,EAAAA,IAAC,QAAA,CACCgB,KAAK,WACLwF,QAASvC,EAAS2I,KAAKE,WACvBlL,SAAWnC,GAAMD,EAAkB,OAAQ,aAAcC,EAAEE,OAAO6G,SAClE1G,UAAU,0CAEZE,EAAAA,IAAC,OAAA,CAAKF,UAAU,6BAA6BC,SAAA,wCAMnDF,KAAC,MAAA,CAAIC,UAAU,iDACbC,SAAA,GAAAF,KAAC,MAAA,CAAIC,UAAU,+BACbC,SAAA,GAAAC,IAAC6I,EAAA,CAAO/I,UAAU,0BAClBE,EAAAA,IAAC,KAAA,CAAGF,UAAU,sCAAsCC,SAAA,2BAGtDF,KAAC,MAAA,CAAIC,UAAU,wCACbC,SAAA,CAAAF,OAAC,MAAA,CACCE,SAAA,CAAAC,EAAAA,IAAC,QAAA,CAAMF,UAAU,+CAA+CC,SAAA,4BAChEC,EAAAA,IAAC,QAAA,CACCgB,KAAK,SACLtB,MAAOuE,EAASK,SAASiI,eACzB3K,SAAWnC,GAAMD,EAAkB,WAAY,iBAAkBC,EAAEE,OAAOD,OAC1EI,UAAU,0BAGb,MAAA,CACCC,SAAA,CAAAC,EAAAA,IAAC,QAAA,CAAMF,UAAU,+CAA+CC,SAAA,uBAChEC,EAAAA,IAAC,QAAA,CACCgB,KAAK,SACLtB,MAAOuE,EAASK,SAASkI,iBACzB5K,SAAWnC,GAAMD,EAAkB,WAAY,mBAAoBC,EAAEE,OAAOD,OAC5EI,UAAU,0BAGb,MAAA,CACCC,SAAA,CAAAC,EAAAA,IAAC,QAAA,CAAMF,UAAU,+CAA+CC,SAAA,wBAChEC,EAAAA,IAAC,QAAA,CACCgB,KAAK,SACLtB,MAAOuE,EAASK,SAASmI,kBACzB7K,SAAWnC,GAAMD,EAAkB,WAAY,oBAAqBC,EAAEE,OAAOD,OAC7EI,UAAU,wBAKhBD,KAAC,MAAA,CAAIC,UAAU,iBACbC,SAAA,GAAAF,KAAC,QAAA,CAAMC,UAAU,oBACfC,SAAA,CAAAC,EAAAA,IAAC,QAAA,CACCgB,KAAK,WACLwF,QAASvC,EAASK,SAASoI,sBAC3B9K,SAAWnC,GAAMD,EAAkB,WAAY,wBAAyBC,EAAEE,OAAO6G,SACjF1G,UAAU,0CAEZE,EAAAA,IAAC,OAAA,CAAKF,UAAU,6BAA6BC,SAAA,kCAE/CF,KAAC,QAAA,CAAMC,UAAU,oBACfC,SAAA,CAAAC,EAAAA,IAAC,QAAA,CACCgB,KAAK,WACLwF,QAASvC,EAASK,SAASqI,gBAC3B/K,SAAWnC,GAAMD,EAAkB,WAAY,kBAAmBC,EAAEE,OAAO6G,SAC3E1G,UAAU,0CAEZE,EAAAA,IAAC,OAAA,CAAKF,UAAU,6BAA6BC,SAAA,gDAMnDC,IAAC,MAAA,CAAIF,UAAU,iDACbC,SAAAF,EAAAA,KAACgD,EAAOC,OAAP,CACC2D,QAtOStG,UACjB5B,GAAW,GACX,UAEQ,IAAIgP,QAAQC,GAAWC,WAAWD,EAAS,OAEjDpP,EAAiB,CACf4C,KAAM,UACNC,MAAO,iBACPC,QAAS,iDAEb,CAAA,MACE9C,EAAiB,CACf4C,KAAM,QACNC,MAAO,cACPC,QAAS,iCAEb,CAAA,QACE3C,GAAW,EACb,GAoNQkE,SAAUnE,EACVwB,UAAU,sCACViD,WAAY,CAAEC,MAAO,MACrBC,SAAU,CAAED,MAAO,KAEnBjD,SAAA,GAAAC,IAAC4D,EAAA,CAAK9D,UAAU,YACfxB,EAAU,YAAc"}