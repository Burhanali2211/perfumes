{"version":3,"file":"admin-components-DqbfjU8M.js","sources":["../../src/components/Dashboard/Admin/DatabaseSchemaViewer.tsx","../../src/components/Dashboard/Admin/ComprehensiveAdminDashboard.tsx","../../src/components/Dashboard/Admin/UserFormModal.tsx","../../src/components/Dashboard/Admin/AuditLogs.tsx","../../src/components/Dashboard/Admin/AccessibilityDashboard.tsx","../../src/components/Dashboard/Admin/ThemeCustomizationDashboard.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport {\r\n  Database,\r\n  Table,\r\n  Key,\r\n  Link,\r\n  Search,\r\n  Maximize2,\r\n  Minimize2\r\n} from 'lucide-react';\r\n\r\ninterface TableColumn {\r\n  name: string;\r\n  type: string;\r\n  nullable: boolean;\r\n  isPrimaryKey: boolean;\r\n  isForeignKey: boolean;\r\n  referencedTable?: string;\r\n  referencedColumn?: string;\r\n}\r\n\r\ninterface TableSchema {\r\n  name: string;\r\n  displayName: string;\r\n  columns: TableColumn[];\r\n  relationships: {\r\n    hasMany: string[];\r\n    belongsTo: string[];\r\n  };\r\n  position: { x: number; y: number };\r\n  color: string;\r\n}\r\n\r\nexport const DatabaseSchemaViewer: React.FC = () => {\r\n  const [tables, setTables] = useState<TableSchema[]>([]);\r\n  const [selectedTable, setSelectedTable] = useState<string | null>(null);\r\n  const [showRelationships, setShowRelationships] = useState(true);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [isFullscreen, setIsFullscreen] = useState(false);\r\n  const [zoom, setZoom] = useState(1);\r\n\r\n  // Define the database schema with relationships\r\n  const databaseSchema: TableSchema[] = [\r\n    {\r\n      name: 'profiles',\r\n      displayName: 'User Profiles',\r\n      columns: [\r\n        { name: 'id', type: 'uuid', nullable: false, isPrimaryKey: true, isForeignKey: false },\r\n        { name: 'email', type: 'text', nullable: false, isPrimaryKey: false, isForeignKey: false },\r\n        { name: 'full_name', type: 'text', nullable: true, isPrimaryKey: false, isForeignKey: false },\r\n        { name: 'avatar_url', type: 'text', nullable: true, isPrimaryKey: false, isForeignKey: false },\r\n        { name: 'role', type: 'text', nullable: false, isPrimaryKey: false, isForeignKey: false },\r\n        { name: 'phone', type: 'text', nullable: true, isPrimaryKey: false, isForeignKey: false },\r\n        { name: 'date_of_birth', type: 'date', nullable: true, isPrimaryKey: false, isForeignKey: false },\r\n        { name: 'is_active', type: 'boolean', nullable: true, isPrimaryKey: false, isForeignKey: false },\r\n        { name: 'email_verified', type: 'boolean', nullable: true, isPrimaryKey: false, isForeignKey: false },\r\n        { name: 'created_at', type: 'timestamp', nullable: true, isPrimaryKey: false, isForeignKey: false },\r\n        { name: 'updated_at', type: 'timestamp', nullable: true, isPrimaryKey: false, isForeignKey: false }\r\n      ],\r\n      relationships: {\r\n        hasMany: ['orders', 'cart_items', 'wishlist_items', 'reviews', 'addresses', 'payment_methods', 'user_preferences', 'user_security_settings'],\r\n        belongsTo: []\r\n      },\r\n      position: { x: 100, y: 100 },\r\n      color: 'bg-blue-500'\r\n    },\r\n    {\r\n      name: 'user_preferences',\r\n      displayName: 'User Preferences',\r\n      columns: [\r\n        { name: 'id', type: 'uuid', nullable: false, isPrimaryKey: true, isForeignKey: false },\r\n        { name: 'user_id', type: 'uuid', nullable: false, isPrimaryKey: false, isForeignKey: true, referencedTable: 'profiles', referencedColumn: 'id' },\r\n        { name: 'email_order_updates', type: 'boolean', nullable: true, isPrimaryKey: false, isForeignKey: false },\r\n        { name: 'email_promotions', type: 'boolean', nullable: true, isPrimaryKey: false, isForeignKey: false },\r\n        { name: 'email_newsletter', type: 'boolean', nullable: true, isPrimaryKey: false, isForeignKey: false },\r\n        { name: 'push_order_updates', type: 'boolean', nullable: true, isPrimaryKey: false, isForeignKey: false },\r\n        { name: 'language', type: 'text', nullable: true, isPrimaryKey: false, isForeignKey: false },\r\n        { name: 'timezone', type: 'text', nullable: true, isPrimaryKey: false, isForeignKey: false },\r\n        { name: 'currency', type: 'text', nullable: true, isPrimaryKey: false, isForeignKey: false },\r\n        { name: 'created_at', type: 'timestamp', nullable: true, isPrimaryKey: false, isForeignKey: false },\r\n        { name: 'updated_at', type: 'timestamp', nullable: true, isPrimaryKey: false, isForeignKey: false }\r\n      ],\r\n      relationships: {\r\n        hasMany: [],\r\n        belongsTo: ['profiles']\r\n      },\r\n      position: { x: 400, y: 50 },\r\n      color: 'bg-indigo-500'\r\n    },\r\n    {\r\n      name: 'user_security_settings',\r\n      displayName: 'Security Settings',\r\n      columns: [\r\n        { name: 'id', type: 'uuid', nullable: false, isPrimaryKey: true, isForeignKey: false },\r\n        { name: 'user_id', type: 'uuid', nullable: false, isPrimaryKey: false, isForeignKey: true, referencedTable: 'profiles', referencedColumn: 'id' },\r\n        { name: 'two_factor_enabled', type: 'boolean', nullable: true, isPrimaryKey: false, isForeignKey: false },\r\n        { name: 'two_factor_method', type: 'text', nullable: true, isPrimaryKey: false, isForeignKey: false },\r\n        { name: 'login_alerts', type: 'boolean', nullable: true, isPrimaryKey: false, isForeignKey: false },\r\n        { name: 'session_timeout', type: 'integer', nullable: true, isPrimaryKey: false, isForeignKey: false },\r\n        { name: 'password_changed_at', type: 'timestamp', nullable: true, isPrimaryKey: false, isForeignKey: false },\r\n        { name: 'failed_login_attempts', type: 'integer', nullable: true, isPrimaryKey: false, isForeignKey: false },\r\n        { name: 'created_at', type: 'timestamp', nullable: true, isPrimaryKey: false, isForeignKey: false },\r\n        { name: 'updated_at', type: 'timestamp', nullable: true, isPrimaryKey: false, isForeignKey: false }\r\n      ],\r\n      relationships: {\r\n        hasMany: [],\r\n        belongsTo: ['profiles']\r\n      },\r\n      position: { x: 400, y: 150 },\r\n      color: 'bg-red-500'\r\n    },\r\n    {\r\n      name: 'categories',\r\n      displayName: 'Categories',\r\n      columns: [\r\n        { name: 'id', type: 'uuid', nullable: false, isPrimaryKey: true, isForeignKey: false },\r\n        { name: 'name', type: 'text', nullable: false, isPrimaryKey: false, isForeignKey: false },\r\n        { name: 'slug', type: 'text', nullable: false, isPrimaryKey: false, isForeignKey: false },\r\n        { name: 'description', type: 'text', nullable: true, isPrimaryKey: false, isForeignKey: false },\r\n        { name: 'parent_id', type: 'uuid', nullable: true, isPrimaryKey: false, isForeignKey: true, referencedTable: 'categories', referencedColumn: 'id' },\r\n        { name: 'is_active', type: 'boolean', nullable: true, isPrimaryKey: false, isForeignKey: false },\r\n        { name: 'created_at', type: 'timestamp', nullable: true, isPrimaryKey: false, isForeignKey: false },\r\n        { name: 'updated_at', type: 'timestamp', nullable: true, isPrimaryKey: false, isForeignKey: false }\r\n      ],\r\n      relationships: {\r\n        hasMany: ['products'],\r\n        belongsTo: ['categories']\r\n      },\r\n      position: { x: 700, y: 100 },\r\n      color: 'bg-purple-500'\r\n    },\r\n    {\r\n      name: 'products',\r\n      displayName: 'Products',\r\n      columns: [\r\n        { name: 'id', type: 'uuid', nullable: false, isPrimaryKey: true, isForeignKey: false },\r\n        { name: 'name', type: 'text', nullable: false, isPrimaryKey: false, isForeignKey: false },\r\n        { name: 'slug', type: 'text', nullable: false, isPrimaryKey: false, isForeignKey: false },\r\n        { name: 'price', type: 'numeric', nullable: false, isPrimaryKey: false, isForeignKey: false },\r\n        { name: 'category_id', type: 'uuid', nullable: false, isPrimaryKey: false, isForeignKey: true, referencedTable: 'categories', referencedColumn: 'id' },\r\n        { name: 'seller_id', type: 'uuid', nullable: true, isPrimaryKey: false, isForeignKey: true, referencedTable: 'profiles', referencedColumn: 'id' },\r\n        { name: 'stock', type: 'integer', nullable: false, isPrimaryKey: false, isForeignKey: false },\r\n        { name: 'created_at', type: 'timestamp', nullable: true, isPrimaryKey: false, isForeignKey: false },\r\n        { name: 'updated_at', type: 'timestamp', nullable: true, isPrimaryKey: false, isForeignKey: false }\r\n      ],\r\n      relationships: {\r\n        hasMany: ['order_items', 'cart_items', 'wishlist_items', 'reviews', 'product_variants'],\r\n        belongsTo: ['categories', 'profiles']\r\n      },\r\n      position: { x: 1000, y: 100 },\r\n      color: 'bg-green-500'\r\n    },\r\n    {\r\n      name: 'addresses',\r\n      displayName: 'Addresses',\r\n      columns: [\r\n        { name: 'id', type: 'uuid', nullable: false, isPrimaryKey: true, isForeignKey: false },\r\n        { name: 'user_id', type: 'uuid', nullable: false, isPrimaryKey: false, isForeignKey: true, referencedTable: 'profiles', referencedColumn: 'id' },\r\n        { name: 'type', type: 'text', nullable: false, isPrimaryKey: false, isForeignKey: false },\r\n        { name: 'full_name', type: 'text', nullable: false, isPrimaryKey: false, isForeignKey: false },\r\n        { name: 'street_address', type: 'text', nullable: false, isPrimaryKey: false, isForeignKey: false },\r\n        { name: 'city', type: 'text', nullable: false, isPrimaryKey: false, isForeignKey: false },\r\n        { name: 'state', type: 'text', nullable: false, isPrimaryKey: false, isForeignKey: false },\r\n        { name: 'postal_code', type: 'text', nullable: false, isPrimaryKey: false, isForeignKey: false },\r\n        { name: 'country', type: 'text', nullable: false, isPrimaryKey: false, isForeignKey: false },\r\n        { name: 'phone', type: 'text', nullable: true, isPrimaryKey: false, isForeignKey: false },\r\n        { name: 'is_default', type: 'boolean', nullable: true, isPrimaryKey: false, isForeignKey: false },\r\n        { name: 'created_at', type: 'timestamp', nullable: true, isPrimaryKey: false, isForeignKey: false },\r\n        { name: 'updated_at', type: 'timestamp', nullable: true, isPrimaryKey: false, isForeignKey: false }\r\n      ],\r\n      relationships: {\r\n        hasMany: [],\r\n        belongsTo: ['profiles']\r\n      },\r\n      position: { x: 100, y: 300 },\r\n      color: 'bg-teal-500'\r\n    },\r\n    {\r\n      name: 'payment_methods',\r\n      displayName: 'Payment Methods',\r\n      columns: [\r\n        { name: 'id', type: 'uuid', nullable: false, isPrimaryKey: true, isForeignKey: false },\r\n        { name: 'user_id', type: 'uuid', nullable: false, isPrimaryKey: false, isForeignKey: true, referencedTable: 'profiles', referencedColumn: 'id' },\r\n        { name: 'type', type: 'text', nullable: false, isPrimaryKey: false, isForeignKey: false },\r\n        { name: 'provider', type: 'text', nullable: false, isPrimaryKey: false, isForeignKey: false },\r\n        { name: 'last_four', type: 'text', nullable: false, isPrimaryKey: false, isForeignKey: false },\r\n        { name: 'expiry_month', type: 'integer', nullable: true, isPrimaryKey: false, isForeignKey: false },\r\n        { name: 'expiry_year', type: 'integer', nullable: true, isPrimaryKey: false, isForeignKey: false },\r\n        { name: 'holder_name', type: 'text', nullable: false, isPrimaryKey: false, isForeignKey: false },\r\n        { name: 'is_default', type: 'boolean', nullable: true, isPrimaryKey: false, isForeignKey: false },\r\n        { name: 'is_verified', type: 'boolean', nullable: true, isPrimaryKey: false, isForeignKey: false },\r\n        { name: 'created_at', type: 'timestamp', nullable: true, isPrimaryKey: false, isForeignKey: false },\r\n        { name: 'updated_at', type: 'timestamp', nullable: true, isPrimaryKey: false, isForeignKey: false }\r\n      ],\r\n      relationships: {\r\n        hasMany: [],\r\n        belongsTo: ['profiles']\r\n      },\r\n      position: { x: 100, y: 450 },\r\n      color: 'bg-pink-500'\r\n    },\r\n    {\r\n      name: 'orders',\r\n      displayName: 'Orders',\r\n      columns: [\r\n        { name: 'id', type: 'uuid', nullable: false, isPrimaryKey: true, isForeignKey: false },\r\n        { name: 'order_number', type: 'text', nullable: false, isPrimaryKey: false, isForeignKey: false },\r\n        { name: 'user_id', type: 'uuid', nullable: false, isPrimaryKey: false, isForeignKey: true, referencedTable: 'profiles', referencedColumn: 'id' },\r\n        { name: 'status', type: 'text', nullable: false, isPrimaryKey: false, isForeignKey: false },\r\n        { name: 'total_amount', type: 'numeric', nullable: false, isPrimaryKey: false, isForeignKey: false },\r\n        { name: 'created_at', type: 'timestamp', nullable: true, isPrimaryKey: false, isForeignKey: false },\r\n        { name: 'updated_at', type: 'timestamp', nullable: true, isPrimaryKey: false, isForeignKey: false }\r\n      ],\r\n      relationships: {\r\n        hasMany: ['order_items', 'order_tracking'],\r\n        belongsTo: ['profiles']\r\n      },\r\n      position: { x: 400, y: 300 },\r\n      color: 'bg-orange-500'\r\n    },\r\n    {\r\n      name: 'order_items',\r\n      displayName: 'Order Items',\r\n      columns: [\r\n        { name: 'id', type: 'uuid', nullable: false, isPrimaryKey: true, isForeignKey: false },\r\n        { name: 'order_id', type: 'uuid', nullable: false, isPrimaryKey: false, isForeignKey: true, referencedTable: 'orders', referencedColumn: 'id' },\r\n        { name: 'product_id', type: 'uuid', nullable: false, isPrimaryKey: false, isForeignKey: true, referencedTable: 'products', referencedColumn: 'id' },\r\n        { name: 'quantity', type: 'integer', nullable: false, isPrimaryKey: false, isForeignKey: false },\r\n        { name: 'unit_price', type: 'numeric', nullable: false, isPrimaryKey: false, isForeignKey: false },\r\n        { name: 'total_price', type: 'numeric', nullable: false, isPrimaryKey: false, isForeignKey: false }\r\n      ],\r\n      relationships: {\r\n        hasMany: [],\r\n        belongsTo: ['orders', 'products']\r\n      },\r\n      position: { x: 700, y: 300 },\r\n      color: 'bg-orange-400'\r\n    },\r\n    {\r\n      name: 'cart_items',\r\n      displayName: 'Cart Items',\r\n      columns: [\r\n        { name: 'id', type: 'uuid', nullable: false, isPrimaryKey: true, isForeignKey: false },\r\n        { name: 'user_id', type: 'uuid', nullable: false, isPrimaryKey: false, isForeignKey: true, referencedTable: 'profiles', referencedColumn: 'id' },\r\n        { name: 'product_id', type: 'uuid', nullable: false, isPrimaryKey: false, isForeignKey: true, referencedTable: 'products', referencedColumn: 'id' },\r\n        { name: 'quantity', type: 'integer', nullable: false, isPrimaryKey: false, isForeignKey: false }\r\n      ],\r\n      relationships: {\r\n        hasMany: [],\r\n        belongsTo: ['profiles', 'products']\r\n      },\r\n      position: { x: 1000, y: 300 },\r\n      color: 'bg-yellow-500'\r\n    },\r\n    {\r\n      name: 'reviews',\r\n      displayName: 'Reviews',\r\n      columns: [\r\n        { name: 'id', type: 'uuid', nullable: false, isPrimaryKey: true, isForeignKey: false },\r\n        { name: 'product_id', type: 'uuid', nullable: false, isPrimaryKey: false, isForeignKey: true, referencedTable: 'products', referencedColumn: 'id' },\r\n        { name: 'user_id', type: 'uuid', nullable: false, isPrimaryKey: false, isForeignKey: true, referencedTable: 'profiles', referencedColumn: 'id' },\r\n        { name: 'rating', type: 'integer', nullable: false, isPrimaryKey: false, isForeignKey: false },\r\n        { name: 'comment', type: 'text', nullable: true, isPrimaryKey: false, isForeignKey: false },\r\n        { name: 'created_at', type: 'timestamp', nullable: true, isPrimaryKey: false, isForeignKey: false }\r\n      ],\r\n      relationships: {\r\n        hasMany: [],\r\n        belongsTo: ['products', 'profiles']\r\n      },\r\n      position: { x: 1000, y: 450 },\r\n      color: 'bg-yellow-600'\r\n    }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    setTables(databaseSchema);\r\n  }, [databaseSchema]);\r\n\r\n  const filteredTables = tables.filter(table =>\r\n    table.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n    table.displayName.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  const getTypeIcon = (type: string) => {\r\n    if (type.includes('uuid')) return <Key className=\"h-3 w-3\" />;\r\n    if (type.includes('text') || type.includes('varchar')) return <span className=\"text-xs\">T</span>;\r\n    if (type.includes('integer') || type.includes('numeric')) return <span className=\"text-xs\">#</span>;\r\n    if (type.includes('boolean')) return <span className=\"text-xs\">B</span>;\r\n    if (type.includes('timestamp') || type.includes('date')) return <span className=\"text-xs\">D</span>;\r\n    return <span className=\"text-xs\">?</span>;\r\n  };\r\n\r\n  const renderRelationshipLines = () => {\r\n    if (!showRelationships) return null;\r\n\r\n    const lines: JSX.Element[] = [];\r\n    \r\n    tables.forEach(table => {\r\n      table.relationships.belongsTo.forEach(relatedTableName => {\r\n        const relatedTable = tables.find(t => t.name === relatedTableName);\r\n        if (relatedTable) {\r\n          const startX = table.position.x + 150;\r\n          const startY = table.position.y + 50;\r\n          const endX = relatedTable.position.x + 150;\r\n          const endY = relatedTable.position.y + 50;\r\n\r\n          lines.push(\r\n            <line\r\n              key={`${table.name}-${relatedTableName}`}\r\n              x1={startX}\r\n              y1={startY}\r\n              x2={endX}\r\n              y2={endY}\r\n              stroke=\"#6B7280\"\r\n              strokeWidth=\"2\"\r\n              strokeDasharray=\"5,5\"\r\n              opacity=\"0.6\"\r\n            />\r\n          );\r\n        }\r\n      });\r\n    });\r\n\r\n    return (\r\n      <svg\r\n        className=\"absolute inset-0 pointer-events-none\"\r\n        style={{ zIndex: 0 }}\r\n      >\r\n        {lines}\r\n      </svg>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={`${isFullscreen ? 'fixed inset-0 z-50 bg-white' : 'relative'} p-6`}>\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between mb-6\">\r\n        <div>\r\n          <h1 className=\"text-2xl font-bold text-gray-900 flex items-center\">\r\n            <Database className=\"h-6 w-6 mr-2 text-primary\" />\r\n            Database Schema\r\n          </h1>\r\n          <p className=\"text-gray-600\">Interactive visualization of database structure and relationships</p>\r\n        </div>\r\n        <div className=\"flex items-center space-x-3\">\r\n          <div className=\"relative\">\r\n            <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search tables...\"\r\n              value={searchTerm}\r\n              onChange={(e) => setSearchTerm(e.target.value)}\r\n              className=\"pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-primary\"\r\n            />\r\n          </div>\r\n          <button\r\n            onClick={() => setShowRelationships(!showRelationships)}\r\n            className={`flex items-center px-3 py-2 rounded-lg transition-colors ${\r\n              showRelationships ? 'bg-primary text-white' : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\r\n            }`}\r\n          >\r\n            <Link className=\"h-4 w-4 mr-2\" />\r\n            Relationships\r\n          </button>\r\n          <button\r\n            onClick={() => setIsFullscreen(!isFullscreen)}\r\n            className=\"flex items-center px-3 py-2 border border-gray-300 rounded-lg hover:bg-gray-50\"\r\n          >\r\n            {isFullscreen ? <Minimize2 className=\"h-4 w-4\" /> : <Maximize2 className=\"h-4 w-4\" />}\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Schema Visualization */}\r\n      <div className=\"bg-gray-50 rounded-xl border border-gray-200 overflow-hidden\" style={{ height: isFullscreen ? 'calc(100vh - 120px)' : '600px' }}>\r\n        <div className=\"relative w-full h-full overflow-auto\" style={{ transform: `scale(${zoom})`, transformOrigin: 'top left' }}>\r\n          {renderRelationshipLines()}\r\n          \r\n          {filteredTables.map((table) => (\r\n            <motion.div\r\n              key={table.name}\r\n              initial={{ opacity: 0, scale: 0.9 }}\r\n              animate={{ opacity: 1, scale: 1 }}\r\n              className={`absolute bg-white rounded-lg shadow-md border-2 transition-all duration-200 ${\r\n                selectedTable === table.name ? 'border-primary shadow-lg' : 'border-gray-200'\r\n              }`}\r\n              style={{\r\n                left: table.position.x,\r\n                top: table.position.y,\r\n                width: '300px',\r\n                zIndex: selectedTable === table.name ? 10 : 1\r\n              }}\r\n              onClick={() => setSelectedTable(selectedTable === table.name ? null : table.name)}\r\n            >\r\n              {/* Table Header */}\r\n              <div className={`${table.color} text-white p-3 rounded-t-lg`}>\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div className=\"flex items-center\">\r\n                    <Table className=\"h-4 w-4 mr-2\" />\r\n                    <h3 className=\"font-semibold text-sm\">{table.displayName}</h3>\r\n                  </div>\r\n                  <span className=\"text-xs opacity-75\">{table.name}</span>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Table Columns */}\r\n              <div className=\"p-3 max-h-64 overflow-y-auto\">\r\n                <div className=\"space-y-1\">\r\n                  {table.columns.map((column) => (\r\n                    <div\r\n                      key={column.name}\r\n                      className={`flex items-center justify-between p-2 rounded text-xs ${\r\n                        column.isPrimaryKey ? 'bg-yellow-50 border border-yellow-200' :\r\n                        column.isForeignKey ? 'bg-blue-50 border border-blue-200' :\r\n                        'bg-gray-50'\r\n                      }`}\r\n                    >\r\n                      <div className=\"flex items-center\">\r\n                        <div className=\"w-4 h-4 flex items-center justify-center mr-2\">\r\n                          {column.isPrimaryKey ? (\r\n                            <Key className=\"h-3 w-3 text-yellow-600\" />\r\n                          ) : column.isForeignKey ? (\r\n                            <Link className=\"h-3 w-3 text-blue-600\" />\r\n                          ) : (\r\n                            getTypeIcon(column.type)\r\n                          )}\r\n                        </div>\r\n                        <span className={`font-medium ${column.isPrimaryKey ? 'text-yellow-800' : column.isForeignKey ? 'text-blue-800' : 'text-gray-700'}`}>\r\n                          {column.name}\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"flex items-center space-x-1\">\r\n                        <span className=\"text-gray-500\">{column.type}</span>\r\n                        {!column.nullable && (\r\n                          <span className=\"text-red-500 text-xs\">*</span>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n\r\n              {/* Relationships Summary */}\r\n              {(table.relationships.hasMany.length > 0 || table.relationships.belongsTo.length > 0) && (\r\n                <div className=\"border-t border-gray-200 p-3 bg-gray-50 rounded-b-lg\">\r\n                  <div className=\"text-xs text-gray-600\">\r\n                    {table.relationships.hasMany.length > 0 && (\r\n                      <div className=\"mb-1\">\r\n                        <span className=\"font-medium\">Has many:</span> {table.relationships.hasMany.join(', ')}\r\n                      </div>\r\n                    )}\r\n                    {table.relationships.belongsTo.length > 0 && (\r\n                      <div>\r\n                        <span className=\"font-medium\">Belongs to:</span> {table.relationships.belongsTo.join(', ')}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </motion.div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Zoom Controls */}\r\n      <div className=\"flex items-center justify-between mt-4\">\r\n        <div className=\"flex items-center space-x-2\">\r\n          <button\r\n            onClick={() => setZoom(Math.max(0.5, zoom - 0.1))}\r\n            className=\"px-3 py-1 border border-gray-300 rounded hover:bg-gray-50\"\r\n          >\r\n            -\r\n          </button>\r\n          <span className=\"text-sm text-gray-600\">{Math.round(zoom * 100)}%</span>\r\n          <button\r\n            onClick={() => setZoom(Math.min(2, zoom + 0.1))}\r\n            className=\"px-3 py-1 border border-gray-300 rounded hover:bg-gray-50\"\r\n          >\r\n            +\r\n          </button>\r\n        </div>\r\n        \r\n        <div className=\"flex items-center space-x-4 text-xs text-gray-600\">\r\n          <div className=\"flex items-center\">\r\n            <Key className=\"h-3 w-3 text-yellow-600 mr-1\" />\r\n            Primary Key\r\n          </div>\r\n          <div className=\"flex items-center\">\r\n            <Link className=\"h-3 w-3 text-blue-600 mr-1\" />\r\n            Foreign Key\r\n          </div>\r\n          <div className=\"flex items-center\">\r\n            <span className=\"text-red-500 mr-1\">*</span>\r\n            Required\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect, useCallback, useMemo, memo } from 'react';\r\nimport { Database, Users, Package, ShoppingCart, CreditCard, MapPin, Star, Tag, Truck, Settings, Activity, BarChart3, TrendingUp, Eye, Download, Filter, Search, RefreshCw, GitBranch, DollarSign, Clock, AlertTriangle, ArrowUp, ArrowDown, Minus, Bell } from 'lucide-react';\r\nimport { supabase } from '../../../lib/supabase';\r\nimport { LoadingSpinner } from '../../Common/LoadingSpinner';\r\nimport { ErrorFallback } from '../../Common/ErrorFallback';\r\nimport { UniversalTableManager } from './UniversalTableManager';\r\nimport { AdvancedAnalytics } from './AdvancedAnalytics';\r\nimport { DatabaseSchemaViewer } from './DatabaseSchemaViewer';\r\nimport {\r\n  useAdvancedMemo,\r\n  useDebouncedCallback\r\n} from '../utils/performanceOptimizations';\r\n\r\ninterface TableInfo {\r\n  name: string;\r\n  displayName: string;\r\n  icon: React.ReactNode;\r\n  description: string;\r\n  count: number;\r\n  color: string;\r\n}\r\n\r\ninterface DatabaseStats {\r\n  totalTables: number;\r\n  totalRecords: number;\r\n  lastUpdated: Date;\r\n  tables: TableInfo[];\r\n}\r\n\r\ninterface DashboardMetrics {\r\n  totalUsers: number;\r\n  totalProducts: number;\r\n  totalOrders: number;\r\n  totalRevenue: number;\r\n  pendingOrders: number;\r\n  lowStockProducts: number;\r\n  newUsersToday: number;\r\n  ordersToday: number;\r\n  revenueToday: number;\r\n  conversionRate: number;\r\n}\r\n\r\ninterface KPIMetric {\r\n  metricName: string;\r\n  currentValue: number;\r\n  previousValue: number;\r\n  percentageChange: number;\r\n  trendDirection: 'up' | 'down' | 'stable';\r\n}\r\n\r\ninterface RealtimeMetrics {\r\n  onlineUsers: number;\r\n  pendingOrders: number;\r\n  recentSalesCount: number;\r\n  recentSalesValue: number;\r\n  lowStockAlerts: number;\r\n  systemStatus: string;\r\n}\r\n\r\nexport const ComprehensiveAdminDashboard: React.FC = memo(() => {\r\n  // Performance monitoring (development only)\r\n  if (import.meta.env.DEV) {\r\n    // Performance monitoring hooks would go here in development\r\n  }\r\n\r\n  const [stats, setStats] = useState<DatabaseStats | null>(null);\r\n  const [metrics, setMetrics] = useState<DashboardMetrics | null>(null);\r\n  const [kpiMetrics, setKpiMetrics] = useState<KPIMetric[]>([]);\r\n  const [realtimeMetrics, setRealtimeMetrics] = useState<RealtimeMetrics | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [selectedTable, setSelectedTable] = useState<string | null>(null);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [refreshing, setRefreshing] = useState(false);\r\n  const [currentView, setCurrentView] = useState<'overview' | 'table' | 'analytics' | 'schema'>('overview');\r\n  const [autoRefresh, setAutoRefresh] = useState(true);\r\n  const [lastRefresh, setLastRefresh] = useState<Date | null>(null);\r\n\r\n  const tableConfigs: Record<string, Omit<TableInfo, 'count'>> = {\r\n    profiles: {\r\n      name: 'profiles',\r\n      displayName: 'User Profiles',\r\n      icon: <Users className=\"h-6 w-6\" />,\r\n      description: 'User accounts and profile information',\r\n      color: 'bg-blue-500'\r\n    },\r\n    user_preferences: {\r\n      name: 'user_preferences',\r\n      displayName: 'User Preferences',\r\n      icon: <Settings className=\"h-6 w-6\" />,\r\n      description: 'User notification and display preferences',\r\n      color: 'bg-indigo-500'\r\n    },\r\n    user_security_settings: {\r\n      name: 'user_security_settings',\r\n      displayName: 'Security Settings',\r\n      icon: <Settings className=\"h-6 w-6\" />,\r\n      description: 'User security and authentication settings',\r\n      color: 'bg-red-500'\r\n    },\r\n    products: {\r\n      name: 'products',\r\n      displayName: 'Products',\r\n      icon: <Package className=\"h-6 w-6\" />,\r\n      description: 'Product catalog and inventory',\r\n      color: 'bg-green-500'\r\n    },\r\n    categories: {\r\n      name: 'categories',\r\n      displayName: 'Categories',\r\n      icon: <Tag className=\"h-6 w-6\" />,\r\n      description: 'Product categories and organization',\r\n      color: 'bg-purple-500'\r\n    },\r\n    orders: {\r\n      name: 'orders',\r\n      displayName: 'Orders',\r\n      icon: <ShoppingCart className=\"h-6 w-6\" />,\r\n      description: 'Customer orders and transactions',\r\n      color: 'bg-orange-500'\r\n    },\r\n    order_items: {\r\n      name: 'order_items',\r\n      displayName: 'Order Items',\r\n      icon: <Package className=\"h-5 w-5\" />,\r\n      description: 'Individual items within orders',\r\n      color: 'bg-orange-400'\r\n    },\r\n    cart_items: {\r\n      name: 'cart_items',\r\n      displayName: 'Shopping Carts',\r\n      icon: <ShoppingCart className=\"h-5 w-5\" />,\r\n      description: 'Active shopping cart items',\r\n      color: 'bg-yellow-500'\r\n    },\r\n    wishlist_items: {\r\n      name: 'wishlist_items',\r\n      displayName: 'Wishlists',\r\n      icon: <Star className=\"h-6 w-6\" />,\r\n      description: 'Customer wishlist items',\r\n      color: 'bg-pink-500'\r\n    },\r\n    reviews: {\r\n      name: 'reviews',\r\n      displayName: 'Reviews',\r\n      icon: <Star className=\"h-5 w-5\" />,\r\n      description: 'Product reviews and ratings',\r\n      color: 'bg-yellow-600'\r\n    },\r\n    addresses: {\r\n      name: 'addresses',\r\n      displayName: 'Addresses',\r\n      icon: <MapPin className=\"h-6 w-6\" />,\r\n      description: 'Customer shipping and billing addresses',\r\n      color: 'bg-teal-500'\r\n    },\r\n    payment_methods: {\r\n      name: 'payment_methods',\r\n      displayName: 'Payment Methods',\r\n      icon: <CreditCard className=\"h-6 w-6\" />,\r\n      description: 'Customer payment information',\r\n      color: 'bg-indigo-500'\r\n    },\r\n    coupons: {\r\n      name: 'coupons',\r\n      displayName: 'Coupons',\r\n      icon: <Tag className=\"h-5 w-5\" />,\r\n      description: 'Discount coupons and promotions',\r\n      color: 'bg-emerald-500'\r\n    },\r\n    product_variants: {\r\n      name: 'product_variants',\r\n      displayName: 'Product Variants',\r\n      icon: <Package className=\"h-5 w-5\" />,\r\n      description: 'Product variations and options',\r\n      color: 'bg-teal-500'\r\n    },\r\n    order_tracking: {\r\n      name: 'order_tracking',\r\n      displayName: 'Order Tracking',\r\n      icon: <Truck className=\"h-6 w-6\" />,\r\n      description: 'Order shipment tracking information',\r\n      color: 'bg-cyan-500'\r\n    }\r\n  };\r\n\r\n  const fetchDatabaseStats = useCallback(async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      // Fetch table counts in parallel with better error handling\r\n      const tableNames = Object.keys(tableConfigs);\r\n      const tableCounts: Record<string, number> = {};\r\n      let totalRecords = 0;\r\n\r\n      // Batch requests for better performance\r\n      const countPromises = tableNames.map(async (tableName) => {\r\n        try {\r\n          const { count, error } = await supabase\r\n            .from(tableName)\r\n            .select('*', { count: 'exact', head: true });\r\n\r\n          if (error) {\r\n            console.warn(`Error fetching count for ${tableName}:`, error.message);\r\n            return { tableName, count: 0 };\r\n          }\r\n          return { tableName, count: count || 0 };\r\n        } catch (err) {\r\n          console.warn(`Error fetching count for ${tableName}:`, err);\r\n          return { tableName, count: 0 };\r\n        }\r\n      });\r\n\r\n      // Execute all count queries in parallel\r\n      const results = await Promise.allSettled(countPromises);\r\n\r\n      results.forEach((result) => {\r\n        if (result.status === 'fulfilled') {\r\n          const { tableName, count } = result.value;\r\n          tableCounts[tableName] = count;\r\n          totalRecords += count;\r\n        }\r\n      });\r\n\r\n      const tables: TableInfo[] = tableNames.map(name => ({\r\n        ...tableConfigs[name],\r\n        count: tableCounts[name] || 0\r\n      }));\r\n\r\n      setStats({\r\n        totalTables: tableNames.length,\r\n        totalRecords,\r\n        lastUpdated: new Date(),\r\n        tables\r\n      });\r\n\r\n      setLastRefresh(new Date());\r\n    } catch (err) {\r\n      console.error('Error fetching database stats:', err);\r\n      setError('Failed to fetch database statistics');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [tableConfigs]);\r\n\r\n  // Fetch dashboard overview metrics with caching\r\n  const fetchDashboardMetrics = useCallback(async () => {\r\n    try {\r\n      // Check cache first\r\n      const cacheKey = 'dashboard-metrics';\r\n      const cached = sessionStorage.getItem(cacheKey);\r\n      const cacheTime = sessionStorage.getItem(`${cacheKey}-time`);\r\n\r\n      // Use cached data if less than 2 minutes old\r\n      if (cached && cacheTime && (Date.now() - parseInt(cacheTime)) < 120000) {\r\n        setMetrics(JSON.parse(cached));\r\n        return;\r\n      }\r\n\r\n      // Fetch basic metrics from tables directly with optimized queries\r\n      const [ordersResult, usersResult, productsResult] = await Promise.all([\r\n        supabase.from('orders').select('id, total_amount, status, created_at'),\r\n        supabase.from('profiles').select('id, created_at'),\r\n        supabase.from('products').select('id')\r\n      ]);\r\n\r\n      if (ordersResult.error || usersResult.error || productsResult.error) {\r\n        console.error('Error fetching dashboard metrics:', ordersResult.error || usersResult.error || productsResult.error);\r\n        return;\r\n      }\r\n\r\n      const orders = ordersResult.data || [];\r\n      const users = usersResult.data || [];\r\n      const products = productsResult.data || [];\r\n\r\n      const today = new Date().toISOString().split('T')[0];\r\n      const ordersToday = orders.filter(order => order.created_at.startsWith(today));\r\n      const usersToday = users.filter(user => user.created_at.startsWith(today));\r\n      const completedOrders = orders.filter(order => order.status === 'completed');\r\n      const revenueToday = ordersToday\r\n        .filter(order => order.status === 'completed')\r\n        .reduce((sum, order) => sum + (parseFloat(order.total_amount) || 0), 0);\r\n\r\n      const metricsData = {\r\n        totalUsers: users.length,\r\n        totalProducts: products.length,\r\n        totalOrders: orders.length,\r\n        totalRevenue: completedOrders.reduce((sum, order) => sum + (parseFloat(order.total_amount) || 0), 0),\r\n        pendingOrders: orders.filter(order => order.status === 'pending').length,\r\n        lowStockProducts: 0, // Will be calculated separately\r\n        newUsersToday: usersToday.length,\r\n        ordersToday: ordersToday.length,\r\n        revenueToday: revenueToday,\r\n        conversionRate: users.length > 0 ? (orders.length / users.length) * 100 : 0\r\n      };\r\n\r\n      setMetrics(metricsData);\r\n\r\n      // Cache the results\r\n      sessionStorage.setItem(cacheKey, JSON.stringify(metricsData));\r\n      sessionStorage.setItem(`${cacheKey}-time`, Date.now().toString());\r\n    } catch (err) {\r\n      console.error('Error in fetchDashboardMetrics:', err);\r\n    }\r\n  }, []);\r\n\r\n  // Fetch KPI metrics with percentage changes\r\n  const fetchKPIMetrics = useCallback(async () => {\r\n    try {\r\n      // Generate mock KPI metrics that match the KPIMetric interface\r\n      const mockKpiMetrics: KPIMetric[] = [\r\n        {\r\n          metricName: 'Revenue',\r\n          currentValue: 15420,\r\n          previousValue: 13750,\r\n          percentageChange: 12.5,\r\n          trendDirection: 'up'\r\n        },\r\n        {\r\n          metricName: 'Orders',\r\n          currentValue: 342,\r\n          previousValue: 316,\r\n          percentageChange: 8.3,\r\n          trendDirection: 'up'\r\n        },\r\n        {\r\n          metricName: 'Customers',\r\n          currentValue: 1250,\r\n          previousValue: 1277,\r\n          percentageChange: -2.1,\r\n          trendDirection: 'down'\r\n        },\r\n        {\r\n          metricName: 'Conversion Rate',\r\n          currentValue: 3.2,\r\n          previousValue: 3.03,\r\n          percentageChange: 5.7,\r\n          trendDirection: 'up'\r\n        }\r\n      ];\r\n\r\n      setKpiMetrics(mockKpiMetrics);\r\n    } catch (err) {\r\n      console.error('Error in fetchKPIMetrics:', err);\r\n      // Set empty array on error to prevent crashes\r\n      setKpiMetrics([]);\r\n    }\r\n  }, []);\r\n\r\n  // Fetch real-time metrics\r\n  const fetchRealtimeMetrics = useCallback(async () => {\r\n    try {\r\n      // Generate mock realtime metrics that match the RealtimeMetrics interface\r\n      const mockRealtimeMetrics: RealtimeMetrics = {\r\n        onlineUsers: Math.floor(Math.random() * 50) + 10,\r\n        pendingOrders: Math.floor(Math.random() * 10) + 1,\r\n        recentSalesCount: Math.floor(Math.random() * 20) + 5,\r\n        recentSalesValue: Math.floor(Math.random() * 5000) + 1000,\r\n        lowStockAlerts: Math.floor(Math.random() * 5) + 1,\r\n        systemStatus: 'operational'\r\n      };\r\n\r\n      setRealtimeMetrics(mockRealtimeMetrics);\r\n    } catch (err) {\r\n      console.error('Error in fetchRealtimeMetrics:', err);\r\n      // Set default values on error to prevent crashes\r\n      setRealtimeMetrics({\r\n        onlineUsers: 0,\r\n        pendingOrders: 0,\r\n        recentSalesCount: 0,\r\n        recentSalesValue: 0,\r\n        lowStockAlerts: 0,\r\n        systemStatus: 'error'\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  // Enhanced refresh function\r\n  const fetchAllData = useCallback(async () => {\r\n    setRefreshing(true);\r\n    setLastRefresh(new Date());\r\n\r\n    try {\r\n      await Promise.all([\r\n        fetchDatabaseStats(),\r\n        fetchDashboardMetrics(),\r\n        fetchKPIMetrics(),\r\n        fetchRealtimeMetrics()\r\n      ]);\r\n    } catch (err) {\r\n      console.error('Error fetching all data:', err);\r\n    } finally {\r\n      setRefreshing(false);\r\n    }\r\n  }, [fetchDashboardMetrics, fetchKPIMetrics, fetchRealtimeMetrics]);\r\n\r\n  // Export analytics data\r\n  const handleExportData = async () => {\r\n    try {\r\n      const startDate = new Date();\r\n      startDate.setDate(startDate.getDate() - 30);\r\n      const endDate = new Date();\r\n\r\n      // Try the RPC function first\r\n      const { data: rpcData, error: rpcError } = await supabase.rpc('export_analytics_data', {\r\n        start_date: startDate.toISOString().split('T')[0],\r\n        end_date: endDate.toISOString().split('T')[0],\r\n        data_type: 'all'\r\n      });\r\n\r\n      let exportData;\r\n\r\n      if (!rpcError && rpcData) {\r\n        exportData = rpcData;\r\n      } else {\r\n        console.warn('RPC export_analytics_data failed, using fallback method:', rpcError?.message);\r\n\r\n        // Fallback: manually collect data from tables\r\n        const [ordersResult, usersResult, productsResult] = await Promise.all([\r\n          supabase\r\n            .from('orders')\r\n            .select('id, total, status, created_at, user_id')\r\n            .gte('created_at', startDate.toISOString())\r\n            .lte('created_at', endDate.toISOString()),\r\n          supabase\r\n            .from('profiles')\r\n            .select('id, email, full_name, role, created_at, is_active')\r\n            .gte('created_at', startDate.toISOString())\r\n            .lte('created_at', endDate.toISOString()),\r\n          supabase\r\n            .from('products')\r\n            .select('id, name, price, stock, created_at, is_active')\r\n            .gte('created_at', startDate.toISOString())\r\n            .lte('created_at', endDate.toISOString())\r\n        ]);\r\n\r\n        exportData = {\r\n          orders: ordersResult.data || [],\r\n          users: usersResult.data || [],\r\n          products: productsResult.data || [],\r\n          metadata: {\r\n            start_date: startDate.toISOString().split('T')[0],\r\n            end_date: endDate.toISOString().split('T')[0],\r\n            data_type: 'all',\r\n            exported_at: new Date().toISOString(),\r\n            method: 'fallback'\r\n          }\r\n        };\r\n      }\r\n\r\n      // Create download link\r\n      const blob = new Blob([JSON.stringify(exportData, null, 2)], {\r\n        type: 'application/json'\r\n      });\r\n      const url = URL.createObjectURL(blob);\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      link.download = `analytics-export-${new Date().toISOString().split('T')[0]}.json`;\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n      URL.revokeObjectURL(url);\r\n\r\n      console.log('Analytics data exported successfully');\r\n    } catch (err) {\r\n      console.error('Error exporting data:', err);\r\n      setError('Failed to export analytics data');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchAllData();\r\n  }, [fetchAllData]);\r\n\r\n  // Auto-refresh functionality\r\n  useEffect(() => {\r\n    if (!autoRefresh) return;\r\n\r\n    const interval = setInterval(() => {\r\n      fetchRealtimeMetrics();\r\n    }, 30000); // Refresh real-time metrics every 30 seconds\r\n\r\n    return () => clearInterval(interval);\r\n  }, [autoRefresh, fetchRealtimeMetrics]);\r\n\r\n  // Full data refresh every 5 minutes\r\n  useEffect(() => {\r\n    if (!autoRefresh) return;\r\n\r\n    const interval = setInterval(() => {\r\n      fetchAllData();\r\n    }, 300000); // Refresh all data every 5 minutes\r\n\r\n    return () => clearInterval(interval);\r\n  }, [autoRefresh, fetchAllData]);\r\n\r\n  const handleRefresh = async () => {\r\n    await fetchAllData();\r\n  };\r\n\r\n  // Optimized search with advanced memoization\r\n  const filteredTables = useAdvancedMemo(() => {\r\n    if (!stats?.tables) return [];\r\n    const lowerSearchTerm = searchTerm.toLowerCase();\r\n    return stats.tables.filter(table =>\r\n      table.displayName.toLowerCase().includes(lowerSearchTerm) ||\r\n      table.description.toLowerCase().includes(lowerSearchTerm)\r\n    );\r\n  }, [stats?.tables, searchTerm], `filtered-tables-${searchTerm}`);\r\n\r\n  // Debounced search handler\r\n  const debouncedSearch = useDebouncedCallback(\r\n    (term: string) => setSearchTerm(term),\r\n    300,\r\n    []\r\n  );\r\n\r\n  // Handle different views\r\n  if (currentView === 'table' && selectedTable) {\r\n    const tableConfig = tableConfigs[selectedTable];\r\n    return (\r\n      <UniversalTableManager\r\n        tableName={selectedTable}\r\n        displayName={tableConfig?.displayName || selectedTable}\r\n        onBack={() => {\r\n          setCurrentView('overview');\r\n          setSelectedTable(null);\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  if (currentView === 'analytics') {\r\n    return <AdvancedAnalytics />;\r\n  }\r\n\r\n  if (currentView === 'schema') {\r\n    return <DatabaseSchemaViewer />;\r\n  }\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"p-8\">\r\n        <LoadingSpinner size=\"large\" text=\"Loading database statistics...\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"p-8\">\r\n        <ErrorFallback\r\n          error={error}\r\n          onRetry={fetchAllData}\r\n          type=\"database\"\r\n          size=\"large\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"p-6 space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h1 className=\"text-3xl font-bold text-gray-900 flex items-center\">\r\n            <Database className=\"h-8 w-8 mr-3 text-primary\" />\r\n            Admin Dashboard\r\n          </h1>\r\n          <p className=\"text-gray-600 mt-1\">\r\n            Real-time business intelligence and database administration\r\n          </p>\r\n          {lastRefresh && (\r\n            <p className=\"text-sm text-gray-500 mt-1 flex items-center\">\r\n              <Clock className=\"h-4 w-4 mr-1\" />\r\n              Last updated: {lastRefresh.toLocaleTimeString()}\r\n            </p>\r\n          )}\r\n        </div>\r\n        <div className=\"flex items-center space-x-4\">\r\n          <label className=\"flex items-center\">\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={autoRefresh}\r\n              onChange={(e) => setAutoRefresh(e.target.checked)}\r\n              className=\"mr-2\"\r\n            />\r\n            <span className=\"text-sm text-gray-600\">Auto-refresh</span>\r\n          </label>\r\n          <button\r\n            onClick={() => setCurrentView('analytics')}\r\n            className=\"flex items-center px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\r\n          >\r\n            <BarChart3 className=\"h-4 w-4 mr-2\" />\r\n            Analytics\r\n          </button>\r\n          <button\r\n            onClick={() => setCurrentView('schema')}\r\n            className=\"flex items-center px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 transition-colors\"\r\n          >\r\n            <GitBranch className=\"h-4 w-4 mr-2\" />\r\n            Schema\r\n          </button>\r\n          <button\r\n            onClick={handleExportData}\r\n            className=\"flex items-center px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors\"\r\n          >\r\n            <Download className=\"h-4 w-4 mr-2\" />\r\n            Export\r\n          </button>\r\n          <button\r\n            onClick={handleRefresh}\r\n            disabled={refreshing}\r\n            className=\"flex items-center px-4 py-2 bg-primary text-white rounded-lg hover:bg-primary-dark transition-colors disabled:opacity-50\"\r\n          >\r\n            <RefreshCw className={`h-4 w-4 mr-2 ${refreshing ? 'animate-spin' : ''}`} />\r\n            Refresh\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Real-time Metrics Bar */}\r\n      {realtimeMetrics && (\r\n        <div className=\"bg-gradient-to-r from-blue-50 to-purple-50 rounded-xl p-4\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <h3 className=\"text-lg font-semibold text-gray-900 flex items-center\">\r\n              <Activity className=\"h-5 w-5 mr-2 text-blue-600\" />\r\n              Live Metrics\r\n            </h3>\r\n            <div className=\"flex items-center space-x-6 text-sm\">\r\n              <div className=\"flex items-center\">\r\n                <div className=\"h-2 w-2 bg-green-500 rounded-full mr-2 animate-pulse\"></div>\r\n                <span className=\"text-gray-600\">{realtimeMetrics?.onlineUsers || 0} Online</span>\r\n              </div>\r\n              <div className=\"flex items-center\">\r\n                <Bell className=\"h-4 w-4 mr-1 text-orange-500\" />\r\n                <span className=\"text-gray-600\">{realtimeMetrics?.pendingOrders || 0} Pending Orders</span>\r\n              </div>\r\n              <div className=\"flex items-center\">\r\n                <AlertTriangle className=\"h-4 w-4 mr-1 text-red-500\" />\r\n                <span className=\"text-gray-600\">{realtimeMetrics?.lowStockAlerts || 0} Low Stock</span>\r\n              </div>\r\n              <div className=\"flex items-center\">\r\n                <DollarSign className=\"h-4 w-4 mr-1 text-green-500\" />\r\n                <span className=\"text-gray-600\">${(realtimeMetrics?.recentSalesValue ?? 0).toFixed(2)} Recent Sales</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Business Intelligence KPIs */}\r\n      {metrics && (\r\n        <div>\r\n          <h2 className=\"text-xl font-bold text-gray-900 mb-4 flex items-center\">\r\n            <BarChart3 className=\"h-6 w-6 mr-2 text-primary\" />\r\n            Business Intelligence Overview\r\n          </h2>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n            {/* Total Users */}\r\n            <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6 hover:shadow-md transition-shadow\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <div>\r\n                  <p className=\"text-sm font-medium text-gray-600\">Total Users</p>\r\n                  <p className=\"text-3xl font-bold text-gray-900\">{metrics.totalUsers.toLocaleString()}</p>\r\n                  <p className=\"text-xs text-gray-500 mt-1\">+{metrics.newUsersToday} today</p>\r\n                </div>\r\n                <div className=\"p-3 bg-blue-100 rounded-lg\">\r\n                  <Users className=\"h-8 w-8 text-blue-600\" />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Total Products */}\r\n            <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6 hover:shadow-md transition-shadow\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <div>\r\n                  <p className=\"text-sm font-medium text-gray-600\">Total Products</p>\r\n                  <p className=\"text-3xl font-bold text-gray-900\">{metrics.totalProducts.toLocaleString()}</p>\r\n                  <p className=\"text-xs text-gray-500 mt-1\">{metrics.lowStockProducts} low stock</p>\r\n                </div>\r\n                <div className=\"p-3 bg-green-100 rounded-lg\">\r\n                  <Package className=\"h-8 w-8 text-green-600\" />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Total Orders */}\r\n            <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6 hover:shadow-md transition-shadow\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <div>\r\n                  <p className=\"text-sm font-medium text-gray-600\">Total Orders</p>\r\n                  <p className=\"text-3xl font-bold text-gray-900\">{metrics.totalOrders.toLocaleString()}</p>\r\n                  <p className=\"text-xs text-gray-500 mt-1\">{metrics.ordersToday} today</p>\r\n                </div>\r\n                <div className=\"p-3 bg-orange-100 rounded-lg\">\r\n                  <ShoppingCart className=\"h-8 w-8 text-orange-600\" />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Total Revenue */}\r\n            <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6 hover:shadow-md transition-shadow\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <div>\r\n                  <p className=\"text-sm font-medium text-gray-600\">Total Revenue</p>\r\n                  <p className=\"text-3xl font-bold text-gray-900\">${metrics.totalRevenue.toLocaleString()}</p>\r\n                  <p className=\"text-xs text-gray-500 mt-1\">${metrics.revenueToday.toFixed(2)} today</p>\r\n                </div>\r\n                <div className=\"p-3 bg-purple-100 rounded-lg\">\r\n                  <DollarSign className=\"h-8 w-8 text-purple-600\" />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* KPI Metrics with Trends */}\r\n      {kpiMetrics.length > 0 && (\r\n        <div>\r\n          <h2 className=\"text-xl font-bold text-gray-900 mb-4 flex items-center\">\r\n            <TrendingUp className=\"h-6 w-6 mr-2 text-primary\" />\r\n            Performance Trends (30 Days)\r\n          </h2>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n            {kpiMetrics.filter(kpi => kpi && kpi.metricName).map((kpi, index) => {\r\n              const getTrendIcon = () => {\r\n                switch (kpi?.trendDirection) {\r\n                  case 'up':\r\n                    return <ArrowUp className=\"h-4 w-4 text-green-500\" />;\r\n                  case 'down':\r\n                    return <ArrowDown className=\"h-4 w-4 text-red-500\" />;\r\n                  default:\r\n                    return <Minus className=\"h-4 w-4 text-gray-500\" />;\r\n                }\r\n              };\r\n\r\n              const getTrendColor = () => {\r\n                switch (kpi?.trendDirection) {\r\n                  case 'up':\r\n                    return 'text-green-600 bg-green-100';\r\n                  case 'down':\r\n                    return 'text-red-600 bg-red-100';\r\n                  default:\r\n                    return 'text-gray-600 bg-gray-100';\r\n                }\r\n              };\r\n\r\n              return (\r\n                <div key={`kpi-${index}-${kpi.metricName}`} className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6 hover:shadow-md transition-shadow\">\r\n                  <div className=\"flex items-center justify-between mb-2\">\r\n                    <p className=\"text-sm font-medium text-gray-600 capitalize\">\r\n                      {(kpi?.metricName || '').replace('_', ' ')}\r\n                    </p>\r\n                    <div className={`flex items-center px-2 py-1 rounded-full text-xs font-medium ${getTrendColor()}`}>\r\n                      {getTrendIcon()}\r\n                      <span className=\"ml-1\">{Math.abs(kpi?.percentageChange || 0).toFixed(1)}%</span>\r\n                    </div>\r\n                  </div>\r\n                  <p className=\"text-2xl font-bold text-gray-900\">\r\n                    {(kpi?.metricName || '').toLowerCase().includes('revenue') || (kpi?.metricName || '').toLowerCase().includes('value')\r\n                      ? `$${(kpi?.currentValue || 0).toLocaleString()}`\r\n                      : (kpi?.currentValue || 0).toLocaleString()}\r\n                  </p>\r\n                  <p className=\"text-xs text-gray-500 mt-1\">\r\n                    vs {(kpi?.previousValue || 0).toLocaleString()} previous period\r\n                  </p>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Interactive Quick Insights Widgets */}\r\n      <div>\r\n        <h2 className=\"text-xl font-bold text-gray-900 mb-4 flex items-center\">\r\n          <Eye className=\"h-6 w-6 mr-2 text-primary\" />\r\n          Quick Insights\r\n        </h2>\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n          {/* Top Performing Products Widget */}\r\n          <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6 hover:shadow-md transition-shadow cursor-pointer\"\r\n            onClick={() => setCurrentView('analytics')}>\r\n            <div className=\"flex items-center justify-between mb-4\">\r\n              <h3 className=\"text-lg font-semibold text-gray-900\">Top Products</h3>\r\n              <Package className=\"h-5 w-5 text-green-600\" />\r\n            </div>\r\n            <div className=\"space-y-3\">\r\n              {/* Display real top products data */}\r\n              {metrics && metrics.topProducts && metrics.topProducts.length > 0 ? (\r\n                metrics.topProducts.slice(0, 3).map((product: any, index: number) => (\r\n                  <div key={index} className=\"flex items-center justify-between\">\r\n                    <span className=\"text-sm text-gray-600\">{product.name || `Product ${index + 1}`}</span>\r\n                    <span className=\"text-sm font-semibold text-gray-900\">\r\n                      ${product.totalRevenue ? product.totalRevenue.toLocaleString() : '0'}\r\n                    </span>\r\n                  </div>\r\n                ))\r\n              ) : (\r\n                <>\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <span className=\"text-sm text-gray-600\">No data available</span>\r\n                    <span className=\"text-sm font-semibold text-gray-900\">$0</span>\r\n                  </div>\r\n                </>\r\n              )}\r\n            </div>\r\n            <div className=\"mt-4 pt-4 border-t border-gray-100\">\r\n              <button className=\"text-sm text-primary hover:text-primary-dark font-medium flex items-center\">\r\n                View detailed analysis\r\n                <ArrowUp className=\"h-4 w-4 ml-1 rotate-45\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Recent Activity Widget */}\r\n          <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6 hover:shadow-md transition-shadow cursor-pointer\"\r\n            onClick={() => { setSelectedTable('orders'); setCurrentView('table'); }}>\r\n            <div className=\"flex items-center justify-between mb-4\">\r\n              <h3 className=\"text-lg font-semibold text-gray-900\">Recent Orders</h3>\r\n              <Activity className=\"h-5 w-5 text-blue-600\" />\r\n            </div>\r\n            <div className=\"space-y-3\">\r\n              {/* Display real recent orders data */}\r\n              {metrics && metrics.recentOrders && metrics.recentOrders.length > 0 ? (\r\n                metrics.recentOrders.slice(0, 3).map((order: any, index: number) => (\r\n                  <div key={index} className=\"flex items-center justify-between\">\r\n                    <div>\r\n                      <span className=\"text-sm font-medium text-gray-900\">\r\n                        Order #{order.order_number || `ORD-${index + 1}`}\r\n                      </span>\r\n                      <p className=\"text-xs text-gray-500\">\r\n                        {order.created_at ? new Date(order.created_at).toLocaleDateString() : 'Just now'}\r\n                      </p>\r\n                    </div>\r\n                    <span className=\"text-sm font-semibold text-green-600\">\r\n                      ${order.total_amount ? parseFloat(order.total_amount).toFixed(2) : '0.00'}\r\n                    </span>\r\n                  </div>\r\n                ))\r\n              ) : (\r\n                <>\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <div>\r\n                      <span className=\"text-sm font-medium text-gray-900\">No recent orders</span>\r\n                      <p className=\"text-xs text-gray-500\">-</p>\r\n                    </div>\r\n                    <span className=\"text-sm font-semibold text-green-600\">$0.00</span>\r\n                  </div>\r\n                </>\r\n              )}\r\n            </div>\r\n            <div className=\"mt-4 pt-4 border-t border-gray-100\">\r\n              <button className=\"text-sm text-primary hover:text-primary-dark font-medium flex items-center\">\r\n                Manage all orders\r\n                <ArrowUp className=\"h-4 w-4 ml-1 rotate-45\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Low Stock Alerts Widget */}\r\n          <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6 hover:shadow-md transition-shadow cursor-pointer\"\r\n            onClick={() => { setSelectedTable('products'); setCurrentView('table'); }}>\r\n            <div className=\"flex items-center justify-between mb-4\">\r\n              <h3 className=\"text-lg font-semibold text-gray-900\">Stock Alerts</h3>\r\n              <AlertTriangle className=\"h-5 w-5 text-red-600\" />\r\n            </div>\r\n            <div className=\"space-y-3\">\r\n              {/* Display real low stock data */}\r\n              {metrics && metrics.lowStockProducts && metrics.lowStockProducts.length > 0 ? (\r\n                metrics.lowStockProducts.slice(0, 3).map((product: any, index: number) => (\r\n                  <div key={index} className=\"flex items-center justify-between\">\r\n                    <div>\r\n                      <span className=\"text-sm font-medium text-gray-900\">\r\n                        {product.name || `Product ${index + 1}`}\r\n                      </span>\r\n                      <p className={`text-xs ${product.stock <= 5 ? 'text-red-500' :\r\n                        product.stock <= 10 ? 'text-orange-500' : 'text-yellow-500'\r\n                        }`}>\r\n                        Only {product.stock || 0} left\r\n                      </p>\r\n                    </div>\r\n                    <span className={`px-2 py-1 text-xs font-medium rounded-full ${product.stock <= 5 ? 'bg-red-100 text-red-800' :\r\n                      product.stock <= 10 ? 'bg-orange-100 text-orange-800' : 'bg-yellow-100 text-yellow-800'\r\n                      }`}>\r\n                      {product.stock <= 5 ? 'Critical' : product.stock <= 10 ? 'Low' : 'Medium'}\r\n                    </span>\r\n                  </div>\r\n                ))\r\n              ) : (\r\n                <>\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <div>\r\n                      <span className=\"text-sm font-medium text-gray-900\">All products well stocked</span>\r\n                      <p className=\"text-xs text-green-500\">No alerts</p>\r\n                    </div>\r\n                    <span className=\"px-2 py-1 text-xs font-medium bg-green-100 text-green-800 rounded-full\">Good</span>\r\n                  </div>\r\n                </>\r\n              )}\r\n            </div>\r\n            <div className=\"mt-4 pt-4 border-t border-gray-100\">\r\n              <button className=\"text-sm text-primary hover:text-primary-dark font-medium flex items-center\">\r\n                Manage inventory\r\n                <ArrowUp className=\"h-4 w-4 ml-1 rotate-45\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Quick Actions Panel */}\r\n      <div>\r\n        <h2 className=\"text-xl font-bold text-gray-900 mb-4 flex items-center\">\r\n          <Settings className=\"h-6 w-6 mr-2 text-primary\" />\r\n          Quick Actions\r\n        </h2>\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\r\n          <button\r\n            onClick={() => { setSelectedTable('products'); setCurrentView('table'); }}\r\n            className=\"flex items-center p-4 bg-white rounded-xl shadow-sm border border-gray-200 hover:shadow-md transition-all hover:border-primary text-left\"\r\n          >\r\n            <div className=\"p-2 bg-green-100 rounded-lg mr-3\">\r\n              <Package className=\"h-5 w-5 text-green-600\" />\r\n            </div>\r\n            <div>\r\n              <p className=\"font-medium text-gray-900\">Add Product</p>\r\n              <p className=\"text-sm text-gray-500\">Create new product</p>\r\n            </div>\r\n          </button>\r\n\r\n          <button\r\n            onClick={() => { setSelectedTable('orders'); setCurrentView('table'); }}\r\n            className=\"flex items-center p-4 bg-white rounded-xl shadow-sm border border-gray-200 hover:shadow-md transition-all hover:border-primary text-left\"\r\n          >\r\n            <div className=\"p-2 bg-blue-100 rounded-lg mr-3\">\r\n              <ShoppingCart className=\"h-5 w-5 text-blue-600\" />\r\n            </div>\r\n            <div>\r\n              <p className=\"font-medium text-gray-900\">View Orders</p>\r\n              <p className=\"text-sm text-gray-500\">Manage customer orders</p>\r\n            </div>\r\n          </button>\r\n\r\n          <button\r\n            onClick={() => { setSelectedTable('profiles'); setCurrentView('table'); }}\r\n            className=\"flex items-center p-4 bg-white rounded-xl shadow-sm border border-gray-200 hover:shadow-md transition-all hover:border-primary text-left\"\r\n          >\r\n            <div className=\"p-2 bg-purple-100 rounded-lg mr-3\">\r\n              <Users className=\"h-5 w-5 text-purple-600\" />\r\n            </div>\r\n            <div>\r\n              <p className=\"font-medium text-gray-900\">Manage Users</p>\r\n              <p className=\"text-sm text-gray-500\">User administration</p>\r\n            </div>\r\n          </button>\r\n\r\n          <button\r\n            onClick={() => setCurrentView('analytics')}\r\n            className=\"flex items-center p-4 bg-white rounded-xl shadow-sm border border-gray-200 hover:shadow-md transition-all hover:border-primary text-left\"\r\n          >\r\n            <div className=\"p-2 bg-orange-100 rounded-lg mr-3\">\r\n              <BarChart3 className=\"h-5 w-5 text-orange-600\" />\r\n            </div>\r\n            <div>\r\n              <p className=\"font-medium text-gray-900\">View Reports</p>\r\n              <p className=\"text-sm text-gray-500\">Analytics & insights</p>\r\n            </div>\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Statistics Overview */}\r\n      {stats && (\r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n          <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6\">\r\n            <div className=\"flex items-center\">\r\n              <div className=\"p-3 bg-blue-100 rounded-lg\">\r\n                <Database className=\"h-6 w-6 text-blue-600\" />\r\n              </div>\r\n              <div className=\"ml-4\">\r\n                <p className=\"text-sm font-medium text-gray-600\">Total Tables</p>\r\n                <p className=\"text-2xl font-bold text-gray-900\">{stats.totalTables}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6\">\r\n            <div className=\"flex items-center\">\r\n              <div className=\"p-3 bg-green-100 rounded-lg\">\r\n                <BarChart3 className=\"h-6 w-6 text-green-600\" />\r\n              </div>\r\n              <div className=\"ml-4\">\r\n                <p className=\"text-sm font-medium text-gray-600\">Total Records</p>\r\n                <p className=\"text-2xl font-bold text-gray-900\">{stats.totalRecords.toLocaleString()}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6\">\r\n            <div className=\"flex items-center\">\r\n              <div className=\"p-3 bg-purple-100 rounded-lg\">\r\n                <TrendingUp className=\"h-6 w-6 text-purple-600\" />\r\n              </div>\r\n              <div className=\"ml-4\">\r\n                <p className=\"text-sm font-medium text-gray-600\">Last Updated</p>\r\n                <p className=\"text-sm font-bold text-gray-900\">\r\n                  {stats.lastUpdated.toLocaleTimeString()}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Search and Filters */}\r\n      <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6\">\r\n        <div className=\"flex items-center space-x-4\">\r\n          <div className=\"flex-1 relative\">\r\n            <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search tables...\"\r\n              value={searchTerm}\r\n              onChange={(e) => setSearchTerm(e.target.value)}\r\n              className=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-primary\"\r\n            />\r\n          </div>\r\n          <button className=\"flex items-center px-4 py-2 border border-gray-300 rounded-lg hover:bg-gray-50\">\r\n            <Filter className=\"h-4 w-4 mr-2\" />\r\n            Filter\r\n          </button>\r\n          <button\r\n            onClick={handleExportData}\r\n            className=\"flex items-center px-4 py-2 border border-gray-300 rounded-lg hover:bg-gray-50\"\r\n          >\r\n            <Download className=\"h-4 w-4 mr-2\" />\r\n            Export Data\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Tables Grid */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\r\n        {filteredTables.map((table) => (\r\n          <div\r\n            key={table.name}\r\n            className=\"bg-white rounded-xl shadow-sm border border-gray-200 hover:shadow-md transition-all duration-200 cursor-pointer\"\r\n            onClick={() => {\r\n              setSelectedTable(table.name);\r\n              setCurrentView('table');\r\n            }}\r\n          >\r\n            <div className=\"p-6\">\r\n              <div className=\"flex items-center justify-between mb-4\">\r\n                <div className={`p-3 ${table.color} rounded-lg text-white`}>\r\n                  {table.icon}\r\n                </div>\r\n                <div className=\"text-right\">\r\n                  <p className=\"text-2xl font-bold text-gray-900\">{table.count.toLocaleString()}</p>\r\n                  <p className=\"text-xs text-gray-500\">records</p>\r\n                </div>\r\n              </div>\r\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">{table.displayName}</h3>\r\n              <p className=\"text-sm text-gray-600 mb-4\">{table.description}</p>\r\n              <div className=\"flex items-center justify-between\">\r\n                <span className=\"text-xs font-medium text-gray-500 uppercase tracking-wide\">\r\n                  {table.name}\r\n                </span>\r\n                <button className=\"flex items-center text-primary hover:text-primary-dark text-sm font-medium\">\r\n                  <Eye className=\"h-4 w-4 mr-1\" />\r\n                  View\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {filteredTables.length === 0 && searchTerm && (\r\n        <div className=\"text-center py-12\">\r\n          <Database className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\r\n          <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No tables found</h3>\r\n          <p className=\"text-gray-600\">Try adjusting your search terms.</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n\r\nComprehensiveAdminDashboard.displayName = 'ComprehensiveAdminDashboard';\r\n","import React from 'react';\nimport { Eye, EyeOff, Mail, User, Phone, Calendar, Shield } from 'lucide-react';\nimport { Modal } from '../../Common/Modal';\nimport { EnhancedButton } from '../../Common/EnhancedButton';\n\ninterface UserFormData {\n  email: string;\n  name: string;\n  role: 'admin' | 'seller' | 'customer';\n  phone: string;\n  dateOfBirth: string;\n  isActive: boolean;\n  sendEmail: boolean;\n}\n\ninterface UserFormModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onSubmit: () => void;\n  formData: UserFormData;\n  setFormData: (data: UserFormData) => void;\n  isEdit: boolean;\n  loading: boolean;\n  generatedPassword?: string;\n  showPassword: boolean;\n  setShowPassword: (show: boolean) => void;\n}\n\nexport const UserFormModal: React.FC<UserFormModalProps> = ({\n  isOpen,\n  onClose,\n  onSubmit,\n  formData,\n  setFormData,\n  isEdit,\n  loading,\n  generatedPassword,\n  showPassword,\n  setShowPassword\n}) => {\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    onSubmit();\n  };\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClose} title={isEdit ? 'Edit User' : 'Create New User'}>\n      <form onSubmit={handleSubmit} className=\"space-y-6\">\n        {/* Basic Information */}\n        <div className=\"space-y-4\">\n          <h3 className=\"text-lg font-medium text-gray-900 flex items-center\">\n            <User className=\"w-5 h-5 mr-2 text-indigo-600\" />\n            Basic Information\n          </h3>\n          \n          {/* Name */}\n          <div>\n            <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n              Full Name *\n            </label>\n            <input\n              type=\"text\"\n              id=\"name\"\n              required\n              value={formData.name}\n              onChange={(e) => setFormData({ ...formData, name: e.target.value })}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-transparent\"\n              placeholder=\"Enter full name\"\n            />\n          </div>\n\n          {/* Email */}\n          <div>\n            <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n              Email Address *\n            </label>\n            <div className=\"relative\">\n              <Mail className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4\" />\n              <input\n                type=\"email\"\n                id=\"email\"\n                required\n                value={formData.email}\n                onChange={(e) => setFormData({ ...formData, email: e.target.value })}\n                className=\"w-full pl-10 pr-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-transparent\"\n                placeholder=\"Enter email address\"\n              />\n            </div>\n          </div>\n\n          {/* Phone */}\n          <div>\n            <label htmlFor=\"phone\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n              Phone Number\n            </label>\n            <div className=\"relative\">\n              <Phone className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4\" />\n              <input\n                type=\"tel\"\n                id=\"phone\"\n                value={formData.phone}\n                onChange={(e) => setFormData({ ...formData, phone: e.target.value })}\n                className=\"w-full pl-10 pr-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-transparent\"\n                placeholder=\"Enter phone number\"\n              />\n            </div>\n          </div>\n\n          {/* Date of Birth */}\n          <div>\n            <label htmlFor=\"dateOfBirth\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n              Date of Birth\n            </label>\n            <div className=\"relative\">\n              <Calendar className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4\" />\n              <input\n                type=\"date\"\n                id=\"dateOfBirth\"\n                value={formData.dateOfBirth}\n                onChange={(e) => setFormData({ ...formData, dateOfBirth: e.target.value })}\n                className=\"w-full pl-10 pr-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-transparent\"\n              />\n            </div>\n          </div>\n        </div>\n\n        {/* Role and Permissions */}\n        <div className=\"space-y-4\">\n          <h3 className=\"text-lg font-medium text-gray-900 flex items-center\">\n            <Shield className=\"w-5 h-5 mr-2 text-indigo-600\" />\n            Role & Permissions\n          </h3>\n          \n          {/* Role */}\n          <div>\n            <label htmlFor=\"role\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n              User Role *\n            </label>\n            <select\n              id=\"role\"\n              required\n              value={formData.role}\n              onChange={(e) => setFormData({ ...formData, role: e.target.value as any })}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-transparent\"\n            >\n              <option value=\"customer\">Customer</option>\n              <option value=\"seller\">Seller</option>\n              <option value=\"admin\">Administrator</option>\n            </select>\n            <p className=\"mt-1 text-xs text-gray-500\">\n              {formData.role === 'admin' && 'Full access to all platform features and settings'}\n              {formData.role === 'seller' && 'Can manage products, orders, and customer interactions'}\n              {formData.role === 'customer' && 'Can browse products, place orders, and manage account'}\n            </p>\n          </div>\n\n          {/* Status */}\n          <div className=\"flex items-center\">\n            <input\n              type=\"checkbox\"\n              id=\"isActive\"\n              checked={formData.isActive}\n              onChange={(e) => setFormData({ ...formData, isActive: e.target.checked })}\n              className=\"rounded border-gray-300 text-indigo-600 focus:ring-indigo-500\"\n            />\n            <label htmlFor=\"isActive\" className=\"ml-2 text-sm text-gray-700\">\n              Account is active\n            </label>\n          </div>\n        </div>\n\n        {/* Email Settings */}\n        {!isEdit && (\n          <div className=\"space-y-4\">\n            <h3 className=\"text-lg font-medium text-gray-900 flex items-center\">\n              <Mail className=\"w-5 h-5 mr-2 text-indigo-600\" />\n              Email Settings\n            </h3>\n            \n            <div className=\"flex items-center\">\n              <input\n                type=\"checkbox\"\n                id=\"sendEmail\"\n                checked={formData.sendEmail}\n                onChange={(e) => setFormData({ ...formData, sendEmail: e.target.checked })}\n                className=\"rounded border-gray-300 text-indigo-600 focus:ring-indigo-500\"\n              />\n              <label htmlFor=\"sendEmail\" className=\"ml-2 text-sm text-gray-700\">\n                Send welcome email with login credentials\n              </label>\n            </div>\n            \n            {formData.sendEmail && (\n              <div className=\"p-3 bg-blue-50 border border-blue-200 rounded-lg\">\n                <p className=\"text-sm text-blue-800\">\n                  <strong>Email will include:</strong>\n                </p>\n                <ul className=\"mt-1 text-sm text-blue-700 list-disc list-inside\">\n                  <li>Welcome message and account details</li>\n                  <li>Temporary password for first login</li>\n                  <li>Email confirmation link (if required)</li>\n                  <li>Instructions for getting started</li>\n                </ul>\n              </div>\n            )}\n          </div>\n        )}\n\n        {/* Generated Password Display */}\n        {generatedPassword && (\n          <div className=\"space-y-4\">\n            <h3 className=\"text-lg font-medium text-gray-900\">Generated Password</h3>\n            <div className=\"p-4 bg-green-50 border border-green-200 rounded-lg\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex-1\">\n                  <p className=\"text-sm font-medium text-green-800 mb-2\">\n                    Temporary password for {formData.name}:\n                  </p>\n                  <div className=\"flex items-center space-x-2\">\n                    <code className=\"px-3 py-2 bg-white border border-green-300 rounded text-sm font-mono\">\n                      {showPassword ? generatedPassword : '••••••••••••'}\n                    </code>\n                    <button\n                      type=\"button\"\n                      onClick={() => setShowPassword(!showPassword)}\n                      className=\"p-2 text-green-600 hover:text-green-800\"\n                    >\n                      {showPassword ? <EyeOff className=\"w-4 h-4\" /> : <Eye className=\"w-4 h-4\" />}\n                    </button>\n                  </div>\n                </div>\n              </div>\n              <p className=\"mt-2 text-xs text-green-700\">\n                Make sure to securely share this password with the user. They should change it after first login.\n              </p>\n            </div>\n          </div>\n        )}\n\n        {/* Form Actions */}\n        <div className=\"flex flex-col sm:flex-row sm:justify-end gap-3 pt-6 border-t border-gray-200\">\n          <EnhancedButton\n            type=\"button\"\n            onClick={onClose}\n            variant=\"outline\"\n            className=\"w-full sm:w-auto\"\n          >\n            Cancel\n          </EnhancedButton>\n          <EnhancedButton\n            type=\"submit\"\n            variant=\"primary\"\n            loading={loading}\n            className=\"w-full sm:w-auto\"\n          >\n            {isEdit ? 'Update User' : 'Create User'}\n          </EnhancedButton>\n        </div>\n      </form>\n    </Modal>\n  );\n};\n","import React, { useState, useEffect } from 'react';\r\nimport { FileText, Search, Download, Eye, User, Activity, Shield, AlertTriangle, Info, CheckCircle, XCircle, Settings, Users, Package, ShoppingCart, RefreshCw, ChevronDown, ChevronUp } from 'lucide-react';\r\nimport { supabase } from '../../../lib/supabase';\r\nimport { useNotification } from '../../../contexts/NotificationContext';\r\nimport { LoadingSpinner } from '../../Common/LoadingSpinner';\r\nimport { EnhancedButton } from '../../Common/EnhancedButton';\r\nimport { Modal } from '../../Common/Modal';\r\nimport { AdminErrorBoundary } from '../../Common/AdminErrorBoundary';\r\n\r\ninterface AuditLog {\r\n  id: string;\r\n  timestamp: string;\r\n  userId: string;\r\n  userName: string;\r\n  userEmail: string;\r\n  action: string;\r\n  resource: string;\r\n  resourceId: string;\r\n  details: string;\r\n  ipAddress: string;\r\n  userAgent: string;\r\n  status: 'success' | 'failure' | 'warning';\r\n  category: 'auth' | 'user' | 'product' | 'order' | 'system' | 'security';\r\n  metadata: Record<string, any>;\r\n}\r\n\r\ninterface AuditFilters {\r\n  dateFrom: string;\r\n  dateTo: string;\r\n  userId: string;\r\n  category: string;\r\n  status: string;\r\n  action: string;\r\n  searchTerm: string;\r\n}\r\n\r\nexport const AuditLogs: React.FC = () => {\r\n  const [logs, setLogs] = useState<AuditLog[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [selectedLog, setSelectedLog] = useState<AuditLog | null>(null);\r\n  const [isDetailModalOpen, setIsDetailModalOpen] = useState(false);\r\n  const [expandedRows, setExpandedRows] = useState<Set<string>>(new Set());\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(1);\r\n  const [pageSize] = useState(50);\r\n  const { showNotification } = useNotification();\r\n\r\n  const [filters, setFilters] = useState<AuditFilters>({\r\n    dateFrom: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString().split('T')[0],\r\n    dateTo: new Date().toISOString().split('T')[0],\r\n    userId: '',\r\n    category: '',\r\n    status: '',\r\n    action: '',\r\n    searchTerm: ''\r\n  });\r\n\r\n  const categories = [\r\n    { value: '', label: 'All Categories' },\r\n    { value: 'auth', label: 'Authentication' },\r\n    { value: 'user', label: 'User Management' },\r\n    { value: 'product', label: 'Product Management' },\r\n    { value: 'order', label: 'Order Management' },\r\n    { value: 'system', label: 'System Changes' },\r\n    { value: 'security', label: 'Security Events' }\r\n  ];\r\n\r\n  const statuses = [\r\n    { value: '', label: 'All Statuses' },\r\n    { value: 'success', label: 'Success' },\r\n    { value: 'failure', label: 'Failure' },\r\n    { value: 'warning', label: 'Warning' }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    fetchAuditLogs();\r\n  }, [filters, currentPage]);\r\n\r\n  const fetchAuditLogs = async () => {\r\n    setLoading(true);\r\n    try {\r\n      // Mock data - replace with actual Supabase query\r\n      const mockLogs: AuditLog[] = [\r\n        {\r\n          id: '1',\r\n          timestamp: new Date().toISOString(),\r\n          userId: 'user-123',\r\n          userName: 'John Admin',\r\n          userEmail: 'john@example.com',\r\n          action: 'LOGIN',\r\n          resource: 'auth',\r\n          resourceId: 'session-456',\r\n          details: 'User logged in successfully',\r\n          ipAddress: '192.168.1.100',\r\n          userAgent: 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36',\r\n          status: 'success',\r\n          category: 'auth',\r\n          metadata: { sessionId: 'session-456', loginMethod: 'email' }\r\n        },\r\n        {\r\n          id: '2',\r\n          timestamp: new Date(Date.now() - 300000).toISOString(),\r\n          userId: 'user-124',\r\n          userName: 'Jane Manager',\r\n          userEmail: 'jane@example.com',\r\n          action: 'UPDATE_PRODUCT',\r\n          resource: 'products',\r\n          resourceId: 'prod-789',\r\n          details: 'Updated product price from $99.99 to $89.99',\r\n          ipAddress: '192.168.1.101',\r\n          userAgent: 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36',\r\n          status: 'success',\r\n          category: 'product',\r\n          metadata: { productId: 'prod-789', oldPrice: 99.99, newPrice: 89.99 }\r\n        },\r\n        {\r\n          id: '3',\r\n          timestamp: new Date(Date.now() - 600000).toISOString(),\r\n          userId: 'user-125',\r\n          userName: 'Bob User',\r\n          userEmail: 'bob@example.com',\r\n          action: 'FAILED_LOGIN',\r\n          resource: 'auth',\r\n          resourceId: 'attempt-321',\r\n          details: 'Failed login attempt - invalid password',\r\n          ipAddress: '203.0.113.45',\r\n          userAgent: 'Mozilla/5.0 (iPhone; CPU iPhone OS 14_7_1 like Mac OS X)',\r\n          status: 'failure',\r\n          category: 'security',\r\n          metadata: { reason: 'invalid_password', attempts: 3 }\r\n        },\r\n        {\r\n          id: '4',\r\n          timestamp: new Date(Date.now() - 900000).toISOString(),\r\n          userId: 'user-123',\r\n          userName: 'John Admin',\r\n          userEmail: 'john@example.com',\r\n          action: 'DELETE_USER',\r\n          resource: 'users',\r\n          resourceId: 'user-999',\r\n          details: 'Deleted user account for inactive user',\r\n          ipAddress: '192.168.1.100',\r\n          userAgent: 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36',\r\n          status: 'success',\r\n          category: 'user',\r\n          metadata: { deletedUserId: 'user-999', reason: 'inactive_account' }\r\n        },\r\n        {\r\n          id: '5',\r\n          timestamp: new Date(Date.now() - 1200000).toISOString(),\r\n          userId: 'system',\r\n          userName: 'System',\r\n          userEmail: 'system@example.com',\r\n          action: 'BACKUP_COMPLETED',\r\n          resource: 'database',\r\n          resourceId: 'backup-001',\r\n          details: 'Automated database backup completed successfully',\r\n          ipAddress: '127.0.0.1',\r\n          userAgent: 'System/1.0',\r\n          status: 'success',\r\n          category: 'system',\r\n          metadata: { backupSize: '2.5GB', duration: '45min' }\r\n        }\r\n      ];\r\n\r\n      setLogs(mockLogs);\r\n      setTotalPages(Math.ceil(mockLogs.length / pageSize));\r\n    } catch (error) {\r\n      console.error('Error fetching audit logs:', error);\r\n      showNotification({\r\n        type: 'error',\r\n        title: 'Error',\r\n        message: 'Failed to load audit logs'\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleFilterChange = (key: keyof AuditFilters, value: string) => {\r\n    setFilters(prev => ({ ...prev, [key]: value }));\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  const exportLogs = () => {\r\n    const csvData = logs.map(log => ({\r\n      Timestamp: new Date(log.timestamp).toLocaleString(),\r\n      User: log.userName,\r\n      Email: log.userEmail,\r\n      Action: log.action,\r\n      Resource: log.resource,\r\n      Status: log.status,\r\n      Category: log.category,\r\n      Details: log.details,\r\n      'IP Address': log.ipAddress\r\n    }));\r\n\r\n    const csvContent = [\r\n      Object.keys(csvData[0]).join(','),\r\n      ...csvData.map(row => Object.values(row).map(val => `\"${val}\"`).join(','))\r\n    ].join('\\n');\r\n\r\n    const blob = new Blob([csvContent], { type: 'text/csv' });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = `audit-logs-${new Date().toISOString().split('T')[0]}.csv`;\r\n    a.click();\r\n    URL.revokeObjectURL(url);\r\n\r\n    showNotification({\r\n      type: 'success',\r\n      title: 'Export Complete',\r\n      message: 'Audit logs exported successfully'\r\n    });\r\n  };\r\n\r\n  const getStatusIcon = (status: string) => {\r\n    switch (status) {\r\n      case 'success':\r\n        return <CheckCircle className=\"h-4 w-4 text-green-600\" />;\r\n      case 'failure':\r\n        return <XCircle className=\"h-4 w-4 text-red-600\" />;\r\n      case 'warning':\r\n        return <AlertTriangle className=\"h-4 w-4 text-yellow-600\" />;\r\n      default:\r\n        return <Info className=\"h-4 w-4 text-blue-600\" />;\r\n    }\r\n  };\r\n\r\n  const getCategoryIcon = (category: string) => {\r\n    switch (category) {\r\n      case 'auth':\r\n        return <Shield className=\"h-4 w-4\" />;\r\n      case 'user':\r\n        return <Users className=\"h-4 w-4\" />;\r\n      case 'product':\r\n        return <Package className=\"h-4 w-4\" />;\r\n      case 'order':\r\n        return <ShoppingCart className=\"h-4 w-4\" />;\r\n      case 'system':\r\n        return <Settings className=\"h-4 w-4\" />;\r\n      case 'security':\r\n        return <AlertTriangle className=\"h-4 w-4\" />;\r\n      default:\r\n        return <Activity className=\"h-4 w-4\" />;\r\n    }\r\n  };\r\n\r\n  const toggleRowExpansion = (logId: string) => {\r\n    const newExpanded = new Set(expandedRows);\r\n    if (newExpanded.has(logId)) {\r\n      newExpanded.delete(logId);\r\n    } else {\r\n      newExpanded.add(logId);\r\n    }\r\n    setExpandedRows(newExpanded);\r\n  };\r\n\r\n  const viewLogDetails = (log: AuditLog) => {\r\n    setSelectedLog(log);\r\n    setIsDetailModalOpen(true);\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"p-8\">\r\n        <LoadingSpinner size=\"large\" text=\"Loading audit logs...\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <AdminErrorBoundary>\r\n      <div className=\"space-y-6\">\r\n        {/* Header */}\r\n        <div className=\"flex flex-col lg:flex-row lg:items-center lg:justify-between gap-4\">\r\n          <div>\r\n            <h1 className=\"text-2xl font-bold text-gray-900 flex items-center\">\r\n              <FileText className=\"h-8 w-8 mr-3 text-indigo-600\" />\r\n              Audit Logs\r\n            </h1>\r\n            <p className=\"text-gray-600 mt-1\">\r\n              Track and monitor all system activities and user actions\r\n            </p>\r\n          </div>\r\n          \r\n          <div className=\"flex items-center gap-2\">\r\n            <EnhancedButton\r\n              onClick={exportLogs}\r\n              icon={Download}\r\n              variant=\"outline\"\r\n            >\r\n              Export CSV\r\n            </EnhancedButton>\r\n            <EnhancedButton\r\n              onClick={fetchAuditLogs}\r\n              icon={RefreshCw}\r\n              variant=\"outline\"\r\n            >\r\n              Refresh\r\n            </EnhancedButton>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Filters */}\r\n        <div className=\"bg-white p-6 rounded-lg shadow-sm border border-gray-200\">\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 xl:grid-cols-6 gap-4\">\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">From Date</label>\r\n              <input\r\n                type=\"date\"\r\n                value={filters.dateFrom}\r\n                onChange={(e) => handleFilterChange('dateFrom', e.target.value)}\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 text-sm\"\r\n              />\r\n            </div>\r\n            \r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">To Date</label>\r\n              <input\r\n                type=\"date\"\r\n                value={filters.dateTo}\r\n                onChange={(e) => handleFilterChange('dateTo', e.target.value)}\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 text-sm\"\r\n              />\r\n            </div>\r\n            \r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Category</label>\r\n              <select\r\n                value={filters.category}\r\n                onChange={(e) => handleFilterChange('category', e.target.value)}\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 text-sm\"\r\n              >\r\n                {categories.map(cat => (\r\n                  <option key={cat.value} value={cat.value}>{cat.label}</option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            \r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Status</label>\r\n              <select\r\n                value={filters.status}\r\n                onChange={(e) => handleFilterChange('status', e.target.value)}\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 text-sm\"\r\n              >\r\n                {statuses.map(status => (\r\n                  <option key={status.value} value={status.value}>{status.label}</option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            \r\n            <div className=\"md:col-span-2\">\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Search</label>\r\n              <div className=\"relative\">\r\n                <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Search logs...\"\r\n                  value={filters.searchTerm}\r\n                  onChange={(e) => handleFilterChange('searchTerm', e.target.value)}\r\n                  className=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 text-sm\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Logs Table */}\r\n        <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 overflow-hidden\">\r\n          <div className=\"overflow-x-auto\">\r\n            <table className=\"min-w-full divide-y divide-gray-200\">\r\n              <thead className=\"bg-gray-50\">\r\n                <tr>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Timestamp\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    User\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Action\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Resource\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Status\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    IP Address\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Actions\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                {logs.map((log) => (\r\n                  <React.Fragment key={log.id}>\r\n                    <tr className=\"hover:bg-gray-50\">\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                        {new Date(log.timestamp).toLocaleString()}\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <div className=\"flex items-center\">\r\n                          <User className=\"h-4 w-4 text-gray-400 mr-2\" />\r\n                          <div>\r\n                            <div className=\"text-sm font-medium text-gray-900\">{log.userName}</div>\r\n                            <div className=\"text-sm text-gray-500\">{log.userEmail}</div>\r\n                          </div>\r\n                        </div>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <div className=\"flex items-center\">\r\n                          {getCategoryIcon(log.category)}\r\n                          <span className=\"ml-2 text-sm text-gray-900\">{log.action}</span>\r\n                        </div>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                        {log.resource}\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <div className=\"flex items-center\">\r\n                          {getStatusIcon(log.status)}\r\n                          <span className=\"ml-2 text-sm text-gray-900 capitalize\">{log.status}</span>\r\n                        </div>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                        {log.ipAddress}\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\r\n                        <div className=\"flex space-x-2\">\r\n                          <button\r\n                            onClick={() => toggleRowExpansion(log.id)}\r\n                            className=\"text-indigo-600 hover:text-indigo-900\"\r\n                          >\r\n                            {expandedRows.has(log.id) ? (\r\n                              <ChevronUp className=\"h-4 w-4\" />\r\n                            ) : (\r\n                              <ChevronDown className=\"h-4 w-4\" />\r\n                            )}\r\n                          </button>\r\n                          <button\r\n                            onClick={() => viewLogDetails(log)}\r\n                            className=\"text-indigo-600 hover:text-indigo-900\"\r\n                          >\r\n                            <Eye className=\"h-4 w-4\" />\r\n                          </button>\r\n                        </div>\r\n                      </td>\r\n                    </tr>\r\n                    {expandedRows.has(log.id) && (\r\n                      <tr>\r\n                        <td colSpan={7} className=\"px-6 py-4 bg-gray-50\">\r\n                          <div className=\"space-y-2\">\r\n                            <div>\r\n                              <span className=\"text-sm font-medium text-gray-700\">Details: </span>\r\n                              <span className=\"text-sm text-gray-900\">{log.details}</span>\r\n                            </div>\r\n                            <div>\r\n                              <span className=\"text-sm font-medium text-gray-700\">User Agent: </span>\r\n                              <span className=\"text-sm text-gray-900\">{log.userAgent}</span>\r\n                            </div>\r\n                            {Object.keys(log.metadata).length > 0 && (\r\n                              <div>\r\n                                <span className=\"text-sm font-medium text-gray-700\">Metadata: </span>\r\n                                <pre className=\"text-sm text-gray-900 bg-gray-100 p-2 rounded mt-1 overflow-x-auto\">\r\n                                  {JSON.stringify(log.metadata, null, 2)}\r\n                                </pre>\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n                        </td>\r\n                      </tr>\r\n                    )}\r\n                  </React.Fragment>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n\r\n          {/* Pagination */}\r\n          <div className=\"bg-white px-4 py-3 flex items-center justify-between border-t border-gray-200 sm:px-6\">\r\n            <div className=\"flex-1 flex justify-between sm:hidden\">\r\n              <button\r\n                onClick={() => setCurrentPage(Math.max(1, currentPage - 1))}\r\n                disabled={currentPage === 1}\r\n                className=\"relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 disabled:opacity-50\"\r\n              >\r\n                Previous\r\n              </button>\r\n              <button\r\n                onClick={() => setCurrentPage(Math.min(totalPages, currentPage + 1))}\r\n                disabled={currentPage === totalPages}\r\n                className=\"ml-3 relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 disabled:opacity-50\"\r\n              >\r\n                Next\r\n              </button>\r\n            </div>\r\n            <div className=\"hidden sm:flex-1 sm:flex sm:items-center sm:justify-between\">\r\n              <div>\r\n                <p className=\"text-sm text-gray-700\">\r\n                  Showing <span className=\"font-medium\">{(currentPage - 1) * pageSize + 1}</span> to{' '}\r\n                  <span className=\"font-medium\">{Math.min(currentPage * pageSize, logs.length)}</span> of{' '}\r\n                  <span className=\"font-medium\">{logs.length}</span> results\r\n                </p>\r\n              </div>\r\n              <div>\r\n                <nav className=\"relative z-0 inline-flex rounded-md shadow-sm -space-x-px\">\r\n                  <button\r\n                    onClick={() => setCurrentPage(Math.max(1, currentPage - 1))}\r\n                    disabled={currentPage === 1}\r\n                    className=\"relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50 disabled:opacity-50\"\r\n                  >\r\n                    Previous\r\n                  </button>\r\n                  <button\r\n                    onClick={() => setCurrentPage(Math.min(totalPages, currentPage + 1))}\r\n                    disabled={currentPage === totalPages}\r\n                    className=\"relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50 disabled:opacity-50\"\r\n                  >\r\n                    Next\r\n                  </button>\r\n                </nav>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Log Detail Modal */}\r\n        <Modal\r\n          isOpen={isDetailModalOpen}\r\n          onClose={() => setIsDetailModalOpen(false)}\r\n          title=\"Audit Log Details\"\r\n          size=\"large\"\r\n        >\r\n          {selectedLog && (\r\n            <div className=\"space-y-6\">\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700\">Timestamp</label>\r\n                  <p className=\"mt-1 text-sm text-gray-900\">{new Date(selectedLog.timestamp).toLocaleString()}</p>\r\n                </div>\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700\">Status</label>\r\n                  <div className=\"mt-1 flex items-center\">\r\n                    {getStatusIcon(selectedLog.status)}\r\n                    <span className=\"ml-2 text-sm text-gray-900 capitalize\">{selectedLog.status}</span>\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700\">User</label>\r\n                  <p className=\"mt-1 text-sm text-gray-900\">{selectedLog.userName} ({selectedLog.userEmail})</p>\r\n                </div>\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700\">Category</label>\r\n                  <div className=\"mt-1 flex items-center\">\r\n                    {getCategoryIcon(selectedLog.category)}\r\n                    <span className=\"ml-2 text-sm text-gray-900 capitalize\">{selectedLog.category}</span>\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700\">Action</label>\r\n                  <p className=\"mt-1 text-sm text-gray-900\">{selectedLog.action}</p>\r\n                </div>\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700\">Resource</label>\r\n                  <p className=\"mt-1 text-sm text-gray-900\">{selectedLog.resource} (ID: {selectedLog.resourceId})</p>\r\n                </div>\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700\">IP Address</label>\r\n                  <p className=\"mt-1 text-sm text-gray-900\">{selectedLog.ipAddress}</p>\r\n                </div>\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700\">Details</label>\r\n                <p className=\"mt-1 text-sm text-gray-900\">{selectedLog.details}</p>\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700\">User Agent</label>\r\n                <p className=\"mt-1 text-sm text-gray-900 break-all\">{selectedLog.userAgent}</p>\r\n              </div>\r\n\r\n              {Object.keys(selectedLog.metadata).length > 0 && (\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700\">Metadata</label>\r\n                  <pre className=\"mt-1 text-sm text-gray-900 bg-gray-100 p-3 rounded-md overflow-x-auto\">\r\n                    {JSON.stringify(selectedLog.metadata, null, 2)}\r\n                  </pre>\r\n                </div>\r\n              )}\r\n\r\n              <div className=\"flex justify-end\">\r\n                <EnhancedButton\r\n                  onClick={() => setIsDetailModalOpen(false)}\r\n                  variant=\"outline\"\r\n                >\r\n                  Close\r\n                </EnhancedButton>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </Modal>\r\n      </div>\r\n    </AdminErrorBoundary>\r\n  );\r\n};\r\n","import React, { useState, useEffect, useMemo } from 'react';\nimport { motion } from 'framer-motion';\nimport { Eye, Zap, ZapOff, Type, Palette, MousePointer, Keyboard, Shield, AlertTriangle, CheckCircle, Settings, BarChart3, Accessibility, Monitor, Smartphone, Tablet } from 'lucide-react';\nimport { \n  useAccessibilityPreferences,\n  useScreenReaderAnnouncements,\n  accessibilityTest,\n  colorContrast\n} from '../../../utils/accessibilityUtils';\nimport { useResponsiveDesign } from '../../../utils/responsiveDesign';\n\ninterface AccessibilityDashboardProps {\n  className?: string;\n}\n\ninterface AccessibilityMetrics {\n  score: number;\n  issues: Array<{\n    type: string;\n    severity: 'low' | 'medium' | 'high' | 'critical';\n    count: number;\n    description: string;\n  }>;\n  compliance: {\n    wcagA: boolean;\n    wcagAA: boolean;\n    wcagAAA: boolean;\n  };\n}\n\nexport const AccessibilityDashboard: React.FC<AccessibilityDashboardProps> = ({ \n  className = '' \n}) => {\n  const { preferences, updatePreference } = useAccessibilityPreferences();\n  const { announce } = useScreenReaderAnnouncements();\n  const { deviceType, breakpoint, isTouch } = useResponsiveDesign();\n  \n  const [metrics, setMetrics] = useState<AccessibilityMetrics | null>(null);\n  const [isScanning, setIsScanning] = useState(false);\n  const [selectedTab, setSelectedTab] = useState<'preferences' | 'metrics' | 'testing'>('preferences');\n\n  // Run accessibility scan\n  const runAccessibilityScan = async () => {\n    setIsScanning(true);\n    announce('Starting accessibility scan', 'polite');\n\n    try {\n      // Simulate scan delay\n      await new Promise(resolve => setTimeout(resolve, 2000));\n\n      const report = accessibilityTest.generateReport();\n      \n      // Calculate metrics\n      const issues = [\n        {\n          type: 'Missing Alt Text',\n          severity: 'high' as const,\n          count: report.missingAltText.length,\n          description: 'Images without alternative text'\n        },\n        {\n          type: 'Missing Form Labels',\n          severity: 'critical' as const,\n          count: report.missingFormLabels.length,\n          description: 'Form inputs without proper labels'\n        },\n        {\n          type: 'Heading Issues',\n          severity: 'medium' as const,\n          count: report.headingIssues.length,\n          description: 'Improper heading hierarchy'\n        }\n      ];\n\n      const totalIssues = issues.reduce((sum, issue) => sum + issue.count, 0);\n      const score = Math.max(0, 100 - (totalIssues * 5));\n\n      const newMetrics: AccessibilityMetrics = {\n        score,\n        issues,\n        compliance: {\n          wcagA: score >= 80,\n          wcagAA: score >= 90,\n          wcagAAA: score >= 95\n        }\n      };\n\n      setMetrics(newMetrics);\n      announce(`Accessibility scan complete. Score: ${score}%`, 'assertive');\n    } catch (error) {\n      console.error('Accessibility scan failed:', error);\n      announce('Accessibility scan failed', 'assertive');\n    } finally {\n      setIsScanning(false);\n    }\n  };\n\n  // Auto-run scan on component mount\n  useEffect(() => {\n    runAccessibilityScan();\n  }, []);\n\n  // Preference controls\n  const preferenceControls = useMemo(() => [\n    {\n      key: 'reducedMotion' as const,\n      label: 'Reduce Motion',\n      description: 'Minimize animations and transitions',\n      icon: preferences.reducedMotion ? ZapOff : Zap,\n      enabled: preferences.reducedMotion\n    },\n    {\n      key: 'highContrast' as const,\n      label: 'High Contrast',\n      description: 'Increase color contrast for better visibility',\n      icon: Palette,\n      enabled: preferences.highContrast\n    },\n    {\n      key: 'largeText' as const,\n      label: 'Large Text',\n      description: 'Increase text size for better readability',\n      icon: Type,\n      enabled: preferences.largeText\n    },\n    {\n      key: 'keyboardNavigation' as const,\n      label: 'Keyboard Navigation',\n      description: 'Enhanced keyboard navigation support',\n      icon: Keyboard,\n      enabled: preferences.keyboardNavigation\n    },\n    {\n      key: 'focusVisible' as const,\n      label: 'Focus Indicators',\n      description: 'Show visible focus indicators',\n      icon: MousePointer,\n      enabled: preferences.focusVisible\n    }\n  ], [preferences]);\n\n  // Get score color\n  const getScoreColor = (score: number) => {\n    if (score >= 90) return 'text-green-600';\n    if (score >= 70) return 'text-yellow-600';\n    return 'text-red-600';\n  };\n\n  // Get severity color\n  const getSeverityColor = (severity: string) => {\n    switch (severity) {\n      case 'critical': return 'text-red-600 bg-red-50';\n      case 'high': return 'text-orange-600 bg-orange-50';\n      case 'medium': return 'text-yellow-600 bg-yellow-50';\n      case 'low': return 'text-blue-600 bg-blue-50';\n      default: return 'text-gray-600 bg-gray-50';\n    }\n  };\n\n  return (\n    <div className={`space-y-6 ${className}`}>\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center space-x-3\">\n          <div className=\"p-2 bg-purple-100 rounded-lg\">\n            <Accessibility className=\"w-6 h-6 text-purple-600\" />\n          </div>\n          <div>\n            <h2 className=\"text-2xl font-bold text-gray-900\">Accessibility Dashboard</h2>\n            <p className=\"text-gray-600\">Monitor and manage accessibility features</p>\n          </div>\n        </div>\n\n        <button\n          onClick={runAccessibilityScan}\n          disabled={isScanning}\n          className=\"flex items-center space-x-2 px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 disabled:opacity-50 transition-colors\"\n        >\n          <Shield className={`w-4 h-4 ${isScanning ? 'animate-spin' : ''}`} />\n          <span>{isScanning ? 'Scanning...' : 'Run Scan'}</span>\n        </button>\n      </div>\n\n      {/* Device Info */}\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n        <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-4\">\n          <div className=\"flex items-center space-x-3\">\n            {deviceType === 'mobile' && <Smartphone className=\"w-5 h-5 text-blue-600\" />}\n            {deviceType === 'tablet' && <Tablet className=\"w-5 h-5 text-blue-600\" />}\n            {deviceType === 'desktop' && <Monitor className=\"w-5 h-5 text-blue-600\" />}\n            <div>\n              <p className=\"font-medium text-gray-900\">Device Type</p>\n              <p className=\"text-sm text-gray-600 capitalize\">{deviceType}</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-4\">\n          <div className=\"flex items-center space-x-3\">\n            <MousePointer className=\"w-5 h-5 text-green-600\" />\n            <div>\n              <p className=\"font-medium text-gray-900\">Input Method</p>\n              <p className=\"text-sm text-gray-600\">{isTouch ? 'Touch' : 'Mouse/Keyboard'}</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-4\">\n          <div className=\"flex items-center space-x-3\">\n            <BarChart3 className=\"w-5 h-5 text-purple-600\" />\n            <div>\n              <p className=\"font-medium text-gray-900\">Breakpoint</p>\n              <p className=\"text-sm text-gray-600 uppercase\">{breakpoint}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Tab Navigation */}\n      <div className=\"border-b border-gray-200\">\n        <nav className=\"flex space-x-8\">\n          {[\n            { id: 'preferences', label: 'Preferences', icon: Settings },\n            { id: 'metrics', label: 'Metrics', icon: BarChart3 },\n            { id: 'testing', label: 'Testing', icon: Shield }\n          ].map(({ id, label, icon: Icon }) => (\n            <button\n              key={id}\n              onClick={() => setSelectedTab(id as any)}\n              className={`flex items-center space-x-2 py-2 px-1 border-b-2 font-medium text-sm transition-colors ${\n                selectedTab === id\n                  ? 'border-purple-500 text-purple-600'\n                  : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n              }`}\n            >\n              <Icon className=\"w-4 h-4\" />\n              <span>{label}</span>\n            </button>\n          ))}\n        </nav>\n      </div>\n\n      {/* Tab Content */}\n      <div className=\"space-y-6\">\n        {selectedTab === 'preferences' && (\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            className=\"space-y-4\"\n          >\n            <h3 className=\"text-lg font-semibold text-gray-900\">Accessibility Preferences</h3>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              {preferenceControls.map(({ key, label, description, icon: Icon, enabled }) => (\n                <motion.div\n                  key={key}\n                  whileHover={{ scale: 1.02 }}\n                  className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6\"\n                >\n                  <div className=\"flex items-start justify-between\">\n                    <div className=\"flex items-start space-x-3\">\n                      <div className={`p-2 rounded-lg ${enabled ? 'bg-purple-100' : 'bg-gray-100'}`}>\n                        <Icon className={`w-5 h-5 ${enabled ? 'text-purple-600' : 'text-gray-400'}`} />\n                      </div>\n                      <div>\n                        <h4 className=\"font-medium text-gray-900\">{label}</h4>\n                        <p className=\"text-sm text-gray-600 mt-1\">{description}</p>\n                      </div>\n                    </div>\n                    \n                    <button\n                      onClick={() => {\n                        updatePreference(key, !enabled);\n                        announce(`${label} ${!enabled ? 'enabled' : 'disabled'}`, 'polite');\n                      }}\n                      className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors ${\n                        enabled ? 'bg-purple-600' : 'bg-gray-200'\n                      }`}\n                      role=\"switch\"\n                      aria-checked={enabled}\n                      aria-label={`Toggle ${label}`}\n                    >\n                      <span\n                        className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${\n                          enabled ? 'translate-x-6' : 'translate-x-1'\n                        }`}\n                      />\n                    </button>\n                  </div>\n                </motion.div>\n              ))}\n            </div>\n          </motion.div>\n        )}\n\n        {selectedTab === 'metrics' && (\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            className=\"space-y-6\"\n          >\n            {metrics ? (\n              <>\n                {/* Score Overview */}\n                <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6\">\n                  <div className=\"flex items-center justify-between mb-4\">\n                    <h3 className=\"text-lg font-semibold text-gray-900\">Accessibility Score</h3>\n                    <div className={`text-3xl font-bold ${getScoreColor(metrics.score)}`}>\n                      {metrics.score}%\n                    </div>\n                  </div>\n                  \n                  <div className=\"w-full bg-gray-200 rounded-full h-3 mb-4\">\n                    <div\n                      className={`h-3 rounded-full transition-all duration-500 ${\n                        metrics.score >= 90 ? 'bg-green-500' :\n                        metrics.score >= 70 ? 'bg-yellow-500' : 'bg-red-500'\n                      }`}\n                      style={{ width: `${metrics.score}%` }}\n                    />\n                  </div>\n\n                  {/* WCAG Compliance */}\n                  <div className=\"grid grid-cols-3 gap-4\">\n                    {Object.entries(metrics.compliance).map(([level, compliant]) => (\n                      <div key={level} className=\"text-center\">\n                        <div className={`inline-flex items-center justify-center w-8 h-8 rounded-full mb-2 ${\n                          compliant ? 'bg-green-100 text-green-600' : 'bg-red-100 text-red-600'\n                        }`}>\n                          {compliant ? <CheckCircle className=\"w-4 h-4\" /> : <AlertTriangle className=\"w-4 h-4\" />}\n                        </div>\n                        <p className=\"text-sm font-medium text-gray-900\">{level.toUpperCase()}</p>\n                        <p className=\"text-xs text-gray-600\">{compliant ? 'Compliant' : 'Non-compliant'}</p>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n\n                {/* Issues Breakdown */}\n                <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6\">\n                  <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Issues Breakdown</h3>\n                  \n                  <div className=\"space-y-3\">\n                    {metrics.issues.map((issue, index) => (\n                      <div key={index} className=\"flex items-center justify-between p-3 rounded-lg border border-gray-200\">\n                        <div className=\"flex items-center space-x-3\">\n                          <div className={`px-2 py-1 rounded text-xs font-medium ${getSeverityColor(issue.severity)}`}>\n                            {issue.severity.toUpperCase()}\n                          </div>\n                          <div>\n                            <p className=\"font-medium text-gray-900\">{issue.type}</p>\n                            <p className=\"text-sm text-gray-600\">{issue.description}</p>\n                          </div>\n                        </div>\n                        <div className=\"text-lg font-bold text-gray-900\">\n                          {issue.count}\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              </>\n            ) : (\n              <div className=\"text-center py-8\">\n                <Shield className=\"w-12 h-12 text-gray-400 mx-auto mb-4\" />\n                <p className=\"text-gray-600\">Run an accessibility scan to see metrics</p>\n              </div>\n            )}\n          </motion.div>\n        )}\n\n        {selectedTab === 'testing' && (\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            className=\"space-y-6\"\n          >\n            <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6\">\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Accessibility Testing Tools</h3>\n              \n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <button\n                  onClick={() => {\n                    const issues = accessibilityTest.checkAltText();\n                    announce(`Found ${issues.length} images without alt text`, 'assertive');\n                  }}\n                  className=\"p-4 border border-gray-200 rounded-lg hover:bg-gray-50 text-left transition-colors\"\n                >\n                  <Eye className=\"w-5 h-5 text-blue-600 mb-2\" />\n                  <h4 className=\"font-medium text-gray-900\">Check Alt Text</h4>\n                  <p className=\"text-sm text-gray-600\">Find images missing alternative text</p>\n                </button>\n\n                <button\n                  onClick={() => {\n                    const issues = accessibilityTest.checkFormLabels();\n                    announce(`Found ${issues.length} form inputs without labels`, 'assertive');\n                  }}\n                  className=\"p-4 border border-gray-200 rounded-lg hover:bg-gray-50 text-left transition-colors\"\n                >\n                  <Type className=\"w-5 h-5 text-green-600 mb-2\" />\n                  <h4 className=\"font-medium text-gray-900\">Check Form Labels</h4>\n                  <p className=\"text-sm text-gray-600\">Find form inputs without proper labels</p>\n                </button>\n\n                <button\n                  onClick={() => {\n                    const issues = accessibilityTest.checkHeadingHierarchy();\n                    announce(`Found ${issues.length} heading hierarchy issues`, 'assertive');\n                  }}\n                  className=\"p-4 border border-gray-200 rounded-lg hover:bg-gray-50 text-left transition-colors\"\n                >\n                  <BarChart3 className=\"w-5 h-5 text-purple-600 mb-2\" />\n                  <h4 className=\"font-medium text-gray-900\">Check Headings</h4>\n                  <p className=\"text-sm text-gray-600\">Verify proper heading hierarchy</p>\n                </button>\n\n                <button\n                  onClick={runAccessibilityScan}\n                  disabled={isScanning}\n                  className=\"p-4 border border-gray-200 rounded-lg hover:bg-gray-50 text-left transition-colors disabled:opacity-50\"\n                >\n                  <Shield className={`w-5 h-5 text-orange-600 mb-2 ${isScanning ? 'animate-spin' : ''}`} />\n                  <h4 className=\"font-medium text-gray-900\">Full Scan</h4>\n                  <p className=\"text-sm text-gray-600\">Run comprehensive accessibility audit</p>\n                </button>\n              </div>\n            </div>\n          </motion.div>\n        )}\n      </div>\n    </div>\n  );\n};\n","import React, { useState, useMemo } from 'react';\nimport { motion } from 'framer-motion';\nimport { Palette, Type, Zap, Monitor, Sun, Contrast, RotateCcw, Download, Eye, Settings, Layout, Smartphone, Tablet } from 'lucide-react';\nimport { useTheme } from '../../../contexts/ThemeContext';\nimport { useResponsiveDesign } from '../../../utils/responsiveDesign';\nimport { ResponsiveContainer, ResponsiveGrid, ResponsiveGridItem } from '../../Layout/ResponsiveLayout';\n\ninterface ThemeCustomizationDashboardProps {\n  className?: string;\n}\n\ninterface ThemePreview {\n  name: string;\n  description: string;\n  preview: React.ReactNode;\n}\n\nexport const ThemeCustomizationDashboard: React.FC<ThemeCustomizationDashboardProps> = ({\n  className = ''\n}) => {\n  const {\n    themeConfig,\n    preferences,\n    systemPreferences,\n    setMode,\n    setColorScheme,\n    setFontScale,\n    setBorderRadius,\n    setAnimationLevel,\n    toggleHighContrast,\n    toggleReducedMotion,\n    resetToDefaults\n  } = useTheme();\n\n  const { deviceType, breakpoint } = useResponsiveDesign();\n  const [selectedTab, setSelectedTab] = useState<'appearance' | 'typography' | 'layout' | 'accessibility' | 'preview'>('appearance');\n  const [previewMode, setPreviewMode] = useState<'desktop' | 'tablet' | 'mobile'>('desktop');\n\n  // Theme mode options - only light mode supported\n  const themeModes = [\n    { value: 'light', label: 'Light', icon: Sun, description: 'Clean and bright interface - only mode available' }\n  ];\n\n  // Color scheme options\n  const colorSchemes = [\n    { value: 'neutral', label: 'Neutral', colors: ['#475569', '#78716c'], description: 'Professional and timeless' },\n    { value: 'warm', label: 'Warm', colors: ['#ea580c', '#eab308'], description: 'Inviting and energetic' },\n    { value: 'cool', label: 'Cool', colors: ['#3b82f6', '#14b8a6'], description: 'Calm and trustworthy' },\n    { value: 'vibrant', label: 'Vibrant', colors: ['#a855f7', '#ef4444'], description: 'Bold and creative' },\n    { value: 'monochrome', label: 'Monochrome', colors: ['#6b7280', '#4b5563'], description: 'Minimal and focused' }\n  ];\n\n  // Font scale options\n  const fontScales = [\n    { value: 'compact', label: 'Compact', description: 'More content, smaller text' },\n    { value: 'comfortable', label: 'Comfortable', description: 'Balanced readability' },\n    { value: 'spacious', label: 'Spacious', description: 'Larger text, easier reading' }\n  ];\n\n  // Border radius options\n  const borderRadiusOptions = [\n    { value: 'none', label: 'None', description: 'Sharp, modern edges' },\n    { value: 'small', label: 'Small', description: 'Subtle rounded corners' },\n    { value: 'medium', label: 'Medium', description: 'Balanced roundness' },\n    { value: 'large', label: 'Large', description: 'Soft, friendly curves' },\n    { value: 'full', label: 'Full', description: 'Pill-shaped elements' }\n  ];\n\n  // Animation level options\n  const animationLevels = [\n    { value: 'none', label: 'None', description: 'No animations' },\n    { value: 'reduced', label: 'Reduced', description: 'Minimal animations' },\n    { value: 'normal', label: 'Normal', description: 'Standard animations' },\n    { value: 'enhanced', label: 'Enhanced', description: 'Rich animations' }\n  ];\n\n  // Generate theme previews\n  const themePreviews = useMemo((): ThemePreview[] => [\n    {\n      name: 'Dashboard Cards',\n      description: 'How dashboard components will look',\n      preview: (\n        <div className=\"space-y-3\">\n          <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-4\">\n            <div className=\"flex items-center justify-between mb-2\">\n              <h3 className=\"font-semibold text-gray-900\">Total Users</h3>\n              <div className=\"w-8 h-8 bg-blue-100 rounded-lg flex items-center justify-center\">\n                <div className=\"w-4 h-4 bg-blue-600 rounded\"></div>\n              </div>\n            </div>\n            <div className=\"text-2xl font-bold text-gray-900\">12,345</div>\n            <div className=\"text-sm text-green-600\">+12% from last month</div>\n          </div>\n          <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-4\">\n            <div className=\"flex items-center space-x-3\">\n              <div className=\"w-10 h-10 bg-purple-100 rounded-full\"></div>\n              <div>\n                <div className=\"font-medium text-gray-900\">John Doe</div>\n                <div className=\"text-sm text-gray-600\">Administrator</div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )\n    },\n    {\n      name: 'Form Elements',\n      description: 'Input fields and buttons',\n      preview: (\n        <div className=\"space-y-3\">\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Email</label>\n            <input\n              type=\"email\"\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              placeholder=\"Enter your email\"\n            />\n          </div>\n          <div className=\"flex space-x-2\">\n            <button className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors\">\n              Primary\n            </button>\n            <button className=\"px-4 py-2 border border-gray-300 text-gray-700 rounded-md hover:bg-gray-50 transition-colors\">\n              Secondary\n            </button>\n          </div>\n        </div>\n      )\n    },\n    {\n      name: 'Navigation',\n      description: 'Menu and navigation elements',\n      preview: (\n        <div className=\"space-y-2\">\n          <div className=\"flex items-center space-x-3 px-3 py-2 bg-blue-50 text-blue-700 rounded-lg\">\n            <div className=\"w-5 h-5 bg-blue-600 rounded\"></div>\n            <span className=\"font-medium\">Dashboard</span>\n          </div>\n          <div className=\"flex items-center space-x-3 px-3 py-2 text-gray-600 hover:bg-gray-50 rounded-lg\">\n            <div className=\"w-5 h-5 bg-gray-400 rounded\"></div>\n            <span>Users</span>\n          </div>\n          <div className=\"flex items-center space-x-3 px-3 py-2 text-gray-600 hover:bg-gray-50 rounded-lg\">\n            <div className=\"w-5 h-5 bg-gray-400 rounded\"></div>\n            <span>Settings</span>\n          </div>\n        </div>\n      )\n    }\n  ], []);\n\n  // Export theme configuration\n  const exportTheme = () => {\n    const themeData = {\n      preferences,\n      themeConfig,\n      exportedAt: new Date().toISOString()\n    };\n\n    const blob = new Blob([JSON.stringify(themeData, null, 2)], { type: 'application/json' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `theme-${themeConfig.colorScheme}-${Date.now()}.json`;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n\n  return (\n    <ResponsiveContainer className={`space-y-6 ${className}`}>\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center space-x-3\">\n          <div className=\"p-2 bg-purple-100 rounded-lg\">\n            <Palette className=\"w-6 h-6 text-purple-600\" />\n          </div>\n          <div>\n            <h2 className=\"text-2xl font-bold text-gray-900\">Theme Customization</h2>\n            <p className=\"text-gray-600\">Customize the appearance and behavior of your dashboard</p>\n          </div>\n        </div>\n\n        <div className=\"flex items-center space-x-2\">\n          <button\n            onClick={exportTheme}\n            className=\"flex items-center space-x-2 px-4 py-2 text-gray-700 border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors\"\n          >\n            <Download className=\"w-4 h-4\" />\n            <span>Export</span>\n          </button>\n\n          <button\n            onClick={resetToDefaults}\n            className=\"flex items-center space-x-2 px-4 py-2 text-gray-700 border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors\"\n          >\n            <RotateCcw className=\"w-4 h-4\" />\n            <span>Reset</span>\n          </button>\n        </div>\n      </div>\n\n      {/* System Info */}\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n        <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-4\">\n          <div className=\"flex items-center space-x-3\">\n            {deviceType === 'mobile' && <Smartphone className=\"w-5 h-5 text-blue-600\" />}\n            {deviceType === 'tablet' && <Tablet className=\"w-5 h-5 text-blue-600\" />}\n            {deviceType === 'desktop' && <Monitor className=\"w-5 h-5 text-blue-600\" />}\n            <div>\n              <p className=\"font-medium text-gray-900\">Device</p>\n              <p className=\"text-sm text-gray-600 capitalize\">{deviceType} ({breakpoint})</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-4\">\n          <div className=\"flex items-center space-x-3\">\n            <Monitor className=\"w-5 h-5 text-green-600\" />\n            <div>\n              <p className=\"font-medium text-gray-900\">System Theme</p>\n              <p className=\"text-sm text-gray-600\">{systemPreferences.prefersDark ? 'Dark' : 'Light'}</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-4\">\n          <div className=\"flex items-center space-x-3\">\n            <Eye className=\"w-5 h-5 text-purple-600\" />\n            <div>\n              <p className=\"font-medium text-gray-900\">Current Theme</p>\n              <p className=\"text-sm text-gray-600 capitalize\">{themeConfig.mode} • {themeConfig.colorScheme}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Tab Navigation */}\n      <div className=\"border-b border-gray-200\">\n        <nav className=\"flex space-x-8\">\n          {[\n            { id: 'appearance', label: 'Appearance', icon: Palette },\n            { id: 'typography', label: 'Typography', icon: Type },\n            { id: 'layout', label: 'Layout', icon: Layout },\n            { id: 'accessibility', label: 'Accessibility', icon: Eye },\n            { id: 'preview', label: 'Preview', icon: Monitor }\n          ].map(({ id, label, icon: Icon }) => (\n            <button\n              key={id}\n              onClick={() => setSelectedTab(id as any)}\n              className={`flex items-center space-x-2 py-2 px-1 border-b-2 font-medium text-sm transition-colors ${selectedTab === id\n                ? 'border-purple-500 text-purple-600'\n                : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n                }`}\n            >\n              <Icon className=\"w-4 h-4\" />\n              <span>{label}</span>\n            </button>\n          ))}\n        </nav>\n      </div>\n\n      {/* Tab Content */}\n      <div className=\"space-y-6\">\n        {selectedTab === 'appearance' && (\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            className=\"space-y-8\"\n          >\n            {/* Theme Mode */}\n            <div>\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Theme Mode</h3>\n              <ResponsiveGrid columns={{ xs: 1, sm: 2, lg: 4 }} gap={{ xs: '1rem', md: '1.5rem' }}>\n                {themeModes.map(({ value, label, icon: Icon, description }) => (\n                  <ResponsiveGridItem key={value}>\n                    <motion.button\n                      whileHover={{ scale: 1.02 }}\n                      whileTap={{ scale: 0.98 }}\n                      onClick={() => setMode(value as any)}\n                      className={`w-full p-4 rounded-xl border-2 transition-all ${preferences.mode === value\n                        ? 'border-purple-500 bg-purple-50'\n                        : 'border-gray-200 hover:border-gray-300'\n                        }`}\n                    >\n                      <Icon className={`w-8 h-8 mx-auto mb-3 ${preferences.mode === value ? 'text-purple-600' : 'text-gray-400'\n                        }`} />\n                      <h4 className=\"font-medium text-gray-900 mb-1\">{label}</h4>\n                      <p className=\"text-sm text-gray-600\">{description}</p>\n                    </motion.button>\n                  </ResponsiveGridItem>\n                ))}\n              </ResponsiveGrid>\n            </div>\n\n            {/* Color Scheme */}\n            <div>\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Color Scheme</h3>\n              <ResponsiveGrid columns={{ xs: 1, sm: 2, lg: 5 }} gap={{ xs: '1rem', md: '1.5rem' }}>\n                {colorSchemes.map(({ value, label, colors, description }) => (\n                  <ResponsiveGridItem key={value}>\n                    <motion.button\n                      whileHover={{ scale: 1.02 }}\n                      whileTap={{ scale: 0.98 }}\n                      onClick={() => setColorScheme(value as any)}\n                      className={`w-full p-4 rounded-xl border-2 transition-all ${preferences.colorScheme === value\n                        ? 'border-purple-500 bg-purple-50'\n                        : 'border-gray-200 hover:border-gray-300'\n                        }`}\n                    >\n                      <div className=\"flex space-x-1 mb-3 justify-center\">\n                        {colors.map((color, index) => (\n                          <div\n                            key={index}\n                            className=\"w-6 h-6 rounded-full\"\n                            style={{ backgroundColor: color }}\n                          />\n                        ))}\n                      </div>\n                      <h4 className=\"font-medium text-gray-900 mb-1\">{label}</h4>\n                      <p className=\"text-sm text-gray-600\">{description}</p>\n                    </motion.button>\n                  </ResponsiveGridItem>\n                ))}\n              </ResponsiveGrid>\n            </div>\n          </motion.div>\n        )}\n\n        {selectedTab === 'typography' && (\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            className=\"space-y-8\"\n          >\n            {/* Font Scale */}\n            <div>\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Font Scale</h3>\n              <ResponsiveGrid columns={{ xs: 1, md: 3 }} gap={{ xs: '1rem', md: '1.5rem' }}>\n                {fontScales.map(({ value, label, description }) => (\n                  <ResponsiveGridItem key={value}>\n                    <motion.button\n                      whileHover={{ scale: 1.02 }}\n                      whileTap={{ scale: 0.98 }}\n                      onClick={() => setFontScale(value as any)}\n                      className={`w-full p-6 rounded-xl border-2 transition-all text-left ${preferences.fontScale === value\n                        ? 'border-purple-500 bg-purple-50'\n                        : 'border-gray-200 hover:border-gray-300'\n                        }`}\n                    >\n                      <div className={`mb-3 ${value === 'compact' ? 'text-sm' :\n                        value === 'spacious' ? 'text-lg' : 'text-base'\n                        }`}>\n                        <div className=\"font-semibold\">Sample Text</div>\n                        <div className=\"text-gray-600\">This is how text will appear</div>\n                      </div>\n                      <h4 className=\"font-medium text-gray-900 mb-1\">{label}</h4>\n                      <p className=\"text-sm text-gray-600\">{description}</p>\n                    </motion.button>\n                  </ResponsiveGridItem>\n                ))}\n              </ResponsiveGrid>\n            </div>\n          </motion.div>\n        )}\n\n        {selectedTab === 'layout' && (\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            className=\"space-y-8\"\n          >\n            {/* Border Radius */}\n            <div>\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Border Radius</h3>\n              <ResponsiveGrid columns={{ xs: 1, sm: 2, lg: 5 }} gap={{ xs: '1rem', md: '1.5rem' }}>\n                {borderRadiusOptions.map(({ value, label, description }) => (\n                  <ResponsiveGridItem key={value}>\n                    <motion.button\n                      whileHover={{ scale: 1.02 }}\n                      whileTap={{ scale: 0.98 }}\n                      onClick={() => setBorderRadius(value as any)}\n                      className={`w-full p-4 border-2 transition-all ${preferences.borderRadius === value\n                        ? 'border-purple-500 bg-purple-50'\n                        : 'border-gray-200 hover:border-gray-300'\n                        } ${value === 'none' ? 'rounded-none' :\n                          value === 'small' ? 'rounded-sm' :\n                            value === 'medium' ? 'rounded-lg' :\n                              value === 'large' ? 'rounded-xl' : 'rounded-full'\n                        }`}\n                    >\n                      <div className={`w-12 h-12 bg-gray-300 mx-auto mb-3 ${value === 'none' ? 'rounded-none' :\n                        value === 'small' ? 'rounded-sm' :\n                          value === 'medium' ? 'rounded-lg' :\n                            value === 'large' ? 'rounded-xl' : 'rounded-full'\n                        }`} />\n                      <h4 className=\"font-medium text-gray-900 mb-1\">{label}</h4>\n                      <p className=\"text-sm text-gray-600\">{description}</p>\n                    </motion.button>\n                  </ResponsiveGridItem>\n                ))}\n              </ResponsiveGrid>\n            </div>\n\n            {/* Animation Level */}\n            <div>\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Animation Level</h3>\n              <ResponsiveGrid columns={{ xs: 1, sm: 2, lg: 4 }} gap={{ xs: '1rem', md: '1.5rem' }}>\n                {animationLevels.map(({ value, label, description }) => (\n                  <ResponsiveGridItem key={value}>\n                    <motion.button\n                      whileHover={{ scale: 1.02 }}\n                      whileTap={{ scale: 0.98 }}\n                      onClick={() => setAnimationLevel(value as any)}\n                      className={`w-full p-4 rounded-xl border-2 transition-all ${preferences.animationLevel === value\n                        ? 'border-purple-500 bg-purple-50'\n                        : 'border-gray-200 hover:border-gray-300'\n                        }`}\n                    >\n                      <Zap className={`w-8 h-8 mx-auto mb-3 ${preferences.animationLevel === value ? 'text-purple-600' : 'text-gray-400'\n                        }`} />\n                      <h4 className=\"font-medium text-gray-900 mb-1\">{label}</h4>\n                      <p className=\"text-sm text-gray-600\">{description}</p>\n                    </motion.button>\n                  </ResponsiveGridItem>\n                ))}\n              </ResponsiveGrid>\n            </div>\n          </motion.div>\n        )}\n\n        {selectedTab === 'accessibility' && (\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            className=\"space-y-6\"\n          >\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6\">\n                <div className=\"flex items-center justify-between mb-4\">\n                  <div className=\"flex items-center space-x-3\">\n                    <Contrast className=\"w-5 h-5 text-purple-600\" />\n                    <div>\n                      <h4 className=\"font-medium text-gray-900\">High Contrast</h4>\n                      <p className=\"text-sm text-gray-600\">Increase contrast for better visibility</p>\n                    </div>\n                  </div>\n                  <button\n                    onClick={toggleHighContrast}\n                    className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors ${preferences.highContrast ? 'bg-purple-600' : 'bg-gray-200'\n                      }`}\n                  >\n                    <span\n                      className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${preferences.highContrast ? 'translate-x-6' : 'translate-x-1'\n                        }`}\n                    />\n                  </button>\n                </div>\n              </div>\n\n              <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6\">\n                <div className=\"flex items-center justify-between mb-4\">\n                  <div className=\"flex items-center space-x-3\">\n                    <Zap className=\"w-5 h-5 text-purple-600\" />\n                    <div>\n                      <h4 className=\"font-medium text-gray-900\">Reduced Motion</h4>\n                      <p className=\"text-sm text-gray-600\">Minimize animations and transitions</p>\n                    </div>\n                  </div>\n                  <button\n                    onClick={toggleReducedMotion}\n                    className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors ${preferences.reducedMotion ? 'bg-purple-600' : 'bg-gray-200'\n                      }`}\n                  >\n                    <span\n                      className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${preferences.reducedMotion ? 'translate-x-6' : 'translate-x-1'\n                        }`}\n                    />\n                  </button>\n                </div>\n              </div>\n            </div>\n\n            {/* System Preferences Info */}\n            <div className=\"bg-blue-50 rounded-xl p-6\">\n              <h4 className=\"font-medium text-blue-900 mb-3\">System Preferences Detected</h4>\n              <div className=\"space-y-2 text-sm\">\n                <div className=\"flex justify-between\">\n                  <span className=\"text-blue-700\">Prefers Dark Mode:</span>\n                  <span className=\"text-blue-900 font-medium\">\n                    {systemPreferences.prefersDark ? 'Yes' : 'No'}\n                  </span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-blue-700\">Prefers Reduced Motion:</span>\n                  <span className=\"text-blue-900 font-medium\">\n                    {systemPreferences.prefersReducedMotion ? 'Yes' : 'No'}\n                  </span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-blue-700\">Prefers High Contrast:</span>\n                  <span className=\"text-blue-900 font-medium\">\n                    {systemPreferences.prefersHighContrast ? 'Yes' : 'No'}\n                  </span>\n                </div>\n              </div>\n            </div>\n          </motion.div>\n        )}\n\n        {selectedTab === 'preview' && (\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            className=\"space-y-6\"\n          >\n            {/* Preview Mode Selector */}\n            <div className=\"flex items-center justify-center space-x-4\">\n              {[\n                { value: 'desktop', icon: Monitor, label: 'Desktop' },\n                { value: 'tablet', icon: Tablet, label: 'Tablet' },\n                { value: 'mobile', icon: Smartphone, label: 'Mobile' }\n              ].map(({ value, icon: Icon, label }) => (\n                <button\n                  key={value}\n                  onClick={() => setPreviewMode(value as any)}\n                  className={`flex items-center space-x-2 px-4 py-2 rounded-lg transition-colors ${previewMode === value\n                    ? 'bg-purple-100 text-purple-700'\n                    : 'text-gray-600 hover:bg-gray-100'\n                    }`}\n                >\n                  <Icon className=\"w-4 h-4\" />\n                  <span>{label}</span>\n                </button>\n              ))}\n            </div>\n\n            {/* Theme Previews */}\n            <ResponsiveGrid columns={{ xs: 1, lg: 3 }} gap={{ xs: '1.5rem', md: '2rem' }}>\n              {themePreviews.map((preview, index) => (\n                <ResponsiveGridItem key={index}>\n                  <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6\">\n                    <h4 className=\"font-medium text-gray-900 mb-2\">{preview.name}</h4>\n                    <p className=\"text-sm text-gray-600 mb-4\">{preview.description}</p>\n                    <div className={`${previewMode === 'mobile' ? 'scale-75' :\n                      previewMode === 'tablet' ? 'scale-90' : 'scale-100'\n                      } origin-top-left transition-transform`}>\n                      {preview.preview}\n                    </div>\n                  </div>\n                </ResponsiveGridItem>\n              ))}\n            </ResponsiveGrid>\n          </motion.div>\n        )}\n      </div>\n    </ResponsiveContainer>\n  );\n};\n"],"names":["DatabaseSchemaViewer","tables","setTables","useState","selectedTable","setSelectedTable","showRelationships","setShowRelationships","searchTerm","setSearchTerm","isFullscreen","setIsFullscreen","zoom","setZoom","databaseSchema","name","displayName","columns","type","nullable","isPrimaryKey","isForeignKey","relationships","hasMany","belongsTo","position","x","y","color","referencedTable","referencedColumn","useEffect","filteredTables","filter","table","toLowerCase","includes","className","children","jsxs","jsx","Database","Search","placeholder","value","onChange","e","target","onClick","Link","Minimize2","Maximize2","style","height","transform","transformOrigin","lines","forEach","relatedTableName","relatedTable","find","t","startX","startY","endX","endY","push","x1","y1","x2","y2","stroke","strokeWidth","strokeDasharray","opacity","zIndex","renderRelationshipLines","map","motion","div","initial","scale","animate","left","top","width","Table","column","Key","length","join","Math","max","round","min","ComprehensiveAdminDashboard","memo","stats","setStats","metrics","setMetrics","kpiMetrics","setKpiMetrics","realtimeMetrics","setRealtimeMetrics","loading","setLoading","error","setError","refreshing","setRefreshing","currentView","setCurrentView","autoRefresh","setAutoRefresh","lastRefresh","setLastRefresh","tableConfigs","profiles","icon","Users","description","user_preferences","Settings","user_security_settings","products","Package","categories","Tag","orders","ShoppingCart","order_items","cart_items","wishlist_items","Star","reviews","addresses","MapPin","payment_methods","CreditCard","coupons","product_variants","order_tracking","Truck","fetchDatabaseStats","useCallback","async","tableNames","Object","keys","tableCounts","totalRecords","countPromises","tableName","count","supabase","from","select","head","err","Promise","allSettled","result","status","totalTables","lastUpdated","Date","fetchDashboardMetrics","cacheKey","cached","sessionStorage","getItem","cacheTime","now","parseInt","JSON","parse","ordersResult","usersResult","productsResult","all","data","users","today","toISOString","split","ordersToday","order","created_at","startsWith","usersToday","user","completedOrders","revenueToday","reduce","sum","parseFloat","total_amount","metricsData","totalUsers","totalProducts","totalOrders","totalRevenue","pendingOrders","lowStockProducts","newUsersToday","conversionRate","setItem","stringify","toString","fetchKPIMetrics","metricName","currentValue","previousValue","percentageChange","trendDirection","fetchRealtimeMetrics","mockRealtimeMetrics","onlineUsers","floor","random","recentSalesCount","recentSalesValue","lowStockAlerts","systemStatus","fetchAllData","handleExportData","startDate","setDate","getDate","endDate","rpcData","rpcError","rpc","start_date","end_date","data_type","exportData","gte","lte","metadata","exported_at","method","blob","Blob","url","URL","createObjectURL","link","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","interval","setInterval","clearInterval","useAdvancedMemo","lowerSearchTerm","useDebouncedCallback","term","tableConfig","UniversalTableManager","onBack","AdvancedAnalytics","LoadingSpinner","size","text","ErrorFallback","onRetry","Clock","toLocaleTimeString","checked","BarChart3","GitBranch","Download","disabled","RefreshCw","Activity","Bell","AlertTriangle","DollarSign","toFixed","toLocaleString","TrendingUp","kpi","index","replace","getTrendColor","ArrowUp","ArrowDown","Minus","getTrendIcon","abs","Eye","topProducts","slice","product","recentOrders","order_number","toLocaleDateString","stock","Filter","UserFormModal","isOpen","onClose","onSubmit","formData","setFormData","isEdit","generatedPassword","showPassword","setShowPassword","Modal","title","preventDefault","User","htmlFor","id","required","Mail","email","Phone","phone","Calendar","dateOfBirth","Shield","role","isActive","sendEmail","EyeOff","EnhancedButton","variant","logs","setLogs","selectedLog","setSelectedLog","isDetailModalOpen","setIsDetailModalOpen","expandedRows","setExpandedRows","Set","currentPage","setCurrentPage","totalPages","setTotalPages","pageSize","showNotification","useNotification","filters","setFilters","dateFrom","dateTo","userId","category","action","fetchAuditLogs","mockLogs","timestamp","userName","userEmail","resource","resourceId","details","ipAddress","userAgent","sessionId","loginMethod","productId","oldPrice","newPrice","reason","attempts","deletedUserId","backupSize","duration","ceil","message","handleFilterChange","key","prev","getStatusIcon","CheckCircle","XCircle","Info","getCategoryIcon","AdminErrorBoundary","FileText","csvData","log","Timestamp","Email","Action","Resource","Status","Category","Details","csvContent","row","values","val","a","label","cat","React","Fragment","logId","newExpanded","has","delete","add","toggleRowExpansion","ChevronUp","ChevronDown","viewLogDetails","colSpan","preferences","updatePreference","useAccessibilityPreferences","announce","useScreenReaderAnnouncements","deviceType","breakpoint","isTouch","useResponsiveDesign","isScanning","setIsScanning","selectedTab","setSelectedTab","runAccessibilityScan","resolve","setTimeout","report","accessibilityTest","generateReport","issues","severity","missingAltText","missingFormLabels","headingIssues","totalIssues","issue","score","compliance","wcagA","wcagAA","wcagAAA","preferenceControls","useMemo","reducedMotion","ZapOff","Zap","enabled","Palette","highContrast","Type","largeText","Keyboard","keyboardNavigation","MousePointer","focusVisible","getSeverityColor","Accessibility","Smartphone","Tablet","Monitor","Icon","whileHover","entries","level","compliant","toUpperCase","checkAltText","checkFormLabels","checkHeadingHierarchy","themeConfig","systemPreferences","setMode","setColorScheme","setFontScale","setBorderRadius","setAnimationLevel","toggleHighContrast","toggleReducedMotion","resetToDefaults","useTheme","previewMode","setPreviewMode","themeModes","Sun","themePreviews","preview","ResponsiveContainer","themeData","exportedAt","colorScheme","RotateCcw","prefersDark","mode","Layout","ResponsiveGrid","xs","sm","lg","gap","md","ResponsiveGridItem","button","whileTap","colors","backgroundColor","fontScale","borderRadius","animationLevel","Contrast","prefersReducedMotion","prefersHighContrast"],"mappings":"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"}