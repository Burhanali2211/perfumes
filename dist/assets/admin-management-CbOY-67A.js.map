{"version":3,"file":"admin-management-CbOY-67A.js","sources":["../../src/components/Dashboard/Admin/UniversalTableManager.tsx","../../src/components/Dashboard/Admin/UserManagementTable.tsx","../../src/components/Dashboard/Admin/ProductionUserManagement.tsx","../../src/components/Dashboard/Admin/ProductManagement.tsx","../../src/components/Dashboard/Admin/OrderManager.tsx","../../src/components/Dashboard/Admin/CategoryManagement.tsx","../../src/components/Dashboard/Admin/CollectionManagement.tsx","../../src/components/Dashboard/Admin/CouponManagement.tsx","../../src/components/Dashboard/Admin/SettingsManagement.tsx","../../src/components/Dashboard/Admin/MarketingManagement.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { Search, Filter, Download, Plus, Edit, Trash2, ChevronLeft, RefreshCw, Save, X, AlertTriangle } from 'lucide-react';\r\nimport { supabase } from '../../../lib/supabase';\r\nimport { LoadingSpinner } from '../../Common/LoadingSpinner';\r\nimport { ErrorFallback } from '../../Common/ErrorFallback';\r\nimport { exportTableData, bulkDeleteRecords } from '../../../utils/dataExport';\r\nimport { ResponsiveTable } from '../../Common/ResponsiveTable';\r\n\r\ninterface TableColumn {\r\n  name: string;\r\n  type: string;\r\n  nullable: boolean;\r\n  displayName: string;\r\n}\r\n\r\ninterface TableRow {\r\n  id?: string;\r\n  [key: string]: unknown;\r\n}\r\n\r\ninterface ColumnInfo {\r\n  column_name: string;\r\n  data_type: string;\r\n  is_nullable: string;\r\n}\r\n\r\ninterface TableManagerProps {\r\n  tableName: string;\r\n  displayName: string;\r\n  onBack: () => void;\r\n}\r\n\r\ninterface PaginationInfo {\r\n  currentPage: number;\r\n  totalPages: number;\r\n  totalRecords: number;\r\n  recordsPerPage: number;\r\n}\r\n\r\nexport const UniversalTableManager: React.FC<TableManagerProps> = ({\r\n  tableName,\r\n  displayName,\r\n  onBack\r\n}) => {\r\n  const [data, setData] = useState<TableRow[]>([]);\r\n  const [columns, setColumns] = useState<TableColumn[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [sortColumn, setSortColumn] = useState<string>('created_at');\r\n  const [sortDirection, setSortDirection] = useState<'asc' | 'desc'>('desc');\r\n  const [pagination, setPagination] = useState<PaginationInfo>({\r\n    currentPage: 1,\r\n    totalPages: 1,\r\n    totalRecords: 0,\r\n    recordsPerPage: 10\r\n  });\r\n  const [selectedRows, setSelectedRows] = useState<Set<string>>(new Set());\r\n  const [refreshing, setRefreshing] = useState(false);\r\n  const [editingRecord, setEditingRecord] = useState<TableRow | null>(null);\r\n  const [editFormData, setEditFormData] = useState<Record<string, unknown>>({});\r\n  const [saving, setSaving] = useState(false);\r\n  const [showEditModal, setShowEditModal] = useState(false);\r\n\r\n  // Fetch table schema\r\n  const fetchTableSchema = useCallback(async () => {\r\n    try {\r\n      // First try the RPC function\r\n      const { data: schemaData, error: rpcError } = await supabase.rpc('get_table_schema', {\r\n        table_name: tableName\r\n      });\r\n\r\n      if (!rpcError && schemaData && schemaData.length > 0) {\r\n        setColumns(schemaData);\r\n        return;\r\n      }\r\n\r\n      // If RPC fails, try direct query to information_schema\r\n      console.warn('RPC get_table_schema failed, trying fallback method:', rpcError?.message);\r\n\r\n      try {\r\n        const { data: fallbackData, error: fallbackError } = await supabase\r\n          .from('information_schema.columns')\r\n          .select('column_name, data_type, is_nullable')\r\n          .eq('table_name', tableName)\r\n          .eq('table_schema', 'public');\r\n\r\n        if (!fallbackError && fallbackData && fallbackData.length > 0) {\r\n          const mappedColumns = fallbackData.map((col: ColumnInfo) => ({\r\n            name: col.column_name,\r\n            type: col.data_type,\r\n            nullable: col.is_nullable === 'YES',\r\n            displayName: formatColumnName(col.column_name)\r\n          }));\r\n          setColumns(mappedColumns);\r\n          return;\r\n        }\r\n      } catch (fallbackErr) {\r\n        console.warn('Fallback schema query failed:', fallbackErr);\r\n      }\r\n\r\n      // If both methods fail, try to infer schema from actual data\r\n      console.warn('Schema queries failed, inferring from data...');\r\n      const { data: sampleData, error: dataError } = await supabase\r\n        .from(tableName)\r\n        .select('*')\r\n        .limit(1);\r\n\r\n      if (!dataError && sampleData && sampleData.length > 0) {\r\n        const sampleRecord = sampleData[0];\r\n        const inferredColumns = Object.keys(sampleRecord).map(key => ({\r\n          name: key,\r\n          type: inferDataType(sampleRecord[key]),\r\n          nullable: sampleRecord[key] === null,\r\n          displayName: formatColumnName(key)\r\n        }));\r\n        setColumns(inferredColumns);\r\n        return;\r\n      }\r\n\r\n      // Final fallback: use basic columns\r\n      console.warn('All schema detection methods failed, using basic columns');\r\n      setColumns([\r\n        { name: 'id', type: 'uuid', nullable: false, displayName: 'ID' },\r\n        { name: 'created_at', type: 'timestamp', nullable: true, displayName: 'Created At' },\r\n        { name: 'updated_at', type: 'timestamp', nullable: true, displayName: 'Updated At' }\r\n      ]);\r\n    } catch (err) {\r\n      console.error('Error fetching table schema:', err);\r\n      // Use basic columns as final fallback\r\n      setColumns([\r\n        { name: 'id', type: 'uuid', nullable: false, displayName: 'ID' },\r\n        { name: 'created_at', type: 'timestamp', nullable: true, displayName: 'Created At' },\r\n        { name: 'updated_at', type: 'timestamp', nullable: true, displayName: 'Updated At' }\r\n      ]);\r\n    }\r\n  }, [tableName]);\r\n\r\n  // Helper function to infer data type from value\r\n  const inferDataType = (value: unknown): string => {\r\n    if (value === null || value === undefined) return 'text';\r\n    if (typeof value === 'boolean') return 'boolean';\r\n    if (typeof value === 'number') return Number.isInteger(value) ? 'integer' : 'numeric';\r\n    if (typeof value === 'string') {\r\n      // Check if it looks like a UUID\r\n      if (/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i.test(value)) {\r\n        return 'uuid';\r\n      }\r\n      // Check if it looks like a timestamp\r\n      if (/^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}/.test(value)) {\r\n        return 'timestamp';\r\n      }\r\n      // Check if it looks like a date\r\n      if (/^\\d{4}-\\d{2}-\\d{2}$/.test(value)) {\r\n        return 'date';\r\n      }\r\n      return 'text';\r\n    }\r\n    if (Array.isArray(value)) return 'array';\r\n    if (typeof value === 'object') return 'json';\r\n    return 'text';\r\n  };\r\n\r\n  // Fetch table data\r\n  const fetchTableData = useCallback(async () => {\r\n    try {\r\n      setError(null);\r\n      \r\n      // Get total count\r\n      const { count, error: countError } = await supabase\r\n        .from(tableName)\r\n        .select('*', { count: 'exact', head: true });\r\n\r\n      if (countError) throw countError;\r\n\r\n      // Calculate pagination\r\n      const totalRecords = count || 0;\r\n      const totalPages = Math.ceil(totalRecords / pagination.recordsPerPage);\r\n      const offset = (pagination.currentPage - 1) * pagination.recordsPerPage;\r\n\r\n      // Fetch data with pagination and sorting\r\n      let query = supabase\r\n        .from(tableName)\r\n        .select('*')\r\n        .range(offset, offset + pagination.recordsPerPage - 1);\r\n\r\n      // Apply sorting\r\n      if (sortColumn) {\r\n        query = query.order(sortColumn, { ascending: sortDirection === 'asc' });\r\n      }\r\n\r\n      // Apply search if term exists\r\n      if (searchTerm) {\r\n        // Try to search in common text fields\r\n        const textColumns = columns.filter(col => \r\n          col.type.includes('text') || col.type.includes('varchar')\r\n        );\r\n        \r\n        if (textColumns.length > 0) {\r\n          const searchConditions = textColumns\r\n            .map(col => `${col.name}.ilike.%${searchTerm}%`)\r\n            .join(',');\r\n          query = query.or(searchConditions);\r\n        }\r\n      }\r\n\r\n      const { data: tableData, error: dataError } = await query;\r\n\r\n      if (dataError) throw dataError;\r\n\r\n      setData(tableData || []);\r\n      setPagination(prev => ({\r\n        ...prev,\r\n        totalRecords,\r\n        totalPages\r\n      }));\r\n    } catch (err) {\r\n      console.error('Error fetching table data:', err);\r\n      setError(`Failed to load ${displayName} data`);\r\n    } finally {\r\n      setLoading(false);\r\n      setRefreshing(false);\r\n    }\r\n  }, [tableName, columns, pagination.currentPage, pagination.recordsPerPage, sortColumn, sortDirection, searchTerm, displayName]);\r\n\r\n  useEffect(() => {\r\n    fetchTableSchema();\r\n  }, [fetchTableSchema]);\r\n\r\n  useEffect(() => {\r\n    if (columns.length > 0) {\r\n      fetchTableData();\r\n    }\r\n  }, [columns, fetchTableData]);\r\n\r\n  const formatColumnName = (columnName: string): string => {\r\n    return columnName\r\n      .split('_')\r\n      .map(word => word.charAt(0).toUpperCase() + word.slice(1))\r\n      .join(' ');\r\n  };\r\n\r\n  const formatCellValue = (value: unknown, column: TableColumn): string => {\r\n    if (value === null || value === undefined) return '-';\r\n    \r\n    if (column.type.includes('timestamp') || column.type.includes('date')) {\r\n      // Check if value is a valid date string or number\r\n      if (typeof value === 'string' || typeof value === 'number') {\r\n        return new Date(value).toLocaleString();\r\n      }\r\n      return '-';\r\n    }\r\n    \r\n    if (column.type === 'boolean') {\r\n      return value ? 'Yes' : 'No';\r\n    }\r\n    \r\n    if (Array.isArray(value)) {\r\n      return value.length > 0 ? `[${value.length} items]` : '[]';\r\n    }\r\n    \r\n    if (typeof value === 'object') {\r\n      return JSON.stringify(value).substring(0, 50) + (JSON.stringify(value).length > 50 ? '...' : '');\r\n    }\r\n    \r\n    return String(value);\r\n  };\r\n\r\n  const handleSort = (columnName: string) => {\r\n    if (sortColumn === columnName) {\r\n      setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\r\n    } else {\r\n      setSortColumn(columnName);\r\n      setSortDirection('asc');\r\n    }\r\n  };\r\n\r\n  const handlePageChange = (newPage: number) => {\r\n    if (newPage >= 1 && newPage <= pagination.totalPages) {\r\n      setPagination(prev => ({\r\n        ...prev,\r\n        currentPage: newPage\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleSelectAll = () => {\r\n    if (selectedRows.size === data.length && data.length > 0) {\r\n      setSelectedRows(new Set());\r\n    } else {\r\n      setSelectedRows(new Set(data.filter(row => row.id).map(row => String(row.id))));\r\n    }\r\n  };\r\n\r\n  const handleSelectRow = (id: string) => {\r\n    const newSelected = new Set(selectedRows);\r\n    if (newSelected.has(id)) {\r\n      newSelected.delete(id);\r\n    } else {\r\n      newSelected.add(id);\r\n    }\r\n    setSelectedRows(newSelected);\r\n  };\r\n\r\n  const handleRefresh = () => {\r\n    setRefreshing(true);\r\n    fetchTableData();\r\n  };\r\n\r\n  const handleBulkDelete = async () => {\r\n    if (selectedRows.size === 0) return;\r\n    \r\n    if (!window.confirm(`Are you sure you want to delete ${selectedRows.size} records? This action cannot be undone.`)) {\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      const ids = Array.from(selectedRows);\r\n      await bulkDeleteRecords(tableName, ids);\r\n      setSelectedRows(new Set());\r\n      fetchTableData();\r\n    } catch (err) {\r\n      console.error('Error deleting records:', err);\r\n      setError('Failed to delete records');\r\n    }\r\n  };\r\n\r\n  const handleExport = async () => {\r\n    try {\r\n      await exportTableData(tableName, displayName);\r\n    } catch (err) {\r\n      console.error('Error exporting data:', err);\r\n      setError('Failed to export data');\r\n    }\r\n  };\r\n\r\n  const handleEditRecord = (record: TableRow) => {\r\n    setEditingRecord(record);\r\n    setEditFormData({ ...record });\r\n    setShowEditModal(true);\r\n  };\r\n\r\n  const handleSaveRecord = async () => {\r\n    if (!editingRecord) return;\r\n\r\n    setSaving(true);\r\n    setError(null);\r\n\r\n    try {\r\n      // Prepare the data for saving\r\n      const saveData = { ...editFormData };\r\n\r\n      // Remove empty strings and convert them to null for optional fields\r\n      Object.keys(saveData).forEach(key => {\r\n        if (saveData[key] === '') {\r\n          const column = columns.find(col => col.name === key);\r\n          if (column?.nullable) {\r\n            saveData[key] = null;\r\n          }\r\n        }\r\n      });\r\n\r\n      // Add timestamps\r\n      if (editingRecord.id === 'new') {\r\n        saveData.created_at = new Date().toISOString();\r\n      }\r\n      saveData.updated_at = new Date().toISOString();\r\n\r\n      let result;\r\n\r\n      if (editingRecord.id === 'new') {\r\n        // Creating new record\r\n        console.log(`Creating new record in ${tableName}:`, saveData);\r\n\r\n        const { data, error } = await supabase\r\n          .from(tableName)\r\n          .insert(saveData)\r\n          .select();\r\n\r\n        if (error) {\r\n          console.error('Insert error:', error);\r\n          throw new Error(`Failed to create record: ${error.message}`);\r\n        }\r\n\r\n        console.log('Record created successfully:', data);\r\n      } else {\r\n        // Updating existing record\r\n        console.log(`Updating record ${editingRecord.id} in ${tableName}:`, saveData);\r\n\r\n        const { data, error } = await supabase\r\n          .from(tableName)\r\n          .update(saveData)\r\n          .eq('id', editingRecord.id)\r\n          .select();\r\n\r\n        if (error) {\r\n          console.error('Update error:', error);\r\n          throw new Error(`Failed to update record: ${error.message}`);\r\n        }\r\n\r\n        console.log('Record updated successfully:', data);\r\n      }\r\n\r\n      // Refresh the data\r\n      await fetchTableData();\r\n      setShowEditModal(false);\r\n      setEditingRecord(null);\r\n      setEditFormData({});\r\n\r\n      // Show success message\r\n      console.log(`✅ ${editingRecord.id === 'new' ? 'Created' : 'Updated'} record successfully`);\r\n    } catch (err) {\r\n      console.error('Error saving record:', err);\r\n      const errorMessage = err instanceof Error ? err.message : 'Failed to save record';\r\n      setError(errorMessage);\r\n\r\n      // Don't close the modal on error so user can retry\r\n    } finally {\r\n      setSaving(false);\r\n    }\r\n  };\r\n\r\n  const handleDeleteRecord = async (recordId: string) => {\r\n    if (!window.confirm('Are you sure you want to delete this record? This action cannot be undone.')) {\r\n      return;\r\n    }\r\n\r\n    setError(null);\r\n\r\n    try {\r\n      console.log(`Deleting record ${recordId} from ${tableName}`);\r\n\r\n      const { error } = await supabase\r\n        .from(tableName)\r\n        .delete()\r\n        .eq('id', recordId);\r\n\r\n      if (error) {\r\n        console.error('Delete error:', error);\r\n        throw new Error(`Failed to delete record: ${error.message}`);\r\n      }\r\n\r\n      console.log('✅ Record deleted successfully');\r\n\r\n      // Refresh the data\r\n      await fetchTableData();\r\n    } catch (err) {\r\n      console.error('Error deleting record:', err);\r\n      const errorMessage = err instanceof Error ? err.message : 'Failed to delete record';\r\n      setError(errorMessage);\r\n    }\r\n  };\r\n\r\n  const handleFormFieldChange = (fieldName: string, value: unknown) => {\r\n    setEditFormData(prev => ({\r\n      ...prev,\r\n      [fieldName]: value\r\n    }));\r\n  };\r\n\r\n  // Prepare columns for ResponsiveTable\r\n  const tableColumns = [\r\n    {\r\n      key: 'id',\r\n      title: 'ID',\r\n      width: 100,\r\n      render: (value: string) => <span className=\"font-mono text-sm\">{value?.slice(0, 8) || '-'}</span>\r\n    },\r\n    {\r\n      key: 'data',\r\n      title: 'Data',\r\n      minWidth: 200,\r\n      render: (value: any, record: TableRow) => (\r\n        <div className=\"max-w-xs truncate\">\r\n          {JSON.stringify(record, null, 2).slice(0, 100)}...\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      key: 'created_at',\r\n      title: 'Created',\r\n      width: 150,\r\n      render: (value: string) => (\r\n        <span className=\"text-sm text-gray-500\">\r\n          {value ? new Date(value).toLocaleDateString() : '-'}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      key: 'actions',\r\n      title: 'Actions',\r\n      width: 100,\r\n      render: (value: any, record: TableRow) => (\r\n        <div className=\"flex items-center space-x-2\">\r\n          <button\r\n            onClick={(e) => {\r\n              e.stopPropagation();\r\n              handleEditRecord(record);\r\n            }}\r\n            className=\"text-indigo-600 hover:text-indigo-900 p-1 rounded\"\r\n            title=\"Edit Record\"\r\n          >\r\n            <Edit className=\"h-4 w-4\" />\r\n          </button>\r\n          <button\r\n            onClick={(e) => {\r\n              e.stopPropagation();\r\n              if (record.id) {\r\n                handleDeleteRecord(String(record.id));\r\n              }\r\n            }}\r\n            className=\"text-red-600 hover:text-red-900 p-1 rounded\"\r\n            title=\"Delete Record\"\r\n          >\r\n            <Trash2 className=\"h-4 w-4\" />\r\n          </button>\r\n        </div>\r\n      )\r\n    }\r\n  ];\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"space-y-6\">\r\n        <div className=\"flex flex-col md:flex-row md:items-center md:justify-between gap-4\">\r\n          <div>\r\n            <button\r\n              onClick={onBack}\r\n              className=\"flex items-center text-indigo-600 hover:text-indigo-800 mb-2\"\r\n            >\r\n              <ChevronLeft className=\"h-4 w-4 mr-1\" />\r\n              Back to Dashboard\r\n            </button>\r\n            <h2 className=\"text-2xl font-bold text-gray-900\">{displayName} Management</h2>\r\n          </div>\r\n        </div>\r\n        <ErrorFallback\r\n          error={error}\r\n          onRetry={() => {\r\n            setError(null);\r\n            fetchTableData();\r\n          }}\r\n          type=\"database\"\r\n          size=\"large\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex flex-col md:flex-row md:items-center md:justify-between gap-4\">\r\n        <div>\r\n          <button\r\n            onClick={onBack}\r\n            className=\"flex items-center text-indigo-600 hover:text-indigo-800 mb-2\"\r\n          >\r\n            <ChevronLeft className=\"h-4 w-4 mr-1\" />\r\n            Back to Dashboard\r\n          </button>\r\n          <h2 className=\"text-2xl font-bold text-gray-900\">{displayName} Management</h2>\r\n          <p className=\"text-gray-600 mt-1\">\r\n            Manage {displayName.toLowerCase()} data ({pagination.totalRecords} total records)\r\n          </p>\r\n        </div>\r\n        \r\n        <div className=\"flex flex-wrap gap-2\">\r\n          <button\r\n            onClick={() => {\r\n              setEditingRecord({ id: 'new' } as TableRow);\r\n              setEditFormData({});\r\n              setShowEditModal(true);\r\n            }}\r\n            className=\"flex items-center px-3 py-2 text-sm font-medium text-white bg-indigo-600 border border-transparent rounded-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n          >\r\n            <Plus className=\"h-4 w-4 mr-1\" />\r\n            Add New\r\n          </button>\r\n\r\n          <button\r\n            onClick={handleExport}\r\n            className=\"flex items-center px-3 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n          >\r\n            <Download className=\"h-4 w-4 mr-1\" />\r\n            Export\r\n          </button>\r\n\r\n          <button\r\n            onClick={handleRefresh}\r\n            disabled={refreshing}\r\n            className=\"flex items-center px-3 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50\"\r\n          >\r\n            <RefreshCw className={`h-4 w-4 mr-1 ${refreshing ? 'animate-spin' : ''}`} />\r\n            Refresh\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Search and Filters */}\r\n      <div className=\"bg-white rounded-xl shadow-sm border border-gray-100 p-6\">\r\n        <div className=\"flex flex-col md:flex-row md:items-center gap-4\">\r\n          <div className=\"flex-1\">\r\n            <div className=\"relative\">\r\n              <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 h-4 w-4\" />\r\n              <input\r\n                type=\"text\"\r\n                placeholder={`Search ${displayName}...`}\r\n                value={searchTerm}\r\n                onChange={(e) => setSearchTerm(e.target.value)}\r\n                className=\"pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 w-full\"\r\n              />\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"flex items-center space-x-2\">\r\n            <Filter className=\"h-4 w-4 text-gray-500\" />\r\n            <select className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\">\r\n              <option>All Columns</option>\r\n              {columns.map(col => (\r\n                <option key={col.name} value={col.name}>{col.displayName}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Bulk Actions */}\r\n      {selectedRows.size > 0 && (\r\n        <div className=\"bg-indigo-50 border border-indigo-200 rounded-lg p-4\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <p className=\"text-indigo-800\">\r\n              {selectedRows.size} {selectedRows.size === 1 ? 'record' : 'records'} selected\r\n            </p>\r\n            <div className=\"flex space-x-2\">\r\n              <button\r\n                onClick={handleBulkDelete}\r\n                className=\"flex items-center px-3 py-1.5 text-sm font-medium text-red-700 bg-red-100 border border-red-300 rounded-md hover:bg-red-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500\"\r\n              >\r\n                <Trash2 className=\"h-4 w-4 mr-1\" />\r\n                Delete Selected\r\n              </button>\r\n              <button\r\n                onClick={() => setSelectedRows(new Set())}\r\n                className=\"px-3 py-1.5 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n              >\r\n                Clear Selection\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Data Table */}\r\n      <div className=\"bg-white rounded-xl shadow-sm border border-gray-100 overflow-hidden\">\r\n        {loading ? (\r\n          <div className=\"flex items-center justify-center p-12\">\r\n            <LoadingSpinner />\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <ResponsiveTable\r\n              columns={tableColumns}\r\n              data={data}\r\n              loading={loading}\r\n              emptyMessage={`No ${displayName.toLowerCase()} found`}\r\n            />\r\n            \r\n            {/* Pagination */}\r\n            {pagination.totalPages > 1 && (\r\n              <div className=\"px-6 py-4 border-t border-gray-200 flex items-center justify-between\">\r\n                <div className=\"text-sm text-gray-700\">\r\n                  Showing page {pagination.currentPage} of {pagination.totalPages}\r\n                </div>\r\n                <div className=\"flex space-x-2\">\r\n                  <button\r\n                    onClick={() => handlePageChange(pagination.currentPage - 1)}\r\n                    disabled={pagination.currentPage === 1}\r\n                    className=\"px-3 py-1.5 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                  >\r\n                    Previous\r\n                  </button>\r\n                  <button\r\n                    onClick={() => handlePageChange(pagination.currentPage + 1)}\r\n                    disabled={pagination.currentPage === pagination.totalPages}\r\n                    className=\"px-3 py-1.5 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                  >\r\n                    Next\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n\r\n      {/* Edit Modal */}\r\n      {showEditModal && editingRecord && (\r\n        <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50\">\r\n          <div className=\"relative top-20 mx-auto p-5 border w-11/12 md:w-3/4 lg:w-1/2 shadow-lg rounded-md bg-white\">\r\n            <div className=\"flex items-center justify-between mb-4\">\r\n              <h3 className=\"text-lg font-medium text-gray-900\">\r\n                {editingRecord.id === 'new' ? `Add New ${displayName} Record` : `Edit ${displayName} Record`}\r\n              </h3>\r\n              <button\r\n                onClick={() => {\r\n                  setShowEditModal(false);\r\n                  setError(null);\r\n                }}\r\n                className=\"text-gray-400 hover:text-gray-600\"\r\n              >\r\n                <X className=\"h-6 w-6\" />\r\n              </button>\r\n            </div>\r\n\r\n            {/* Error display in modal */}\r\n            {error && (\r\n              <div className=\"mb-4 p-3 bg-red-50 border border-red-200 rounded-md\">\r\n                <div className=\"flex\">\r\n                  <div className=\"flex-shrink-0\">\r\n                    <AlertTriangle className=\"h-5 w-5 text-red-400\" />\r\n                  </div>\r\n                  <div className=\"ml-3\">\r\n                    <h3 className=\"text-sm font-medium text-red-800\">Error</h3>\r\n                    <div className=\"mt-1 text-sm text-red-700\">{error}</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"max-h-96 overflow-y-auto\">\r\n              <div className=\"space-y-4\">\r\n                {columns\r\n                  .filter(col => col.name !== 'id' && col.name !== 'created_at' && col.name !== 'updated_at')\r\n                  .map((column) => (\r\n                    <div key={column.name}>\r\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                        {column.displayName}\r\n                      </label>\r\n                      {column.type === 'boolean' ? (\r\n                        <select\r\n                          value={editFormData[column.name] ? 'true' : 'false'}\r\n                          onChange={(e) => handleFormFieldChange(column.name, e.target.value === 'true')}\r\n                          className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500\"\r\n                        >\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                      ) : column.type.includes('text') || column.type.includes('varchar') ? (\r\n                        <textarea\r\n                          value={String(editFormData[column.name] || '')}\r\n                          onChange={(e) => handleFormFieldChange(column.name, e.target.value)}\r\n                          className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500\"\r\n                          rows={3}\r\n                        />\r\n                      ) : column.type.includes('json') || column.type.includes('array') ? (\r\n                        <textarea\r\n                          value={JSON.stringify(editFormData[column.name] || '', null, 2)}\r\n                          onChange={(e) => {\r\n                            try {\r\n                              const parsed = JSON.parse(e.target.value);\r\n                              handleFormFieldChange(column.name, parsed);\r\n                            } catch {\r\n                              // Keep the raw value for now\r\n                              handleFormFieldChange(column.name, e.target.value);\r\n                            }\r\n                          }}\r\n                          className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500 font-mono text-sm\"\r\n                          rows={4}\r\n                          placeholder=\"Enter valid JSON\"\r\n                        />\r\n                      ) : (\r\n                        <input\r\n                          type={column.type.includes('int') || column.type.includes('numeric') ? 'number' : 'text'}\r\n                          value={String(editFormData[column.name] || '')}\r\n                          onChange={(e) => {\r\n                            const value = column.type.includes('int') || column.type.includes('numeric')\r\n                              ? parseFloat(e.target.value) || 0\r\n                              : e.target.value;\r\n                            handleFormFieldChange(column.name, value);\r\n                          }}\r\n                          className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500\"\r\n                        />\r\n                      )}\r\n                    </div>\r\n                  ))}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"flex justify-end space-x-3 mt-6 pt-4 border-t\">\r\n              <button\r\n                onClick={() => setShowEditModal(false)}\r\n                className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button\r\n                onClick={handleSaveRecord}\r\n                disabled={saving}\r\n                className=\"px-4 py-2 text-sm font-medium text-white bg-indigo-600 border border-transparent rounded-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 flex items-center\"\r\n              >\r\n                {saving ? (\r\n                  <>\r\n                    <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\r\n                    Saving...\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <Save className=\"h-4 w-4 mr-2\" />\r\n                    Save Changes\r\n                  </>\r\n                )}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};","import React from 'react';\nimport { Edit, Trash2, CheckCircle, Send, Users } from 'lucide-react';\nimport { User } from '../../../types';\n\ninterface UserManagementTableProps {\n  users: User[];\n  selectedUsers: string[];\n  onSelectUser: (userId: string) => void;\n  onSelectAll: () => void;\n  onEditUser: (user: User) => void;\n  onDeleteUser: (userId: string) => void;\n  onResendConfirmation: (userId: string) => void;\n  onConfirmEmail: (userId: string) => void;\n  actionLoading: string;\n  getStatusBadge: (user: User) => React.ReactNode;\n  getRoleBadge: (role: string) => React.ReactNode;\n}\n\nexport const UserManagementTable: React.FC<UserManagementTableProps> = ({\n  users,\n  selectedUsers,\n  onSelectUser,\n  onSelectAll,\n  onEditUser,\n  onDeleteUser,\n  onResendConfirmation,\n  onConfirmEmail,\n  actionLoading,\n  getStatusBadge,\n  getRoleBadge\n}) => {\n  return (\n    <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 overflow-hidden\">\n      {/* Desktop Table */}\n      <div className=\"hidden lg:block overflow-x-auto\">\n        <table className=\"min-w-full divide-y divide-gray-200\">\n          <thead className=\"bg-gray-50\">\n            <tr>\n              <th className=\"px-6 py-3 text-left\">\n                <input\n                  type=\"checkbox\"\n                  checked={selectedUsers.length === users.length && users.length > 0}\n                  onChange={onSelectAll}\n                  className=\"rounded border-gray-300 text-indigo-600 focus:ring-indigo-500\"\n                />\n              </th>\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                User\n              </th>\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                Role\n              </th>\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                Status\n              </th>\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                Created\n              </th>\n              <th className=\"px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                Actions\n              </th>\n            </tr>\n          </thead>\n          <tbody className=\"bg-white divide-y divide-gray-200\">\n            {users.map((user) => (\n              <tr key={user.id} className=\"hover:bg-gray-50\">\n                <td className=\"px-6 py-4 whitespace-nowrap\">\n                  <input\n                    type=\"checkbox\"\n                    checked={selectedUsers.includes(user.id)}\n                    onChange={() => onSelectUser(user.id)}\n                    className=\"rounded border-gray-300 text-indigo-600 focus:ring-indigo-500\"\n                  />\n                </td>\n                <td className=\"px-6 py-4 whitespace-nowrap\">\n                  <div className=\"flex items-center\">\n                    <div className=\"flex-shrink-0 h-10 w-10\">\n                      <div className=\"h-10 w-10 rounded-full bg-indigo-100 flex items-center justify-center\">\n                        <span className=\"text-sm font-medium text-indigo-700\">\n                          {user?.name?.charAt(0)?.toUpperCase() || 'U'}\n                        </span>\n                      </div>\n                    </div>\n                    <div className=\"ml-4\">\n                      <div className=\"text-sm font-medium text-gray-900\">{user?.name || 'Unknown User'}</div>\n                      <div className=\"text-sm text-gray-500\">{user.email}</div>\n                      {user.phone && (\n                        <div className=\"text-xs text-gray-400\">{user.phone}</div>\n                      )}\n                    </div>\n                  </div>\n                </td>\n                <td className=\"px-6 py-4 whitespace-nowrap\">\n                  {getRoleBadge(user.role)}\n                </td>\n                <td className=\"px-6 py-4 whitespace-nowrap\">\n                  {getStatusBadge(user)}\n                </td>\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                  {new Date(user.createdAt).toLocaleDateString()}\n                </td>\n                <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\n                  <div className=\"flex items-center justify-end space-x-2\">\n                    {!user.emailVerified && (\n                      <>\n                        <button\n                          onClick={() => onResendConfirmation(user.id)}\n                          disabled={actionLoading === `confirm-${user.id}`}\n                          className=\"text-blue-600 hover:text-blue-900 disabled:opacity-50\"\n                          title=\"Resend confirmation email\"\n                        >\n                          <Send className=\"w-4 h-4\" />\n                        </button>\n                        <button\n                          onClick={() => onConfirmEmail(user.id)}\n                          disabled={actionLoading === `manual-confirm-${user.id}`}\n                          className=\"text-green-600 hover:text-green-900 disabled:opacity-50\"\n                          title=\"Manually confirm email\"\n                        >\n                          <CheckCircle className=\"w-4 h-4\" />\n                        </button>\n                      </>\n                    )}\n                    <button\n                      onClick={() => onEditUser(user)}\n                      className=\"text-indigo-600 hover:text-indigo-900\"\n                      title=\"Edit user\"\n                    >\n                      <Edit className=\"w-4 h-4\" />\n                    </button>\n                    <button\n                      onClick={() => onDeleteUser(user.id)}\n                      disabled={actionLoading === `delete-${user.id}`}\n                      className=\"text-red-600 hover:text-red-900 disabled:opacity-50\"\n                      title=\"Delete user\"\n                    >\n                      <Trash2 className=\"w-4 h-4\" />\n                    </button>\n                  </div>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n\n      {/* Mobile Cards */}\n      <div className=\"lg:hidden\">\n        {users.map((user) => (\n          <div key={user.id} className=\"p-4 border-b border-gray-200 last:border-b-0\">\n            <div className=\"flex items-start justify-between\">\n              <div className=\"flex items-start space-x-3\">\n                <input\n                  type=\"checkbox\"\n                  checked={selectedUsers.includes(user.id)}\n                  onChange={() => onSelectUser(user.id)}\n                  className=\"mt-1 rounded border-gray-300 text-indigo-600 focus:ring-indigo-500\"\n                />\n                <div className=\"flex-shrink-0\">\n                  <div className=\"h-10 w-10 rounded-full bg-indigo-100 flex items-center justify-center\">\n                    <span className=\"text-sm font-medium text-indigo-700\">\n                      {user?.name?.charAt(0)?.toUpperCase() || 'U'}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"flex-1 min-w-0\">\n                  <div className=\"text-sm font-medium text-gray-900 truncate\">{user?.name || 'Unknown User'}</div>\n                  <div className=\"text-sm text-gray-500 truncate\">{user.email}</div>\n                  {user.phone && (\n                    <div className=\"text-xs text-gray-400\">{user.phone}</div>\n                  )}\n                  <div className=\"mt-2 flex flex-wrap gap-2\">\n                    {getRoleBadge(user.role)}\n                    {getStatusBadge(user)}\n                  </div>\n                  <div className=\"mt-1 text-xs text-gray-400\">\n                    Created: {new Date(user.createdAt).toLocaleDateString()}\n                  </div>\n                </div>\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                {!user.emailVerified && (\n                  <>\n                    <button\n                      onClick={() => onResendConfirmation(user.id)}\n                      disabled={actionLoading === `confirm-${user.id}`}\n                      className=\"p-2 text-blue-600 hover:text-blue-900 disabled:opacity-50\"\n                      title=\"Resend confirmation email\"\n                    >\n                      <Send className=\"w-4 h-4\" />\n                    </button>\n                    <button\n                      onClick={() => onConfirmEmail(user.id)}\n                      disabled={actionLoading === `manual-confirm-${user.id}`}\n                      className=\"p-2 text-green-600 hover:text-green-900 disabled:opacity-50\"\n                      title=\"Manually confirm email\"\n                    >\n                      <CheckCircle className=\"w-4 h-4\" />\n                    </button>\n                  </>\n                )}\n                <button\n                  onClick={() => onEditUser(user)}\n                  className=\"p-2 text-indigo-600 hover:text-indigo-900\"\n                  title=\"Edit user\"\n                >\n                  <Edit className=\"w-4 h-4\" />\n                </button>\n                <button\n                  onClick={() => onDeleteUser(user.id)}\n                  disabled={actionLoading === `delete-${user.id}`}\n                  className=\"p-2 text-red-600 hover:text-red-900 disabled:opacity-50\"\n                  title=\"Delete user\"\n                >\n                  <Trash2 className=\"w-4 h-4\" />\n                </button>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n\n      {users.length === 0 && (\n        <div className=\"text-center py-12\">\n          <div className=\"text-gray-400 mb-4\">\n            <Users className=\"w-12 h-12 mx-auto\" />\n          </div>\n          <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No users found</h3>\n          <p className=\"text-gray-500\">Try adjusting your search or filter criteria.</p>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useState, useEffect, useMemo, useCallback } from 'react';\nimport { Users, UserPlus, Search, Filter, Download, Edit, X, CheckCircle, Clock } from 'lucide-react';\nimport { ResponsiveContainer, useViewport, usePWAInstall } from '../../Common/ResponsiveContainer';\nimport { useSecurity } from '../../Security/SecurityProvider';\nimport { validateUser, validateEmail, sanitizeInput } from '../../../utils/validation';\nimport {\n  getAllUsers,\n  deleteUsersBulk,\n  updateUsersBulk,\n  resendConfirmationEmail,\n  confirmUserEmail\n} from '../../../lib/supabase';\nimport { createUser, updateUser, deleteUser } from '../../../lib/crudOperations';\nimport { User } from '../../../types';\nimport { LoadingSpinner } from '../../Common/LoadingSpinner';\nimport { useNotification } from '../../../contexts/NotificationContext';\nimport { EnhancedButton } from '../../Common/EnhancedButton';\nimport { Modal } from '../../Common/Modal';\nimport { UserManagementTable } from './UserManagementTable';\nimport { UserFormModal } from './UserFormModal';\n\ninterface UserFormData {\n  email: string;\n  name: string;\n  role: 'admin' | 'seller' | 'customer';\n  phone: string;\n  dateOfBirth: string;\n  isActive: boolean;\n  sendEmail: boolean;\n}\n\ninterface FilterState {\n  search: string;\n  role: 'all' | 'admin' | 'seller' | 'customer';\n  status: 'all' | 'active' | 'inactive' | 'unverified';\n  sortBy: 'name' | 'email' | 'role' | 'createdAt';\n  sortOrder: 'asc' | 'desc';\n}\n\nconst ProductionUserManagement: React.FC = () => {\n  // Responsive and PWA hooks\n  const viewport = useViewport();\n  const { isInstallable, installPWA } = usePWAInstall();\n\n  // Security hooks\n  const { checkPermission, logSecurityEvent, rateLimitStatus } = useSecurity();\n\n  // State management\n  const [users, setUsers] = useState<User[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedUsers, setSelectedUsers] = useState<string[]>([]);\n  const [isCreateModalOpen, setIsCreateModalOpen] = useState(false);\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false);\n  const [currentUser, setCurrentUser] = useState<User | null>(null);\n  const [showPassword, setShowPassword] = useState(false);\n  const [generatedPassword, setGeneratedPassword] = useState<string>('');\n  const [actionLoading, setActionLoading] = useState<string>('');\n\n  // Filter and search state\n  const [filters, setFilters] = useState<FilterState>({\n    search: '',\n    role: 'all',\n    status: 'all',\n    sortBy: 'createdAt',\n    sortOrder: 'desc'\n  });\n\n  // Form state\n  const [formData, setFormData] = useState<UserFormData>({\n    email: '',\n    name: '',\n    role: 'customer',\n    phone: '',\n    dateOfBirth: '',\n    isActive: true,\n    sendEmail: true\n  });\n\n  const { showNotification } = useNotification();\n\n  // Load users on component mount\n  useEffect(() => {\n    loadUsers();\n  }, []);\n\n  // Filtered and sorted users\n  const filteredUsers = useMemo(() => {\n    let filtered = users.filter(user => {\n      // Search filter\n      if (filters.search) {\n        const searchLower = filters.search.toLowerCase();\n        if (!user.name.toLowerCase().includes(searchLower) &&\n          !user.email.toLowerCase().includes(searchLower)) {\n          return false;\n        }\n      }\n\n      // Role filter\n      if (filters.role !== 'all' && user.role !== filters.role) {\n        return false;\n      }\n\n      // Status filter\n      if (filters.status !== 'all') {\n        switch (filters.status) {\n          case 'active':\n            return user.isActive === true;\n          case 'inactive':\n            return user.isActive === false;\n          case 'unverified':\n            return user.emailVerified === false;\n        }\n      }\n\n      return true;\n    });\n\n    // Sort users\n    filtered.sort((a, b) => {\n      let aValue: any, bValue: any;\n\n      switch (filters.sortBy) {\n        case 'name':\n          aValue = a.name.toLowerCase();\n          bValue = b.name.toLowerCase();\n          break;\n        case 'email':\n          aValue = a.email.toLowerCase();\n          bValue = b.email.toLowerCase();\n          break;\n        case 'role':\n          aValue = a.role;\n          bValue = b.role;\n          break;\n        case 'createdAt':\n          aValue = new Date(a.createdAt);\n          bValue = new Date(b.createdAt);\n          break;\n        default:\n          return 0;\n      }\n\n      if (filters.sortOrder === 'asc') {\n        return aValue > bValue ? 1 : -1;\n      } else {\n        return aValue < bValue ? 1 : -1;\n      }\n    });\n\n    return filtered;\n  }, [users, filters]);\n\n  // Load users function\n  const loadUsers = async () => {\n    try {\n      setLoading(true);\n      const fetchedUsers = await getAllUsers();\n      setUsers(fetchedUsers || []);\n    } catch (error) {\n      console.error('Error loading users:', error);\n      showNotification({\n        type: 'error',\n        title: 'Error',\n        message: 'Failed to load users. Please try again.'\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Reset form\n  const resetForm = () => {\n    setFormData({\n      email: '',\n      name: '',\n      role: 'customer',\n      phone: '',\n      dateOfBirth: '',\n      isActive: true,\n      sendEmail: true\n    });\n    setGeneratedPassword('');\n    setShowPassword(false);\n  };\n\n  // Handle create user\n  const handleCreateUser = async () => {\n    // Security checks\n    if (!checkPermission('create', 'user_management')) {\n      return;\n    }\n\n    if (!rateLimitStatus.userCreation) {\n      showNotification({\n        type: 'error',\n        title: 'Rate Limit Exceeded',\n        message: 'Please wait before creating another user.'\n      });\n      return;\n    }\n\n    // Validate input data\n    const validationResult = validateUser({\n      email: sanitizeInput(formData.email),\n      name: sanitizeInput(formData.name),\n      role: formData.role,\n      phone: formData.phone ? sanitizeInput(formData.phone) : undefined,\n      dateOfBirth: formData.dateOfBirth\n    });\n\n    if (!validationResult.isValid) {\n      showNotification({\n        type: 'error',\n        title: 'Validation Error',\n        message: validationResult.errors.join(', ')\n      });\n      return;\n    }\n\n    // Show warnings if any\n    if (validationResult.warnings && validationResult.warnings.length > 0) {\n      showNotification({\n        type: 'warning',\n        title: 'Validation Warnings',\n        message: validationResult.warnings.join(', ')\n      });\n    }\n\n    try {\n      setActionLoading('create');\n      const result = await createNewUser({\n        email: sanitizeInput(formData.email),\n        name: sanitizeInput(formData.name),\n        role: formData.role,\n        phone: formData.phone,\n        dateOfBirth: formData.dateOfBirth,\n        isActive: formData.isActive,\n        sendEmail: formData.sendEmail\n      });\n\n      if (result.success && result.user) {\n        setUsers([...users, result.user]);\n        setIsCreateModalOpen(false);\n        resetForm();\n\n        if (result.password) {\n          setGeneratedPassword(result.password);\n          setShowPassword(true);\n        }\n\n        showNotification({\n          type: 'success',\n          title: 'User Created',\n          message: `User has been created successfully${formData.sendEmail ? ' and confirmation email sent' : ''}.`\n        });\n      } else {\n        showNotification({\n          type: 'error',\n          title: 'Error',\n          message: result.error || 'Failed to create user.'\n        });\n      }\n    } catch (error) {\n      console.error('Error creating user:', error);\n      showNotification({\n        type: 'error',\n        title: 'Error',\n        message: 'Failed to create user. Please try again later.'\n      });\n    } finally {\n      setActionLoading('');\n    }\n  };\n\n  // Handle update user\n  const handleUpdateUser = async () => {\n    if (!currentUser) return;\n\n    // Security checks\n    if (!checkPermission('update', 'user_management')) {\n      return;\n    }\n\n    // Validate input data\n    const validationResult = validateUser({\n      email: sanitizeInput(formData.email),\n      name: sanitizeInput(formData.name),\n      role: formData.role,\n      phone: formData.phone ? sanitizeInput(formData.phone) : undefined,\n      dateOfBirth: formData.dateOfBirth\n    });\n\n    if (!validationResult.isValid) {\n      showNotification({\n        type: 'error',\n        title: 'Validation Error',\n        message: validationResult.errors.join(', ')\n      });\n      return;\n    }\n\n    try {\n      setActionLoading('update');\n      const result = await updateUser(currentUser.id, {\n        name: formData.name,\n        email: formData.email,\n        role: formData.role,\n        phone: formData.phone,\n        dateOfBirth: formData.dateOfBirth,\n        isActive: formData.isActive\n      });\n\n      if (result.success && result.user) {\n        setUsers(users.map(u => u.id === currentUser.id ? result.user! : u));\n        setIsEditModalOpen(false);\n        resetForm();\n        setCurrentUser(null);\n        showNotification({\n          type: 'success',\n          title: 'User Updated',\n          message: 'User has been updated successfully.'\n        });\n      } else {\n        showNotification({\n          type: 'error',\n          title: 'Error',\n          message: result.error || 'Failed to update user.'\n        });\n      }\n    } catch (error) {\n      console.error('Error updating user:', error);\n      showNotification({\n        type: 'error',\n        title: 'Error',\n        message: 'Failed to update user. Please try again later.'\n      });\n    } finally {\n      setActionLoading('');\n    }\n  };\n\n  // Handle delete user\n  const handleDeleteUser = async (userId: string) => {\n    if (!window.confirm('Are you sure you want to delete this user? This action cannot be undone.')) {\n      return;\n    }\n\n    try {\n      setActionLoading(`delete-${userId}`);\n      const result = await deleteUser(userId);\n\n      if (result.success) {\n        setUsers(users.filter(u => u.id !== userId));\n        setSelectedUsers(selectedUsers.filter(id => id !== userId));\n        showNotification({\n          type: 'success',\n          title: 'User Deleted',\n          message: 'User has been deleted successfully.'\n        });\n      } else {\n        showNotification({\n          type: 'error',\n          title: 'Error',\n          message: result.error || 'Failed to delete user.'\n        });\n      }\n    } catch (error) {\n      console.error('Error deleting user:', error);\n      showNotification({\n        type: 'error',\n        title: 'Error',\n        message: 'Failed to delete user. Please try again later.'\n      });\n    } finally {\n      setActionLoading('');\n    }\n  };\n\n  // Handle resend confirmation\n  const handleResendConfirmation = async (userId: string) => {\n    try {\n      setActionLoading(`confirm-${userId}`);\n      const result = await resendConfirmationEmail(userId);\n\n      if (result.success) {\n        showNotification({\n          type: 'success',\n          title: 'Email Sent',\n          message: 'Confirmation email has been sent successfully.'\n        });\n      } else {\n        showNotification({\n          type: 'error',\n          title: 'Error',\n          message: result.error || 'Failed to send confirmation email.'\n        });\n      }\n    } catch (error) {\n      console.error('Error sending confirmation:', error);\n      showNotification({\n        type: 'error',\n        title: 'Error',\n        message: 'Failed to send confirmation email.'\n      });\n    } finally {\n      setActionLoading('');\n    }\n  };\n\n  // Handle manual email confirmation\n  const handleConfirmEmail = async (userId: string) => {\n    try {\n      setActionLoading(`manual-confirm-${userId}`);\n      const result = await confirmUserEmail(userId);\n\n      if (result.success) {\n        // Update user in local state\n        setUsers(users.map(u =>\n          u.id === userId ? { ...u, emailVerified: true } : u\n        ));\n\n        showNotification({\n          type: 'success',\n          title: 'Email Confirmed',\n          message: 'User email has been confirmed successfully.'\n        });\n      } else {\n        showNotification({\n          type: 'error',\n          title: 'Error',\n          message: result.error || 'Failed to confirm email.'\n        });\n      }\n    } catch (error) {\n      console.error('Error confirming email:', error);\n      showNotification({\n        type: 'error',\n        title: 'Error',\n        message: 'Failed to confirm email.'\n      });\n    } finally {\n      setActionLoading('');\n    }\n  };\n\n  // Handle bulk operations\n  const handleBulkDelete = async () => {\n    if (selectedUsers.length === 0) {\n      showNotification({\n        type: 'warning',\n        title: 'No Users Selected',\n        message: 'Please select users to delete.'\n      });\n      return;\n    }\n\n    if (!window.confirm(`Are you sure you want to delete ${selectedUsers.length} users? This action cannot be undone.`)) {\n      return;\n    }\n\n    try {\n      setActionLoading('bulk-delete');\n      const result = await deleteUsersBulk(selectedUsers);\n\n      if (result.success) {\n        setUsers(users.filter(u => !selectedUsers.includes(u.id)));\n        setSelectedUsers([]);\n        showNotification({\n          type: 'success',\n          title: 'Users Deleted',\n          message: `${selectedUsers.length} users have been deleted successfully.`\n        });\n      } else {\n        showNotification({\n          type: 'error',\n          title: 'Error',\n          message: result.error || 'Failed to delete users.'\n        });\n      }\n    } catch (error) {\n      console.error('Error bulk deleting users:', error);\n      showNotification({\n        type: 'error',\n        title: 'Error',\n        message: 'Failed to delete users. Please try again later.'\n      });\n    } finally {\n      setActionLoading('');\n    }\n  };\n\n  // Handle bulk role update\n  const handleBulkRoleUpdate = async (newRole: 'admin' | 'seller' | 'customer') => {\n    if (selectedUsers.length === 0) {\n      showNotification({\n        type: 'warning',\n        title: 'No Users Selected',\n        message: 'Please select users to update.'\n      });\n      return;\n    }\n\n    try {\n      setActionLoading('bulk-role');\n      const result = await updateUsersBulk(selectedUsers, { role: newRole });\n\n      if (result.success) {\n        setUsers(users.map(u =>\n          selectedUsers.includes(u.id) ? { ...u, role: newRole } : u\n        ));\n        setSelectedUsers([]);\n        showNotification({\n          type: 'success',\n          title: 'Roles Updated',\n          message: `${selectedUsers.length} users have been updated to ${newRole} role.`\n        });\n      } else {\n        showNotification({\n          type: 'error',\n          title: 'Error',\n          message: result.error || 'Failed to update user roles.'\n        });\n      }\n    } catch (error) {\n      console.error('Error bulk updating roles:', error);\n      showNotification({\n        type: 'error',\n        title: 'Error',\n        message: 'Failed to update user roles. Please try again later.'\n      });\n    } finally {\n      setActionLoading('');\n    }\n  };\n\n  // Handle bulk status update\n  const handleBulkStatusUpdate = async (isActive: boolean) => {\n    if (selectedUsers.length === 0) {\n      showNotification({\n        type: 'warning',\n        title: 'No Users Selected',\n        message: 'Please select users to update.'\n      });\n      return;\n    }\n\n    try {\n      setActionLoading('bulk-status');\n      const result = await updateUsersBulk(selectedUsers, { isActive });\n\n      if (result.success) {\n        setUsers(users.map(u =>\n          selectedUsers.includes(u.id) ? { ...u, isActive } : u\n        ));\n        setSelectedUsers([]);\n        showNotification({\n          type: 'success',\n          title: 'Status Updated',\n          message: `${selectedUsers.length} users have been ${isActive ? 'activated' : 'deactivated'}.`\n        });\n      } else {\n        showNotification({\n          type: 'error',\n          title: 'Error',\n          message: result.error || 'Failed to update user status.'\n        });\n      }\n    } catch (error) {\n      console.error('Error bulk updating status:', error);\n      showNotification({\n        type: 'error',\n        title: 'Error',\n        message: 'Failed to update user status. Please try again later.'\n      });\n    } finally {\n      setActionLoading('');\n    }\n  };\n\n  // Export users to CSV\n  const handleExportUsers = () => {\n    const csvContent = [\n      ['Name', 'Email', 'Role', 'Phone', 'Status', 'Email Verified', 'Created At'],\n      ...filteredUsers.map(user => [\n        user.name,\n        user.email,\n        user.role,\n        user.phone || '',\n        user.isActive ? 'Active' : 'Inactive',\n        user.emailVerified ? 'Yes' : 'No',\n        new Date(user.createdAt).toLocaleDateString()\n      ])\n    ].map(row => row.map(cell => `\"${cell}\"`).join(',')).join('\\n');\n\n    const blob = new Blob([csvContent], { type: 'text/csv' });\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `users-export-${new Date().toISOString().split('T')[0]}.csv`;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    window.URL.revokeObjectURL(url);\n\n    showNotification({\n      type: 'success',\n      title: 'Export Complete',\n      message: 'Users have been exported to CSV successfully.'\n    });\n  };\n\n  // Handle select all users\n  const handleSelectAll = () => {\n    if (selectedUsers.length === filteredUsers.length) {\n      setSelectedUsers([]);\n    } else {\n      setSelectedUsers(filteredUsers.map(u => u.id));\n    }\n  };\n\n  // Open edit modal\n  const openEditModal = (user: User) => {\n    setCurrentUser(user);\n    setFormData({\n      email: user.email,\n      name: user.name,\n      role: user.role,\n      phone: user.phone || '',\n      dateOfBirth: user.dateOfBirth || '',\n      isActive: user.isActive || true,\n      sendEmail: false\n    });\n    setIsEditModalOpen(true);\n  };\n\n  // Get status badge\n  const getStatusBadge = (user: User) => {\n    if (!user.isActive) {\n      return (\n        <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-red-100 text-red-800\">\n          <X className=\"w-3 h-3 mr-1\" />\n          Inactive\n        </span>\n      );\n    }\n\n    if (!user.emailVerified) {\n      return (\n        <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800\">\n          <Clock className=\"w-3 h-3 mr-1\" />\n          Unverified\n        </span>\n      );\n    }\n\n    return (\n      <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800\">\n        <CheckCircle className=\"w-3 h-3 mr-1\" />\n        Active\n      </span>\n    );\n  };\n\n  // Get role badge\n  const getRoleBadge = (role: string) => {\n    const colors = {\n      admin: 'bg-purple-100 text-purple-800',\n      seller: 'bg-blue-100 text-blue-800',\n      customer: 'bg-gray-100 text-gray-800'\n    };\n\n    return (\n      <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${colors[role as keyof typeof colors]}`}>\n        {role.charAt(0).toUpperCase() + role.slice(1)}\n      </span>\n    );\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center h-64\">\n        <LoadingSpinner size=\"lg\" />\n      </div>\n    );\n  }\n\n  return (\n    <ResponsiveContainer\n      className=\"user-management-container\"\n      enablePWASupport={true}\n      showMobileMenu={viewport.isMobile}\n    >\n      <div className=\"space-y-6 p-4 sm:p-6 lg:p-8\">\n        {/* PWA Install Banner */}\n        {isInstallable && (\n          <div className=\"bg-indigo-50 border border-indigo-200 rounded-lg p-4 mb-4\">\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center\">\n                <Smartphone className=\"w-5 h-5 text-indigo-600 mr-2\" />\n                <div>\n                  <h3 className=\"text-sm font-medium text-indigo-900\">Install App</h3>\n                  <p className=\"text-sm text-indigo-700\">Get the full experience with our mobile app</p>\n                </div>\n              </div>\n              <button\n                onClick={installPWA}\n                className=\"px-3 py-1 bg-indigo-600 text-white text-sm rounded-md hover:bg-indigo-700\"\n              >\n                Install\n              </button>\n            </div>\n          </div>\n        )}\n\n        {/* Header */}\n        <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between user-management-header\">\n          <div>\n            <h1 className=\"text-2xl font-bold text-gray-900 flex items-center user-management-title\">\n              <Users className=\"w-8 h-8 mr-3 text-indigo-600\" />\n              User Management\n            </h1>\n            <p className=\"mt-2 text-sm text-gray-600\">\n              Manage users, roles, and permissions across your platform\n            </p>\n          </div>\n          <div className=\"mt-4 sm:mt-0 flex flex-col sm:flex-row gap-2\">\n            <EnhancedButton\n              onClick={handleExportUsers}\n              variant=\"outline\"\n              size=\"sm\"\n              className=\"w-full sm:w-auto\"\n            >\n              <Download className=\"w-4 h-4 mr-2\" />\n              Export CSV\n            </EnhancedButton>\n            <EnhancedButton\n              onClick={() => setIsCreateModalOpen(true)}\n              variant=\"primary\"\n              size=\"sm\"\n              className=\"w-full sm:w-auto\"\n            >\n              <UserPlus className=\"w-4 h-4 mr-2\" />\n              Add User\n            </EnhancedButton>\n          </div>\n        </div>\n\n        {/* Filters and Search */}\n        <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-4\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n            {/* Search */}\n            <div className=\"relative\">\n              <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4\" />\n              <input\n                type=\"text\"\n                placeholder=\"Search users...\"\n                value={filters.search}\n                onChange={(e) => setFilters({ ...filters, search: e.target.value })}\n                className=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-transparent\"\n              />\n            </div>\n\n            {/* Role Filter */}\n            <select\n              value={filters.role}\n              onChange={(e) => setFilters({ ...filters, role: e.target.value as any })}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-transparent\"\n            >\n              <option value=\"all\">All Roles</option>\n              <option value=\"admin\">Admin</option>\n              <option value=\"seller\">Seller</option>\n              <option value=\"customer\">Customer</option>\n            </select>\n\n            {/* Status Filter */}\n            <select\n              value={filters.status}\n              onChange={(e) => setFilters({ ...filters, status: e.target.value as any })}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-transparent\"\n            >\n              <option value=\"all\">All Status</option>\n              <option value=\"active\">Active</option>\n              <option value=\"inactive\">Inactive</option>\n              <option value=\"unverified\">Unverified</option>\n            </select>\n\n            {/* Sort */}\n            <div className=\"flex gap-2\">\n              <select\n                value={filters.sortBy}\n                onChange={(e) => setFilters({ ...filters, sortBy: e.target.value as any })}\n                className=\"flex-1 px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-transparent\"\n              >\n                <option value=\"createdAt\">Created Date</option>\n                <option value=\"name\">Name</option>\n                <option value=\"email\">Email</option>\n                <option value=\"role\">Role</option>\n              </select>\n              <button\n                onClick={() => setFilters({ ...filters, sortOrder: filters.sortOrder === 'asc' ? 'desc' : 'asc' })}\n                className=\"px-3 py-2 border border-gray-300 rounded-lg hover:bg-gray-50 focus:ring-2 focus:ring-indigo-500 focus:border-transparent\"\n              >\n                {filters.sortOrder === 'asc' ? '↑' : '↓'}\n              </button>\n            </div>\n          </div>\n\n          {/* Bulk Actions */}\n          {selectedUsers.length > 0 && (\n            <div className=\"mt-4 p-3 bg-indigo-50 rounded-lg border border-indigo-200\">\n              <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-3\">\n                <span className=\"text-sm font-medium text-indigo-900\">\n                  {selectedUsers.length} user{selectedUsers.length !== 1 ? 's' : ''} selected\n                </span>\n                <div className=\"flex flex-wrap gap-2\">\n                  <button\n                    onClick={() => handleBulkRoleUpdate('admin')}\n                    disabled={actionLoading === 'bulk-role'}\n                    className=\"px-3 py-1 text-xs font-medium text-purple-700 bg-purple-100 rounded-full hover:bg-purple-200 disabled:opacity-50\"\n                  >\n                    Make Admin\n                  </button>\n                  <button\n                    onClick={() => handleBulkRoleUpdate('seller')}\n                    disabled={actionLoading === 'bulk-role'}\n                    className=\"px-3 py-1 text-xs font-medium text-blue-700 bg-blue-100 rounded-full hover:bg-blue-200 disabled:opacity-50\"\n                  >\n                    Make Seller\n                  </button>\n                  <button\n                    onClick={() => handleBulkRoleUpdate('customer')}\n                    disabled={actionLoading === 'bulk-role'}\n                    className=\"px-3 py-1 text-xs font-medium text-gray-700 bg-gray-100 rounded-full hover:bg-gray-200 disabled:opacity-50\"\n                  >\n                    Make Customer\n                  </button>\n                  <button\n                    onClick={() => handleBulkStatusUpdate(true)}\n                    disabled={actionLoading === 'bulk-status'}\n                    className=\"px-3 py-1 text-xs font-medium text-green-700 bg-green-100 rounded-full hover:bg-green-200 disabled:opacity-50\"\n                  >\n                    Activate\n                  </button>\n                  <button\n                    onClick={() => handleBulkStatusUpdate(false)}\n                    disabled={actionLoading === 'bulk-status'}\n                    className=\"px-3 py-1 text-xs font-medium text-red-700 bg-red-100 rounded-full hover:bg-red-200 disabled:opacity-50\"\n                  >\n                    Deactivate\n                  </button>\n                  <button\n                    onClick={handleBulkDelete}\n                    disabled={actionLoading === 'bulk-delete'}\n                    className=\"px-3 py-1 text-xs font-medium text-red-700 bg-red-100 rounded-full hover:bg-red-200 disabled:opacity-50\"\n                  >\n                    Delete\n                  </button>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* Users Table */}\n        <UserManagementTable\n          users={filteredUsers}\n          selectedUsers={selectedUsers}\n          onSelectUser={(userId) => {\n            if (selectedUsers.includes(userId)) {\n              setSelectedUsers(selectedUsers.filter(id => id !== userId));\n            } else {\n              setSelectedUsers([...selectedUsers, userId]);\n            }\n          }}\n          onSelectAll={handleSelectAll}\n          onEditUser={openEditModal}\n          onDeleteUser={handleDeleteUser}\n          onResendConfirmation={handleResendConfirmation}\n          onConfirmEmail={handleConfirmEmail}\n          actionLoading={actionLoading}\n          getStatusBadge={getStatusBadge}\n          getRoleBadge={getRoleBadge}\n        />\n\n        {/* Create User Modal */}\n        <UserFormModal\n          isOpen={isCreateModalOpen}\n          onClose={() => {\n            setIsCreateModalOpen(false);\n            resetForm();\n          }}\n          onSubmit={handleCreateUser}\n          formData={formData}\n          setFormData={setFormData}\n          isEdit={false}\n          loading={actionLoading === 'create'}\n          generatedPassword={generatedPassword}\n          showPassword={showPassword}\n          setShowPassword={setShowPassword}\n        />\n\n        {/* Edit User Modal */}\n        <UserFormModal\n          isOpen={isEditModalOpen}\n          onClose={() => {\n            setIsEditModalOpen(false);\n            setCurrentUser(null);\n            resetForm();\n          }}\n          onSubmit={handleUpdateUser}\n          formData={formData}\n          setFormData={setFormData}\n          isEdit={true}\n          loading={actionLoading === 'update'}\n          showPassword={showPassword}\n          setShowPassword={setShowPassword}\n        />\n      </div>\n    </ResponsiveContainer>\n  );\n};\n\nexport default ProductionUserManagement;\n","import React, { useState, useMemo } from 'react';\r\nimport { useProducts } from '../../../contexts/ProductContext';\r\nimport { useNotification } from '../../../contexts/NotificationContext';\r\nimport { Product } from '../../../types';\r\nimport { LoadingSpinner } from '../../Common/LoadingSpinner';\r\nimport { EnhancedProductForm } from '../../Product/EnhancedProductForm';\r\nimport { Modal } from '../../Common/Modal';\r\nimport { Edit, Trash2, Plus, Package, Search, Filter, Download, CheckSquare, Square, Eye, Copy, RefreshCw, SortAsc, SortDesc } from 'lucide-react';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { ResponsiveTable } from '../../Common/ResponsiveTable';\r\nimport { AdminErrorBoundary } from '../../Common/AdminErrorBoundary';\r\nimport { EmptyState, CardSkeleton } from '../../Common/EnhancedLoadingStates';\r\n\r\nexport const ProductManagement: React.FC = () => {\r\n  const { products, deleteProduct, loading } = useProducts();\r\n  const { showNotification } = useNotification();\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [editingProduct, setEditingProduct] = useState<Product | null>(null);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [selectedCategory, setSelectedCategory] = useState('all');\r\n\r\n  // Enhanced state for bulk operations and advanced filtering\r\n  const [selectedProducts, setSelectedProducts] = useState<string[]>([]);\r\n  const [showBulkActions, setShowBulkActions] = useState(false);\r\n  const [sortBy, setSortBy] = useState<'name' | 'price' | 'stock' | 'createdAt'>('name');\r\n  const [sortOrder, setSortOrder] = useState<'asc' | 'desc'>('asc');\r\n  const [stockFilter, setStockFilter] = useState<'all' | 'in-stock' | 'low-stock' | 'out-of-stock'>('all');\r\n  const [priceRange, setPriceRange] = useState<{ min: number; max: number }>({ min: 0, max: 1000 });\r\n  const [viewMode, setViewMode] = useState<'table' | 'grid'>('table');\r\n  const [isExporting, setIsExporting] = useState(false);\r\n  const [refreshing, setRefreshing] = useState(false);\r\n\r\n  const categories = ['all', ...Array.from(new Set(products.map(p => p.category)))];\r\n\r\n  // Enhanced filtering and sorting logic\r\n  const filteredProducts = useMemo(() => {\r\n    const filtered = products.filter(product => {\r\n      const matchesSearch = product.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        product.description.toLowerCase().includes(searchTerm.toLowerCase());\r\n      const matchesCategory = selectedCategory === 'all' || product.category === selectedCategory;\r\n\r\n      // Stock filter\r\n      let matchesStock = true;\r\n      if (stockFilter === 'in-stock') matchesStock = product.stock > 10;\r\n      else if (stockFilter === 'low-stock') matchesStock = product.stock > 0 && product.stock <= 10;\r\n      else if (stockFilter === 'out-of-stock') matchesStock = product.stock === 0;\r\n\r\n      // Price range filter\r\n      const matchesPrice = product.price >= priceRange.min && product.price <= priceRange.max;\r\n\r\n      return matchesSearch && matchesCategory && matchesStock && matchesPrice;\r\n    });\r\n\r\n    // Sorting\r\n    filtered.sort((a, b) => {\r\n      let aValue: any, bValue: any;\r\n\r\n      switch (sortBy) {\r\n        case 'name':\r\n          aValue = a.name.toLowerCase();\r\n          bValue = b.name.toLowerCase();\r\n          break;\r\n        case 'price':\r\n          aValue = a.price;\r\n          bValue = b.price;\r\n          break;\r\n        case 'stock':\r\n          aValue = a.stock;\r\n          bValue = b.stock;\r\n          break;\r\n        case 'createdAt':\r\n          aValue = new Date(a.createdAt || 0).getTime();\r\n          bValue = new Date(b.createdAt || 0).getTime();\r\n          break;\r\n        default:\r\n          return 0;\r\n      }\r\n\r\n      if (aValue < bValue) return sortOrder === 'asc' ? -1 : 1;\r\n      if (aValue > bValue) return sortOrder === 'asc' ? 1 : -1;\r\n      return 0;\r\n    });\r\n\r\n    return filtered;\r\n  }, [products, searchTerm, selectedCategory, stockFilter, priceRange, sortBy, sortOrder]);\r\n\r\n  const handleAddProduct = () => {\r\n    setEditingProduct(null);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const handleEditProduct = (product: Product) => {\r\n    setEditingProduct(product);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const handleDeleteProduct = (product: Product) => {\r\n    if (window.confirm(`Are you sure you want to delete \"${product.name}\"?`)) {\r\n      deleteProduct(product.id);\r\n      showNotification({\r\n        type: 'success',\r\n        title: 'Product Deleted',\r\n        message: `${product.name} has been deleted successfully.`\r\n      });\r\n    }\r\n  };\r\n\r\n  // Bulk operations\r\n  const handleSelectProduct = (productId: string) => {\r\n    setSelectedProducts(prev =>\r\n      prev.includes(productId)\r\n        ? prev.filter(id => id !== productId)\r\n        : [...prev, productId]\r\n    );\r\n  };\r\n\r\n  const handleSelectAll = () => {\r\n    if (selectedProducts.length === filteredProducts.length) {\r\n      setSelectedProducts([]);\r\n    } else {\r\n      setSelectedProducts(filteredProducts.map(p => p.id));\r\n    }\r\n  };\r\n\r\n  const handleBulkDelete = async () => {\r\n    if (selectedProducts.length === 0) return;\r\n\r\n    if (window.confirm(`Are you sure you want to delete ${selectedProducts.length} products?`)) {\r\n      try {\r\n        for (const productId of selectedProducts) {\r\n          await deleteProduct(productId);\r\n        }\r\n        setSelectedProducts([]);\r\n        showNotification({\r\n          type: 'success',\r\n          title: 'Products Deleted',\r\n          message: `${selectedProducts.length} products have been deleted successfully.`\r\n        });\r\n      } catch (error) {\r\n        showNotification({\r\n          type: 'error',\r\n          title: 'Error',\r\n          message: 'Failed to delete some products. Please try again.'\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleBulkStatusUpdate = async (status: 'active' | 'inactive') => {\r\n    if (selectedProducts.length === 0) return;\r\n\r\n    try {\r\n      // This would need to be implemented in the product context\r\n      // await updateProductsStatus(selectedProducts, status);\r\n      setSelectedProducts([]);\r\n      showNotification({\r\n        type: 'success',\r\n        title: 'Products Updated',\r\n        message: `${selectedProducts.length} products have been ${status === 'active' ? 'activated' : 'deactivated'}.`\r\n      });\r\n    } catch (error) {\r\n      showNotification({\r\n        type: 'error',\r\n        title: 'Error',\r\n        message: 'Failed to update products. Please try again.'\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleExport = async () => {\r\n    setIsExporting(true);\r\n    try {\r\n      // Mock export functionality\r\n      await new Promise(resolve => setTimeout(resolve, 2000));\r\n      showNotification({\r\n        type: 'success',\r\n        title: 'Export Complete',\r\n        message: 'Products have been exported successfully.'\r\n      });\r\n    } catch (error) {\r\n      showNotification({\r\n        type: 'error',\r\n        title: 'Export Failed',\r\n        message: 'Failed to export products. Please try again.'\r\n      });\r\n    } finally {\r\n      setIsExporting(false);\r\n    }\r\n  };\r\n\r\n  const handleRefresh = async () => {\r\n    setRefreshing(true);\r\n    try {\r\n      // This would trigger a refresh in the product context\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      showNotification({\r\n        type: 'success',\r\n        title: 'Refreshed',\r\n        message: 'Product data has been refreshed.'\r\n      });\r\n    } catch (error) {\r\n      showNotification({\r\n        type: 'error',\r\n        title: 'Refresh Failed',\r\n        message: 'Failed to refresh data. Please try again.'\r\n      });\r\n    } finally {\r\n      setRefreshing(false);\r\n    }\r\n  };\r\n\r\n  const toggleSort = (field: typeof sortBy) => {\r\n    if (sortBy === field) {\r\n      setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc');\r\n    } else {\r\n      setSortBy(field);\r\n      setSortOrder('asc');\r\n    }\r\n  };\r\n\r\n  const getStockStatus = (stock: number) => {\r\n    if (stock === 0) return { text: 'Out of Stock', color: 'text-red-600 bg-red-100' };\r\n    if (stock < 10) return { text: 'Low Stock', color: 'text-yellow-600 bg-yellow-100' };\r\n    return { text: 'In Stock', color: 'text-green-600 bg-green-100' };\r\n  };\r\n\r\n  // Enhanced table columns with bulk selection\r\n  const tableColumns = [\r\n    {\r\n      key: 'select',\r\n      title: (\r\n        <button\r\n          onClick={handleSelectAll}\r\n          className=\"flex items-center justify-center w-full\"\r\n        >\r\n          {selectedProducts.length === filteredProducts.length && filteredProducts.length > 0 ? (\r\n            <CheckSquare className=\"h-4 w-4 text-indigo-600\" />\r\n          ) : (\r\n            <Square className=\"h-4 w-4 text-gray-400\" />\r\n          )}\r\n        </button>\r\n      ),\r\n      width: 50,\r\n      render: (value: any, record: Product) => (\r\n        <button\r\n          onClick={(e) => {\r\n            e.stopPropagation();\r\n            handleSelectProduct(record.id);\r\n          }}\r\n          className=\"flex items-center justify-center w-full\"\r\n        >\r\n          {selectedProducts.includes(record.id) ? (\r\n            <CheckSquare className=\"h-4 w-4 text-indigo-600\" />\r\n          ) : (\r\n            <Square className=\"h-4 w-4 text-gray-400\" />\r\n          )}\r\n        </button>\r\n      )\r\n    },\r\n    {\r\n      key: 'product',\r\n      title: (\r\n        <button\r\n          onClick={() => toggleSort('name')}\r\n          className=\"flex items-center space-x-1 hover:text-indigo-600\"\r\n        >\r\n          <span>Product</span>\r\n          {sortBy === 'name' && (\r\n            sortOrder === 'asc' ? <SortAsc className=\"h-4 w-4\" /> : <SortDesc className=\"h-4 w-4\" />\r\n          )}\r\n        </button>\r\n      ),\r\n      minWidth: 200,\r\n      render: (value: any, record: Product) => (\r\n        <div className=\"flex items-center\">\r\n          <img\r\n            src={(record.images && record.images.length > 0 && record.images[0]) || 'https://via.placeholder.com/400x400/f3f4f6/9ca3af?text=No+Image'}\r\n            alt={record.name}\r\n            className=\"h-12 w-12 rounded-lg object-cover border border-gray-200\"\r\n            onError={(e) => {\r\n              (e.target as HTMLImageElement).src = 'https://via.placeholder.com/400x400/f3f4f6/9ca3af?text=No+Image';\r\n            }}\r\n          />\r\n          <div className=\"ml-4\">\r\n            <div className=\"text-sm font-medium text-gray-900\">\r\n              {record.name}\r\n            </div>\r\n            <div className=\"text-sm text-gray-500\">\r\n              {record.description?.slice(0, 50)}...\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      key: 'category',\r\n      title: 'Category',\r\n      width: 100,\r\n      render: (value: string) => (\r\n        <span className=\"inline-flex px-2 py-1 text-xs font-semibold rounded-full bg-gray-100 text-gray-800\">\r\n          {value}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      key: 'price',\r\n      title: (\r\n        <button\r\n          onClick={() => toggleSort('price')}\r\n          className=\"flex items-center space-x-1 hover:text-indigo-600\"\r\n        >\r\n          <span>Price</span>\r\n          {sortBy === 'price' && (\r\n            sortOrder === 'asc' ? <SortAsc className=\"h-4 w-4\" /> : <SortDesc className=\"h-4 w-4\" />\r\n          )}\r\n        </button>\r\n      ),\r\n      width: 120,\r\n      render: (value: any, record: Product) => (\r\n        <div>\r\n          <div className=\"text-sm font-medium text-gray-900\">\r\n\n            ₹{record.price.toFixed(2)}\r\n          </div>\r\n          {record.originalPrice && (\r\n            <div className=\"text-sm text-gray-500 line-through\">\r\n              ₹{record.originalPrice.toFixed(2)}\r\n            </div>\r\n          )}\r\n          {record.originalPrice && (\r\n            <div className=\"text-xs text-green-600 font-medium\">\r\n              {Math.round(((record.originalPrice - record.price) / record.originalPrice) * 100)}% off\r\n            </div>\r\n          )}\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      key: 'stock',\r\n      title: (\r\n        <button\r\n          onClick={() => toggleSort('stock')}\r\n          className=\"flex items-center space-x-1 hover:text-indigo-600\"\r\n        >\r\n          <span>Stock</span>\r\n          {sortBy === 'stock' && (\r\n            sortOrder === 'asc' ? <SortAsc className=\"h-4 w-4\" /> : <SortDesc className=\"h-4 w-4\" />\r\n          )}\r\n        </button>\r\n      ),\r\n      width: 120,\r\n      render: (value: number, record: Product) => {\r\n        const stockStatus = getStockStatus(record.stock);\r\n        return (\r\n          <div>\r\n            <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${stockStatus.color}`}>\r\n              {stockStatus.text}\r\n            </span>\r\n            <div className=\"text-sm text-gray-500 mt-1\">\r\n              {record.stock} units\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n    },\r\n    {\r\n      key: 'sellerName',\r\n      title: 'Seller',\r\n      width: 120,\r\n      render: (value: string) => <span className=\"text-sm text-gray-900\">{value}</span>\r\n    },\r\n    {\r\n      key: 'actions',\r\n      title: 'Actions',\r\n      width: 120,\r\n      render: (value: any, record: Product) => (\r\n        <div className=\"flex items-center space-x-1\">\r\n          <button\r\n            onClick={(e) => {\r\n              e.stopPropagation();\r\n              handleEditProduct(record);\r\n            }}\r\n            className=\"text-indigo-600 hover:text-indigo-900 p-1 rounded hover:bg-indigo-50\"\r\n            title=\"Edit Product\"\r\n          >\r\n            <Edit className=\"h-4 w-4\" />\r\n          </button>\r\n          <button\r\n            onClick={(e) => {\r\n              e.stopPropagation();\r\n              // Handle view product details\r\n            }}\r\n            className=\"text-blue-600 hover:text-blue-900 p-1 rounded hover:bg-blue-50\"\r\n            title=\"View Details\"\r\n          >\r\n            <Eye className=\"h-4 w-4\" />\r\n          </button>\r\n          <button\r\n            onClick={(e) => {\r\n              e.stopPropagation();\r\n              // Handle duplicate product\r\n            }}\r\n            className=\"text-green-600 hover:text-green-900 p-1 rounded hover:bg-green-50\"\r\n            title=\"Duplicate Product\"\r\n          >\r\n            <Copy className=\"h-4 w-4\" />\r\n          </button>\r\n          <button\r\n            onClick={(e) => {\r\n              e.stopPropagation();\r\n              handleDeleteProduct(record);\r\n            }}\r\n            className=\"text-red-600 hover:text-red-900 p-1 rounded hover:bg-red-50\"\r\n            title=\"Delete Product\"\r\n          >\r\n            <Trash2 className=\"h-4 w-4\" />\r\n          </button>\r\n        </div>\r\n      )\r\n    }\r\n  ];\r\n\r\n  if (loading) {\r\n    return <LoadingSpinner text=\"Loading products...\" />;\r\n  }\r\n\r\n  return (\r\n    <AdminErrorBoundary>\r\n      <div className=\"space-y-6\">\r\n        {/* Enhanced Header */}\r\n        <div className=\"flex flex-col lg:flex-row lg:items-center lg:justify-between\">\r\n          <div>\r\n            <h2 className=\"text-2xl font-bold text-gray-900\">Product Management</h2>\r\n            <p className=\"text-gray-600 mt-1\">\r\n              Manage all products across the platform ({filteredProducts.length} of {products.length} products)\r\n            </p>\r\n          </div>\r\n          <div className=\"flex items-center space-x-3 mt-4 lg:mt-0\">\r\n            <button\r\n              onClick={handleRefresh}\r\n              disabled={refreshing}\r\n              className=\"flex items-center space-x-2 px-3 py-2 border border-gray-300 rounded-lg hover:bg-gray-50 disabled:opacity-50\"\r\n            >\r\n              <RefreshCw className={`h-4 w-4 ${refreshing ? 'animate-spin' : ''}`} />\r\n              <span>Refresh</span>\r\n            </button>\r\n            <button\r\n              onClick={handleExport}\r\n              disabled={isExporting}\r\n              className=\"flex items-center space-x-2 px-3 py-2 border border-gray-300 rounded-lg hover:bg-gray-50 disabled:opacity-50\"\r\n            >\r\n              <Download className=\"h-4 w-4\" />\r\n              <span>{isExporting ? 'Exporting...' : 'Export'}</span>\r\n            </button>\r\n            <motion.button\r\n              onClick={handleAddProduct}\r\n              className=\"btn-primary flex items-center space-x-2\"\r\n              whileHover={{ scale: 1.02 }}\r\n              whileTap={{ scale: 0.98 }}\r\n            >\r\n              <Plus className=\"h-4 w-4\" />\r\n              <span>Add Product</span>\r\n            </motion.button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Bulk Actions Bar */}\r\n        <AnimatePresence>\r\n          {selectedProducts.length > 0 && (\r\n            <motion.div\r\n              initial={{ opacity: 0, y: -20 }}\r\n              animate={{ opacity: 1, y: 0 }}\r\n              exit={{ opacity: 0, y: -20 }}\r\n              className=\"bg-indigo-50 border border-indigo-200 rounded-lg p-4\"\r\n            >\r\n              <div className=\"flex items-center justify-between\">\r\n                <div className=\"flex items-center space-x-3\">\r\n                  <span className=\"text-sm font-medium text-indigo-900\">\r\n                    {selectedProducts.length} product{selectedProducts.length !== 1 ? 's' : ''} selected\r\n                  </span>\r\n                </div>\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <button\r\n                    onClick={() => handleBulkStatusUpdate('active')}\r\n                    className=\"px-3 py-1 bg-green-100 text-green-800 rounded-md hover:bg-green-200 text-sm\"\r\n                  >\r\n                    Activate\r\n                  </button>\r\n                  <button\r\n                    onClick={() => handleBulkStatusUpdate('inactive')}\r\n                    className=\"px-3 py-1 bg-yellow-100 text-yellow-800 rounded-md hover:bg-yellow-200 text-sm\"\r\n                  >\r\n                    Deactivate\r\n                  </button>\r\n                  <button\r\n                    onClick={handleBulkDelete}\r\n                    className=\"px-3 py-1 bg-red-100 text-red-800 rounded-md hover:bg-red-200 text-sm\"\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                  <button\r\n                    onClick={() => setSelectedProducts([])}\r\n                    className=\"px-3 py-1 bg-gray-100 text-gray-800 rounded-md hover:bg-gray-200 text-sm\"\r\n                  >\r\n                    Clear\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </motion.div>\r\n          )}\r\n        </AnimatePresence>\r\n\r\n        {/* Enhanced Filters */}\r\n        <div className=\"bg-white rounded-xl shadow-sm border border-gray-100 p-6\">\r\n          <div className=\"flex items-center justify-between mb-4\">\r\n            <h3 className=\"text-lg font-medium text-gray-900\">Filters & Search</h3>\r\n            <div className=\"flex items-center space-x-2\">\r\n              <button\r\n                onClick={() => setViewMode(viewMode === 'table' ? 'grid' : 'table')}\r\n                className=\"px-3 py-1 border border-gray-300 rounded-md hover:bg-gray-50 text-sm\"\r\n              >\r\n                {viewMode === 'table' ? 'Grid View' : 'Table View'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Search Products\r\n              </label>\r\n              <div className=\"relative\">\r\n                <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\r\n                <input\r\n                  type=\"text\"\r\n                  value={searchTerm}\r\n                  onChange={(e) => setSearchTerm(e.target.value)}\r\n                  placeholder=\"Search by name or description...\"\r\n                  className=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Category\r\n              </label>\r\n              <select\r\n                value={selectedCategory}\r\n                onChange={(e) => setSelectedCategory(e.target.value)}\r\n                className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\r\n              >\r\n                {categories.map(category => (\r\n                  <option key={category} value={category}>\r\n                    {category === 'all' ? 'All Categories' : category}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Stock Status\r\n              </label>\r\n              <select\r\n                value={stockFilter}\r\n                onChange={(e) => setStockFilter(e.target.value as any)}\r\n                className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\r\n              >\r\n                <option value=\"all\">All Stock Levels</option>\r\n                <option value=\"in-stock\">In Stock</option>\r\n                <option value=\"low-stock\">Low Stock</option>\r\n                <option value=\"out-of-stock\">Out of Stock</option>\r\n              </select>\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Price Range\r\n              </label>\r\n              <div className=\"flex space-x-2\">\r\n                <input\r\n                  type=\"number\"\r\n                  value={priceRange.min}\r\n                  onChange={(e) => setPriceRange(prev => ({ ...prev, min: Number(e.target.value) }))}\r\n                  placeholder=\"Min\"\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\r\n                />\r\n                <input\r\n                  type=\"number\"\r\n                  value={priceRange.max}\r\n                  onChange={(e) => setPriceRange(prev => ({ ...prev, max: Number(e.target.value) }))}\r\n                  placeholder=\"Max\"\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Filter Summary */}\r\n          {(searchTerm || selectedCategory !== 'all' || stockFilter !== 'all' || priceRange.min > 0 || priceRange.max < 1000) && (\r\n            <div className=\"mt-4 pt-4 border-t border-gray-200\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <span className=\"text-sm text-gray-600\">\r\n                  Showing {filteredProducts.length} of {products.length} products\r\n                </span>\r\n                <button\r\n                  onClick={() => {\r\n                    setSearchTerm('');\r\n                    setSelectedCategory('all');\r\n                    setStockFilter('all');\r\n                    setPriceRange({ min: 0, max: 1000 });\r\n                  }}\r\n                  className=\"text-sm text-indigo-600 hover:text-indigo-800\"\r\n                >\r\n                  Clear all filters\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Products Display */}\r\n        {loading ? (\r\n          <CardSkeleton count={8} />\r\n        ) : filteredProducts.length === 0 ? (\r\n          <EmptyState\r\n            icon={<Package className=\"h-24 w-24\" />}\r\n            title=\"No products found\"\r\n            description=\"No products match your current filters. Try adjusting your search criteria or add a new product.\"\r\n            action={{\r\n              label: \"Add Product\",\r\n              onClick: handleAddProduct\r\n            }}\r\n          />\r\n        ) : viewMode === 'table' ? (\r\n          <div className=\"bg-white rounded-xl shadow-sm border border-gray-100 overflow-hidden\">\r\n            <ResponsiveTable\r\n              columns={tableColumns}\r\n              data={filteredProducts}\r\n              loading={loading}\r\n              emptyMessage=\"No products found\"\r\n              onRowClick={handleEditProduct}\r\n            />\r\n          </div>\r\n        ) : (\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\r\n            {filteredProducts.map((product) => (\r\n              <motion.div\r\n                key={product.id}\r\n                layout\r\n                initial={{ opacity: 0, scale: 0.9 }}\r\n                animate={{ opacity: 1, scale: 1 }}\r\n                exit={{ opacity: 0, scale: 0.9 }}\r\n                className=\"bg-white rounded-xl shadow-sm border border-gray-100 overflow-hidden hover:shadow-md transition-shadow cursor-pointer\"\r\n                onClick={() => handleEditProduct(product)}\r\n              >\r\n                <div className=\"relative\">\r\n                  <img\r\n                    src={(product.images && product.images.length > 0 && product.images[0]) || 'https://via.placeholder.com/400x400/f3f4f6/9ca3af?text=No+Image'}\r\n                    alt={product.name}\r\n                    className=\"w-full h-48 object-cover\"\r\n                    onError={(e) => {\r\n                      (e.target as HTMLImageElement).src = 'https://via.placeholder.com/400x400/f3f4f6/9ca3af?text=No+Image';\r\n                    }}\r\n                  />\r\n                  <div className=\"absolute top-2 left-2\">\r\n                    <button\r\n                      onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        handleSelectProduct(product.id);\r\n                      }}\r\n                      className=\"p-1 bg-white rounded-md shadow-sm\"\r\n                    >\r\n                      {selectedProducts.includes(product.id) ? (\r\n                        <CheckSquare className=\"h-4 w-4 text-indigo-600\" />\r\n                      ) : (\r\n                        <Square className=\"h-4 w-4 text-gray-400\" />\r\n                      )}\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"absolute top-2 right-2\">\r\n                    {(() => {\r\n                      const stockStatus = getStockStatus(product.stock);\r\n                      return (\r\n                        <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${stockStatus.color}`}>\r\n                          {stockStatus.text}\r\n                        </span>\r\n                      );\r\n                    })()}\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"p-4\">\r\n                  <h3 className=\"text-lg font-medium text-gray-900 mb-1 truncate\">\r\n                    {product.name}\r\n                  </h3>\r\n                  <p className=\"text-sm text-gray-500 mb-2 line-clamp-2\">\r\n                    {product.description}\r\n                  </p>\r\n\r\n                  <div className=\"flex items-center justify-between mb-3\">\r\n                    <div>\r\n                      <span className=\"text-lg font-bold text-gray-900\">\r\n                        ₹{product.price.toFixed(2)}\r\n                      </span>\r\n                      {product.originalPrice && (\r\n                        <span className=\"text-sm text-gray-500 line-through ml-2\">\r\n                          ₹{product.originalPrice.toFixed(2)}\r\n                        </span>\r\n                      )}\r\n                    </div>\r\n                    <span className=\"inline-flex px-2 py-1 text-xs font-semibold rounded-full bg-gray-100 text-gray-800\">\r\n                      {product.category}\r\n                    </span>\r\n                  </div>\r\n\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <span className=\"text-sm text-gray-500\">\r\n                      {product.stock} units\r\n                    </span>\r\n                    <div className=\"flex items-center space-x-1\">\r\n                      <button\r\n                        onClick={(e) => {\r\n                          e.stopPropagation();\r\n                          handleEditProduct(product);\r\n                        }}\r\n                        className=\"p-1 text-indigo-600 hover:text-indigo-900 rounded hover:bg-indigo-50\"\r\n                        title=\"Edit Product\"\r\n                      >\r\n                        <Edit className=\"h-4 w-4\" />\r\n                      </button>\r\n                      <button\r\n                        onClick={(e) => {\r\n                          e.stopPropagation();\r\n                          handleDeleteProduct(product);\r\n                        }}\r\n                        className=\"p-1 text-red-600 hover:text-red-900 rounded hover:bg-red-50\"\r\n                        title=\"Delete Product\"\r\n                      >\r\n                        <Trash2 className=\"h-4 w-4\" />\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </motion.div>\r\n            ))}\r\n          </div>\r\n        )}\r\n\r\n        {/* Product Form Modal */}\r\n        <Modal\r\n          isOpen={isModalOpen}\r\n          onClose={() => setIsModalOpen(false)}\r\n          title={editingProduct ? \"Edit Product\" : \"Add New Product\"}\r\n          size=\"xl\"\r\n        >\r\n          <EnhancedProductForm\r\n            product={editingProduct}\r\n            onClose={() => setIsModalOpen(false)}\r\n          />\r\n        </Modal>\r\n      </div>\r\n    </AdminErrorBoundary>\r\n  );\r\n};","import React, { useState, useEffect, useMemo } from 'react';\r\nimport { Package, Clock, CheckCircle, XCircle, Search, Filter, Eye, Edit, Download, RefreshCw, CheckSquare, Square, Calendar, DollarSign, User, FileText, SortAsc, SortDesc } from 'lucide-react';\r\nimport { supabase } from '../../../lib/supabase';\r\nimport { ResponsiveTable } from '../../Common/ResponsiveTable';\r\nimport { AdminErrorBoundary } from '../../Common/AdminErrorBoundary';\r\nimport { AdminLoadingState, EmptyState } from '../../Common/EnhancedLoadingStates';\r\nimport { useNotification } from '../../../contexts/NotificationContext';\r\nimport { Modal } from '../../Common/Modal';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\n\r\ninterface Order {\r\n  id: string;\r\n  total: number;\r\n  status: 'pending' | 'confirmed' | 'shipped' | 'delivered' | 'cancelled';\r\n  created_at: string;\r\n  user_id: string;\r\n  profiles: {\r\n    email: string;\r\n    name: string;\r\n  };\r\n  order_items: Array<{\r\n    id: string;\r\n    quantity: number;\r\n    price: number;\r\n    products: {\r\n      name: string;\r\n      image: string;\r\n    };\r\n  }>;\r\n}\r\n\r\nexport const OrderManager: React.FC = () => {\r\n  const [orders, setOrders] = useState<Order[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [statusFilter, setStatusFilter] = useState<string>('all');\r\n  const [selectedOrder, setSelectedOrder] = useState<Order | null>(null);\r\n\r\n  // Enhanced state for bulk operations and advanced filtering\r\n  const [selectedOrders, setSelectedOrders] = useState<string[]>([]);\r\n  const [sortBy, setSortBy] = useState<'created_at' | 'total' | 'status'>('created_at');\r\n  const [sortOrder, setSortOrder] = useState<'asc' | 'desc'>('desc');\r\n  const [dateRange, setDateRange] = useState<{ start: string; end: string }>({\r\n    start: '',\r\n    end: ''\r\n  });\r\n  const [amountRange, setAmountRange] = useState<{ min: number; max: number }>({\r\n    min: 0,\r\n    max: 10000\r\n  });\r\n  const [customerFilter, setCustomerFilter] = useState('');\r\n  const [isOrderDetailOpen, setIsOrderDetailOpen] = useState(false);\r\n  const [isEditOrderOpen, setIsEditOrderOpen] = useState(false);\r\n  const [refreshing, setRefreshing] = useState(false);\r\n  const [isExporting, setIsExporting] = useState(false);\r\n\r\n  const { showNotification } = useNotification();\r\n\r\n  useEffect(() => {\r\n    fetchOrders();\r\n  }, []);\r\n\r\n  // Enhanced filtering and sorting logic\r\n  const filteredOrders = useMemo(() => {\r\n    const filtered = orders.filter(order => {\r\n      const matchesSearch =\r\n        order.profiles.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        order.profiles.email.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        order.id.toLowerCase().includes(searchTerm.toLowerCase());\r\n\r\n      const matchesStatus = statusFilter === 'all' || order.status === statusFilter;\r\n\r\n      const matchesCustomer = !customerFilter ||\r\n        order.profiles.name.toLowerCase().includes(customerFilter.toLowerCase()) ||\r\n        order.profiles.email.toLowerCase().includes(customerFilter.toLowerCase());\r\n\r\n      const matchesAmount = order.total >= amountRange.min && order.total <= amountRange.max;\r\n\r\n      let matchesDate = true;\r\n      if (dateRange.start && dateRange.end) {\r\n        const orderDate = new Date(order.created_at);\r\n        const startDate = new Date(dateRange.start);\r\n        const endDate = new Date(dateRange.end);\r\n        matchesDate = orderDate >= startDate && orderDate <= endDate;\r\n      }\r\n\r\n      return matchesSearch && matchesStatus && matchesCustomer && matchesAmount && matchesDate;\r\n    });\r\n\r\n    // Sorting\r\n    filtered.sort((a, b) => {\r\n      let aValue: any, bValue: any;\r\n\r\n      switch (sortBy) {\r\n        case 'created_at':\r\n          aValue = new Date(a.created_at).getTime();\r\n          bValue = new Date(b.created_at).getTime();\r\n          break;\r\n        case 'total':\r\n          aValue = a.total;\r\n          bValue = b.total;\r\n          break;\r\n        case 'status':\r\n          aValue = a.status;\r\n          bValue = b.status;\r\n          break;\r\n        default:\r\n          return 0;\r\n      }\r\n\r\n      if (aValue < bValue) return sortOrder === 'asc' ? -1 : 1;\r\n      if (aValue > bValue) return sortOrder === 'asc' ? 1 : -1;\r\n      return 0;\r\n    });\r\n\r\n    return filtered;\r\n  }, [orders, searchTerm, statusFilter, customerFilter, amountRange, dateRange, sortBy, sortOrder]);\r\n\r\n  const fetchOrders = async () => {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from('orders')\r\n        .select(`\r\n          id,\r\n          total,\r\n          status,\r\n          created_at,\r\n          user_id,\r\n          profiles!inner(email, name),\r\n          order_items(\r\n            id,\r\n            quantity,\r\n            price,\r\n            products(name, image)\r\n          )\r\n        `)\r\n        .order('created_at', { ascending: false });\r\n\r\n      if (error) throw error;\r\n      \r\n      // Map the data to match our Order interface\r\n      const mappedOrders: Order[] = (data || []).map(order => ({\r\n        id: order.id,\r\n        total: order.total,\r\n        status: order.status,\r\n        created_at: order.created_at,\r\n        user_id: order.user_id,\r\n        profiles: {\r\n          email: order.profiles?.email || '',\r\n          name: order.profiles?.name || ''\r\n        },\r\n        order_items: (order.order_items || []).map(item => ({\r\n          id: item.id,\r\n          quantity: item.quantity,\r\n          price: item.price,\r\n          products: {\r\n            name: item.products?.name || '',\r\n            image: item.products?.image || ''\r\n          }\r\n        }))\r\n      }));\r\n      \r\n      setOrders(mappedOrders);\r\n    } catch (error) {\r\n      console.error('Error fetching orders:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const updateOrderStatus = async (orderId: string, newStatus: string) => {\r\n    try {\r\n      const { error } = await supabase\r\n        .from('orders')\r\n        .update({ status: newStatus })\r\n        .eq('id', orderId);\r\n\r\n      if (error) throw error;\r\n\r\n      setOrders(orders.map(order =>\r\n        order.id === orderId ? { ...order, status: newStatus as any } : order\r\n      ));\r\n\r\n      showNotification({\r\n        type: 'success',\r\n        title: 'Order Updated',\r\n        message: `Order status updated to ${newStatus} successfully!`\r\n      });\r\n    } catch (error) {\r\n      console.error('Error updating order status:', error);\r\n      showNotification({\r\n        type: 'error',\r\n        title: 'Update Failed',\r\n        message: 'Failed to update order status. Please try again.'\r\n      });\r\n    }\r\n  };\r\n\r\n  // Bulk operations\r\n  const handleSelectOrder = (orderId: string) => {\r\n    setSelectedOrders(prev =>\r\n      prev.includes(orderId)\r\n        ? prev.filter(id => id !== orderId)\r\n        : [...prev, orderId]\r\n    );\r\n  };\r\n\r\n  const handleSelectAll = () => {\r\n    if (selectedOrders.length === filteredOrders.length) {\r\n      setSelectedOrders([]);\r\n    } else {\r\n      setSelectedOrders(filteredOrders.map(o => o.id));\r\n    }\r\n  };\r\n\r\n  const handleBulkStatusUpdate = async (newStatus: string) => {\r\n    if (selectedOrders.length === 0) return;\r\n\r\n    try {\r\n      const { error } = await supabase\r\n        .from('orders')\r\n        .update({ status: newStatus })\r\n        .in('id', selectedOrders);\r\n\r\n      if (error) throw error;\r\n\r\n      setOrders(orders.map(order =>\r\n        selectedOrders.includes(order.id)\r\n          ? { ...order, status: newStatus as any }\r\n          : order\r\n      ));\r\n\r\n      setSelectedOrders([]);\r\n      showNotification({\r\n        type: 'success',\r\n        title: 'Orders Updated',\r\n        message: `${selectedOrders.length} orders updated to ${newStatus} successfully!`\r\n      });\r\n    } catch (error) {\r\n      console.error('Error updating orders:', error);\r\n      showNotification({\r\n        type: 'error',\r\n        title: 'Update Failed',\r\n        message: 'Failed to update orders. Please try again.'\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleBulkDelete = async () => {\r\n    if (selectedOrders.length === 0) return;\r\n\r\n    if (window.confirm(`Are you sure you want to delete ${selectedOrders.length} orders? This action cannot be undone.`)) {\r\n      try {\r\n        const { error } = await supabase\r\n          .from('orders')\r\n          .delete()\r\n          .in('id', selectedOrders);\r\n\r\n        if (error) throw error;\r\n\r\n        setOrders(orders.filter(order => !selectedOrders.includes(order.id)));\r\n        setSelectedOrders([]);\r\n\r\n        showNotification({\r\n          type: 'success',\r\n          title: 'Orders Deleted',\r\n          message: `${selectedOrders.length} orders deleted successfully!`\r\n        });\r\n      } catch (error) {\r\n        console.error('Error deleting orders:', error);\r\n        showNotification({\r\n          type: 'error',\r\n          title: 'Delete Failed',\r\n          message: 'Failed to delete orders. Please try again.'\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleRefresh = async () => {\r\n    setRefreshing(true);\r\n    await fetchOrders();\r\n    setRefreshing(false);\r\n    showNotification({\r\n      type: 'success',\r\n      title: 'Refreshed',\r\n      message: 'Order data has been refreshed.'\r\n    });\r\n  };\r\n\r\n  const handleExport = async () => {\r\n    setIsExporting(true);\r\n    try {\r\n      // Mock export functionality\r\n      await new Promise(resolve => setTimeout(resolve, 2000));\r\n      showNotification({\r\n        type: 'success',\r\n        title: 'Export Complete',\r\n        message: 'Orders have been exported successfully.'\r\n      });\r\n    } catch (error) {\r\n      showNotification({\r\n        type: 'error',\r\n        title: 'Export Failed',\r\n        message: 'Failed to export orders. Please try again.'\r\n      });\r\n    } finally {\r\n      setIsExporting(false);\r\n    }\r\n  };\r\n\r\n  const toggleSort = (field: typeof sortBy) => {\r\n    if (sortBy === field) {\r\n      setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc');\r\n    } else {\r\n      setSortBy(field);\r\n      setSortOrder('asc');\r\n    }\r\n  };\r\n\r\n  const getStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case 'pending':\r\n        return 'bg-yellow-100 text-yellow-800';\r\n      case 'confirmed':\r\n        return 'bg-blue-100 text-blue-800';\r\n      case 'shipped':\r\n        return 'bg-purple-100 text-purple-800';\r\n      case 'delivered':\r\n        return 'bg-green-100 text-green-800';\r\n      case 'cancelled':\r\n        return 'bg-red-100 text-red-800';\r\n      default:\r\n        return 'bg-gray-100 text-gray-800';\r\n    }\r\n  };\r\n\r\n  const getStatusIcon = (status: string) => {\r\n    switch (status) {\r\n      case 'pending':\r\n        return <Clock className=\"h-4 w-4\" />;\r\n      case 'confirmed':\r\n      case 'shipped':\r\n      case 'delivered':\r\n        return <CheckCircle className=\"h-4 w-4\" />;\r\n      case 'cancelled':\r\n        return <XCircle className=\"h-4 w-4\" />;\r\n      default:\r\n        return <Package className=\"h-4 w-4\" />;\r\n    }\r\n  };\r\n\r\n  const formatCurrency = (amount: number) => {\r\n    return new Intl.NumberFormat('en-US', {\r\n      style: 'currency',\r\n      currency: 'USD'\r\n    }).format(amount);\r\n  };\r\n\r\n  const formatDate = (dateString: string) => {\r\n    return new Date(dateString).toLocaleDateString('en-US', {\r\n      year: 'numeric',\r\n      month: 'short',\r\n      day: 'numeric',\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    });\r\n  };\r\n\r\n  // Enhanced table columns with bulk selection\r\n  const tableColumns = [\r\n    {\r\n      key: 'select',\r\n      title: (\r\n        <button\r\n          onClick={handleSelectAll}\r\n          className=\"flex items-center justify-center w-full\"\r\n        >\r\n          {selectedOrders.length === filteredOrders.length && filteredOrders.length > 0 ? (\r\n            <CheckSquare className=\"h-4 w-4 text-indigo-600\" />\r\n          ) : (\r\n            <Square className=\"h-4 w-4 text-gray-400\" />\r\n          )}\r\n        </button>\r\n      ),\r\n      width: 50,\r\n      render: (value: any, record: Order) => (\r\n        <button\r\n          onClick={(e) => {\r\n            e.stopPropagation();\r\n            handleSelectOrder(record.id);\r\n          }}\r\n          className=\"flex items-center justify-center w-full\"\r\n        >\r\n          {selectedOrders.includes(record.id) ? (\r\n            <CheckSquare className=\"h-4 w-4 text-indigo-600\" />\r\n          ) : (\r\n            <Square className=\"h-4 w-4 text-gray-400\" />\r\n          )}\r\n        </button>\r\n      )\r\n    },\r\n    {\r\n      key: 'id',\r\n      title: (\r\n        <button\r\n          onClick={() => toggleSort('created_at')}\r\n          className=\"flex items-center space-x-1 hover:text-indigo-600\"\r\n        >\r\n          <span>Order ID</span>\r\n          {sortBy === 'created_at' && (\r\n            sortOrder === 'asc' ? <SortAsc className=\"h-4 w-4\" /> : <SortDesc className=\"h-4 w-4\" />\r\n          )}\r\n        </button>\r\n      ),\r\n      width: 120,\r\n      render: (value: string) => <span className=\"font-medium\">#{value.slice(0, 8)}</span>\r\n    },\r\n    {\r\n      key: 'customer',\r\n      title: 'Customer',\r\n      minWidth: 200,\r\n      render: (value: any, record: Order) => (\r\n        <div className=\"flex items-center space-x-3\">\r\n          <div className=\"w-8 h-8 bg-indigo-100 rounded-full flex items-center justify-center\">\r\n            <User className=\"h-4 w-4 text-indigo-600\" />\r\n          </div>\r\n          <div>\r\n            <div className=\"font-medium text-gray-900\">{record.profiles.name}</div>\r\n            <div className=\"text-gray-500 text-sm\">{record.profiles.email}</div>\r\n          </div>\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      key: 'total',\r\n      title: (\r\n        <button\r\n          onClick={() => toggleSort('total')}\r\n          className=\"flex items-center space-x-1 hover:text-indigo-600\"\r\n        >\r\n          <span>Total</span>\r\n          {sortBy === 'total' && (\r\n            sortOrder === 'asc' ? <SortAsc className=\"h-4 w-4\" /> : <SortDesc className=\"h-4 w-4\" />\r\n          )}\r\n        </button>\r\n      ),\r\n      width: 120,\r\n      render: (value: number) => (\r\n        <div className=\"flex items-center space-x-1\">\r\n          <DollarSign className=\"h-4 w-4 text-green-600\" />\r\n          <span className=\"font-semibold text-gray-900\">{formatCurrency(value)}</span>\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      key: 'status',\r\n      title: (\r\n        <button\r\n          onClick={() => toggleSort('status')}\r\n          className=\"flex items-center space-x-1 hover:text-indigo-600\"\r\n        >\r\n          <span>Status</span>\r\n          {sortBy === 'status' && (\r\n            sortOrder === 'asc' ? <SortAsc className=\"h-4 w-4\" /> : <SortDesc className=\"h-4 w-4\" />\r\n          )}\r\n        </button>\r\n      ),\r\n      width: 140,\r\n      render: (value: string) => (\r\n        <span className={`inline-flex items-center space-x-1 px-2.5 py-0.5 rounded-full text-xs font-medium ${getStatusColor(value)}`}>\r\n          {getStatusIcon(value)}\r\n          <span className=\"capitalize\">{value}</span>\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      key: 'created_at',\r\n      title: 'Date',\r\n      width: 150,\r\n      render: (value: string) => (\r\n        <div className=\"flex items-center space-x-1\">\r\n          <Calendar className=\"h-4 w-4 text-gray-400\" />\r\n          <span className=\"text-gray-600\">{formatDate(value)}</span>\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      key: 'actions',\r\n      title: 'Actions',\r\n      width: 150,\r\n      render: (value: any, record: Order) => (\r\n        <div className=\"flex items-center space-x-1\">\r\n          <button\r\n            onClick={(e) => {\r\n              e.stopPropagation();\r\n              setSelectedOrder(record);\r\n              setIsOrderDetailOpen(true);\r\n            }}\r\n            className=\"text-indigo-600 hover:text-indigo-900 p-1 rounded hover:bg-indigo-50\"\r\n            title=\"View Details\"\r\n          >\r\n            <Eye className=\"h-4 w-4\" />\r\n          </button>\r\n\r\n          <button\r\n            onClick={(e) => {\r\n              e.stopPropagation();\r\n              setSelectedOrder(record);\r\n              setIsEditOrderOpen(true);\r\n            }}\r\n            className=\"text-blue-600 hover:text-blue-900 p-1 rounded hover:bg-blue-50\"\r\n            title=\"Edit Order\"\r\n          >\r\n            <Edit className=\"h-4 w-4\" />\r\n          </button>\r\n\r\n          <button\r\n            onClick={(e) => {\r\n              e.stopPropagation();\r\n              // Handle print/invoice\r\n            }}\r\n            className=\"text-green-600 hover:text-green-900 p-1 rounded hover:bg-green-50\"\r\n            title=\"Print Invoice\"\r\n          >\r\n            <FileText className=\"h-4 w-4\" />\r\n          </button>\r\n\r\n          {record.status === 'pending' && (\r\n            <button\r\n              onClick={(e) => {\r\n                e.stopPropagation();\r\n                updateOrderStatus(record.id, 'confirmed');\r\n              }}\r\n              className=\"bg-green-600 text-white px-2 py-1 rounded text-xs hover:bg-green-700\"\r\n              title=\"Confirm Order\"\r\n            >\r\n              Confirm\r\n            </button>\r\n          )}\r\n\r\n          {record.status === 'confirmed' && (\r\n            <button\r\n              onClick={(e) => {\r\n                e.stopPropagation();\r\n                updateOrderStatus(record.id, 'shipped');\r\n              }}\r\n              className=\"bg-blue-600 text-white px-2 py-1 rounded text-xs hover:bg-blue-700\"\r\n              title=\"Mark as Shipped\"\r\n            >\r\n              Ship\r\n            </button>\r\n          )}\r\n        </div>\r\n      )\r\n    }\r\n  ];\r\n\r\n  if (loading) {\r\n    return <AdminLoadingState type=\"orders\" message=\"Loading order data...\" />;\r\n  }\r\n\r\n  return (\r\n    <AdminErrorBoundary>\r\n      <div className=\"space-y-6\">\r\n        {/* Enhanced Header */}\r\n        <div className=\"flex flex-col lg:flex-row lg:items-center lg:justify-between\">\r\n          <div>\r\n            <h2 className=\"text-2xl font-bold text-gray-900\">Order Management</h2>\r\n            <p className=\"text-gray-600 mt-1\">\r\n              Manage all customer orders ({filteredOrders.length} of {orders.length} orders)\r\n            </p>\r\n          </div>\r\n          <div className=\"flex items-center space-x-3 mt-4 lg:mt-0\">\r\n            <button\r\n              onClick={handleRefresh}\r\n              disabled={refreshing}\r\n              className=\"flex items-center space-x-2 px-3 py-2 border border-gray-300 rounded-lg hover:bg-gray-50 disabled:opacity-50\"\r\n            >\r\n              <RefreshCw className={`h-4 w-4 ${refreshing ? 'animate-spin' : ''}`} />\r\n              <span>Refresh</span>\r\n            </button>\r\n            <button\r\n              onClick={handleExport}\r\n              disabled={isExporting}\r\n              className=\"flex items-center space-x-2 px-3 py-2 border border-gray-300 rounded-lg hover:bg-gray-50 disabled:opacity-50\"\r\n            >\r\n              <Download className=\"h-4 w-4\" />\r\n              <span>{isExporting ? 'Exporting...' : 'Export'}</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Bulk Actions Bar */}\r\n        <AnimatePresence>\r\n          {selectedOrders.length > 0 && (\r\n            <motion.div\r\n              initial={{ opacity: 0, y: -20 }}\r\n              animate={{ opacity: 1, y: 0 }}\r\n              exit={{ opacity: 0, y: -20 }}\r\n              className=\"bg-indigo-50 border border-indigo-200 rounded-lg p-4\"\r\n            >\r\n              <div className=\"flex items-center justify-between\">\r\n                <div className=\"flex items-center space-x-3\">\r\n                  <span className=\"text-sm font-medium text-indigo-900\">\r\n                    {selectedOrders.length} order{selectedOrders.length !== 1 ? 's' : ''} selected\r\n                  </span>\r\n                </div>\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <button\r\n                    onClick={() => handleBulkStatusUpdate('confirmed')}\r\n                    className=\"px-3 py-1 bg-green-100 text-green-800 rounded-md hover:bg-green-200 text-sm\"\r\n                  >\r\n                    Confirm\r\n                  </button>\r\n                  <button\r\n                    onClick={() => handleBulkStatusUpdate('shipped')}\r\n                    className=\"px-3 py-1 bg-blue-100 text-blue-800 rounded-md hover:bg-blue-200 text-sm\"\r\n                  >\r\n                    Ship\r\n                  </button>\r\n                  <button\r\n                    onClick={() => handleBulkStatusUpdate('cancelled')}\r\n                    className=\"px-3 py-1 bg-red-100 text-red-800 rounded-md hover:bg-red-200 text-sm\"\r\n                  >\r\n                    Cancel\r\n                  </button>\r\n                  <button\r\n                    onClick={handleBulkDelete}\r\n                    className=\"px-3 py-1 bg-red-100 text-red-800 rounded-md hover:bg-red-200 text-sm\"\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                  <button\r\n                    onClick={() => setSelectedOrders([])}\r\n                    className=\"px-3 py-1 bg-gray-100 text-gray-800 rounded-md hover:bg-gray-200 text-sm\"\r\n                  >\r\n                    Clear\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </motion.div>\r\n          )}\r\n        </AnimatePresence>\r\n\r\n        {/* Enhanced Filters */}\r\n        <div className=\"bg-white rounded-xl shadow-sm border border-gray-100 p-6\">\r\n          <div className=\"flex items-center justify-between mb-4\">\r\n            <h3 className=\"text-lg font-medium text-gray-900\">Filters & Search</h3>\r\n          </div>\r\n\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Search Orders\r\n              </label>\r\n              <div className=\"relative\">\r\n                <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\r\n                <input\r\n                  type=\"text\"\r\n                  value={searchTerm}\r\n                  onChange={(e) => setSearchTerm(e.target.value)}\r\n                  placeholder=\"Search by order ID, customer...\"\r\n                  className=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Status\r\n              </label>\r\n              <select\r\n                value={statusFilter}\r\n                onChange={(e) => setStatusFilter(e.target.value)}\r\n                className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\r\n              >\r\n                <option value=\"all\">All Statuses</option>\r\n                <option value=\"pending\">Pending</option>\r\n                <option value=\"confirmed\">Confirmed</option>\r\n                <option value=\"shipped\">Shipped</option>\r\n                <option value=\"delivered\">Delivered</option>\r\n                <option value=\"cancelled\">Cancelled</option>\r\n              </select>\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Date Range\r\n              </label>\r\n              <div className=\"flex space-x-2\">\r\n                <input\r\n                  type=\"date\"\r\n                  value={dateRange.start}\r\n                  onChange={(e) => setDateRange(prev => ({ ...prev, start: e.target.value }))}\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\r\n                />\r\n                <input\r\n                  type=\"date\"\r\n                  value={dateRange.end}\r\n                  onChange={(e) => setDateRange(prev => ({ ...prev, end: e.target.value }))}\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Amount Range\r\n              </label>\r\n              <div className=\"flex space-x-2\">\r\n                <input\r\n                  type=\"number\"\r\n                  value={amountRange.min}\r\n                  onChange={(e) => setAmountRange(prev => ({ ...prev, min: Number(e.target.value) }))}\r\n                  placeholder=\"Min\"\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\r\n                />\r\n                <input\r\n                  type=\"number\"\r\n                  value={amountRange.max}\r\n                  onChange={(e) => setAmountRange(prev => ({ ...prev, max: Number(e.target.value) }))}\r\n                  placeholder=\"Max\"\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Filter Summary */}\r\n          {(searchTerm || statusFilter !== 'all' || dateRange.start || dateRange.end || amountRange.min > 0 || amountRange.max < 10000) && (\r\n            <div className=\"mt-4 pt-4 border-t border-gray-200\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <span className=\"text-sm text-gray-600\">\r\n                  Showing {filteredOrders.length} of {orders.length} orders\r\n                </span>\r\n                <button\r\n                  onClick={() => {\r\n                    setSearchTerm('');\r\n                    setStatusFilter('all');\r\n                    setDateRange({ start: '', end: '' });\r\n                    setAmountRange({ min: 0, max: 10000 });\r\n                    setCustomerFilter('');\r\n                  }}\r\n                  className=\"text-sm text-indigo-600 hover:text-indigo-800\"\r\n                >\r\n                  Clear all filters\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Orders Table */}\r\n        {filteredOrders.length === 0 ? (\r\n          <EmptyState\r\n            icon={<Package className=\"h-24 w-24\" />}\r\n            title=\"No orders found\"\r\n            description=\"No orders match your current filters. Try adjusting your search criteria.\"\r\n          />\r\n        ) : (\r\n          <div className=\"bg-white rounded-xl shadow-sm border border-gray-100 overflow-hidden\">\r\n            <ResponsiveTable\r\n              columns={tableColumns}\r\n              data={filteredOrders}\r\n              loading={loading}\r\n              emptyMessage=\"No orders found\"\r\n              onRowClick={(record) => {\r\n                setSelectedOrder(record);\r\n                setIsOrderDetailOpen(true);\r\n              }}\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        {/* Order Details Modal */}\r\n        <Modal\r\n          isOpen={isOrderDetailOpen}\r\n          onClose={() => {\r\n            setIsOrderDetailOpen(false);\r\n            setSelectedOrder(null);\r\n          }}\r\n          title={selectedOrder ? `Order #${selectedOrder.id.slice(0, 8)}` : 'Order Details'}\r\n          size=\"xl\"\r\n        >\r\n          {selectedOrder && (\r\n            <div className=\"space-y-6\">\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n                <div>\r\n                  <h4 className=\"text-lg font-semibold text-gray-900 flex items-center\">\r\n                    <User className=\"h-5 w-5 mr-2 text-indigo-600\" />\r\n                    Customer Information\r\n                  </h4>\r\n                  <div className=\"mt-3 space-y-3\">\r\n                    <div className=\"flex justify-between\">\r\n                      <span className=\"text-gray-600\">Name:</span>\r\n                      <span className=\"font-medium\">{selectedOrder.profiles.name}</span>\r\n                    </div>\r\n                    <div className=\"flex justify-between\">\r\n                      <span className=\"text-gray-600\">Email:</span>\r\n                      <span className=\"font-medium\">{selectedOrder.profiles.email}</span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <h4 className=\"text-lg font-semibold text-gray-900 flex items-center\">\r\n                    <Package className=\"h-5 w-5 mr-2 text-indigo-600\" />\r\n                    Order Information\r\n                  </h4>\r\n                  <div className=\"mt-3 space-y-3\">\r\n                    <div className=\"flex justify-between\">\r\n                      <span className=\"text-gray-600\">Order Date:</span>\r\n                      <span className=\"font-medium\">{formatDate(selectedOrder.created_at)}</span>\r\n                    </div>\r\n                    <div className=\"flex justify-between\">\r\n                      <span className=\"text-gray-600\">Status:</span>\r\n                      <span className={`inline-flex items-center space-x-1 px-2.5 py-0.5 rounded-full text-xs font-medium ${getStatusColor(selectedOrder.status)}`}>\r\n                        {getStatusIcon(selectedOrder.status)}\r\n                        <span className=\"capitalize\">{selectedOrder.status}</span>\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"flex justify-between\">\r\n                      <span className=\"text-gray-600\">Total:</span>\r\n                      <span className=\"font-medium text-lg\">{formatCurrency(selectedOrder.total)}</span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"mt-6\">\r\n                <h4 className=\"text-lg font-semibold text-gray-900 mb-4\">Order Items</h4>\r\n                <div className=\"space-y-3\">\r\n                  {selectedOrder.order_items.map((item) => (\r\n                    <div key={item.id} className=\"flex items-center p-3 bg-gray-50 rounded-lg\">\r\n                      <img\r\n                        src={item.products.image || '/placeholder-image.jpg'}\r\n                        alt={item.products.name}\r\n                        className=\"h-16 w-16 rounded-lg object-cover border border-gray-200\"\r\n                        onError={(e) => {\r\n                          (e.target as HTMLImageElement).src = '/placeholder-image.jpg';\r\n                        }}\r\n                      />\r\n                      <div className=\"ml-4 flex-1\">\r\n                        <h5 className=\"font-medium text-gray-900\">{item.products.name}</h5>\r\n                        <p className=\"text-gray-600\">Quantity: {item.quantity}</p>\r\n                      </div>\r\n                      <div className=\"text-right\">\r\n                        <p className=\"font-medium text-gray-900\">{formatCurrency(item.price * item.quantity)}</p>\r\n                        <p className=\"text-gray-600 text-sm\">{formatCurrency(item.price)} each</p>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </Modal>\r\n\r\n        {/* Edit Order Modal */}\r\n        <Modal\r\n          isOpen={isEditOrderOpen}\r\n          onClose={() => {\r\n            setIsEditOrderOpen(false);\r\n            setSelectedOrder(null);\r\n          }}\r\n          title={selectedOrder ? `Edit Order #${selectedOrder.id.slice(0, 8)}` : 'Edit Order'}\r\n          size=\"lg\"\r\n        >\r\n          {selectedOrder && (\r\n            <div className=\"space-y-4\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Order Status\r\n                </label>\r\n                <select\r\n                  value={selectedOrder.status}\r\n                  onChange={(e) => updateOrderStatus(selectedOrder.id, e.target.value)}\r\n                  className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\r\n                >\r\n                  <option value=\"pending\">Pending</option>\r\n                  <option value=\"confirmed\">Confirmed</option>\r\n                  <option value=\"shipped\">Shipped</option>\r\n                  <option value=\"delivered\">Delivered</option>\r\n                  <option value=\"cancelled\">Cancelled</option>\r\n                </select>\r\n              </div>\r\n\r\n              <div className=\"flex justify-end space-x-3 pt-4\">\r\n                <button\r\n                  onClick={() => setIsEditOrderOpen(false)}\r\n                  className=\"px-4 py-2 border border-gray-300 rounded-lg text-gray-700 hover:bg-gray-50\"\r\n                >\r\n                  Cancel\r\n                </button>\r\n                <button\r\n                  onClick={() => setIsEditOrderOpen(false)}\r\n                  className=\"px-4 py-2 bg-indigo-600 text-white rounded-lg hover:bg-indigo-700\"\r\n                >\r\n                  Save Changes\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </Modal>\r\n      </div>\r\n    </AdminErrorBoundary>\r\n  );\r\n};","import React, { useState, useMemo, useEffect } from 'react';\r\nimport { useProducts } from '../../../contexts/ProductContext';\r\nimport { useNotification } from '../../../contexts/NotificationContext';\r\nimport { Category } from '../../../types';\r\nimport { LoadingSpinner } from '../../Common/LoadingSpinner';\r\nimport { Modal } from '../../Common/Modal';\r\nimport { ImageUpload } from '../../Common/ImageUpload';\r\nimport { StorageService } from '../../../services/storageService';\r\nimport { Edit, Trash2, Plus, Package, Image, Search, Filter, Download, RefreshCw, CheckSquare, Square, Eye, Copy, SortAsc, SortDesc, FolderTree, Tag } from 'lucide-react';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { ResponsiveTable } from '../../Common/ResponsiveTable';\r\nimport { AdminErrorBoundary } from '../../Common/AdminErrorBoundary';\r\nimport { AdminLoadingState, EmptyState } from '../../Common/EnhancedLoadingStates';\r\n\r\nexport const CategoryManagement: React.FC = () => {\r\n  const { categories, addCategory, updateCategory, deleteCategory, loading } = useProducts();\r\n  const { showNotification } = useNotification();\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [editingCategory, setEditingCategory] = useState<Category | null>(null);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [formData, setFormData] = useState<Omit<Category, 'id' | 'productCount' | 'createdAt' | 'updatedAt'>>({\r\n    name: '',\r\n    slug: '',\r\n    description: '',\r\n    image: '',\r\n    isActive: true,\r\n    sortOrder: 0\r\n  });\r\n  const [imagePath, setImagePath] = useState<string>('');\r\n\r\n  // Enhanced state for bulk operations and advanced filtering\r\n  const [selectedCategories, setSelectedCategories] = useState<string[]>([]);\r\n  const [sortBy, setSortBy] = useState<'name' | 'productCount' | 'sortOrder' | 'createdAt'>('name');\r\n  const [sortOrder, setSortOrder] = useState<'asc' | 'desc'>('asc');\r\n  const [statusFilter, setStatusFilter] = useState<'all' | 'active' | 'inactive'>('all');\r\n  const [viewMode, setViewMode] = useState<'table' | 'grid' | 'hierarchy'>('table');\r\n  const [refreshing, setRefreshing] = useState(false);\r\n  const [isExporting, setIsExporting] = useState(false);\r\n  const [showHierarchy, setShowHierarchy] = useState(false);\r\n\r\n  // Initialize storage bucket on component mount\r\n  useEffect(() => {\r\n    const initStorage = async () => {\r\n      try {\r\n        await StorageService.initializeBucket();\r\n      } catch (error) {\r\n        console.error('Failed to initialize storage bucket:', error);\r\n      }\r\n    };\r\n    initStorage();\r\n  }, []);\r\n\r\n  // Enhanced filtering and sorting logic\r\n  const filteredCategories = useMemo(() => {\r\n    const filtered = categories.filter(category => {\r\n      const matchesSearch =\r\n        category.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        (category.description && category.description.toLowerCase().includes(searchTerm.toLowerCase()));\r\n\r\n      const matchesStatus =\r\n        statusFilter === 'all' ||\r\n        (statusFilter === 'active' && category.isActive) ||\r\n        (statusFilter === 'inactive' && !category.isActive);\r\n\r\n      return matchesSearch && matchesStatus;\r\n    });\r\n\r\n    // Sorting\r\n    filtered.sort((a, b) => {\r\n      let aValue: any, bValue: any;\r\n\r\n      switch (sortBy) {\r\n        case 'name':\r\n          aValue = a.name.toLowerCase();\r\n          bValue = b.name.toLowerCase();\r\n          break;\r\n        case 'productCount':\r\n          aValue = a.productCount || 0;\r\n          bValue = b.productCount || 0;\r\n          break;\r\n        case 'sortOrder':\r\n          aValue = a.sortOrder || 0;\r\n          bValue = b.sortOrder || 0;\r\n          break;\r\n        case 'createdAt':\r\n          aValue = new Date(a.createdAt || 0).getTime();\r\n          bValue = new Date(b.createdAt || 0).getTime();\r\n          break;\r\n        default:\r\n          return 0;\r\n      }\r\n\r\n      if (aValue < bValue) return sortOrder === 'asc' ? -1 : 1;\r\n      if (aValue > bValue) return sortOrder === 'asc' ? 1 : -1;\r\n      return 0;\r\n    });\r\n\r\n    return filtered;\r\n  }, [categories, searchTerm, statusFilter, sortBy, sortOrder]);\r\n\r\n  const handleAddCategory = () => {\r\n    setEditingCategory(null);\r\n    setFormData({\r\n      name: '',\r\n      slug: '',\r\n      description: '',\r\n      image: '',\r\n      isActive: true,\r\n      sortOrder: 0\r\n    });\r\n    setImagePath('');\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const handleEditCategory = (category: Category) => {\r\n    setEditingCategory(category);\r\n    setFormData({\r\n      name: category.name,\r\n      slug: category.slug || '',\r\n      description: category.description || '',\r\n      image: category.image,\r\n      isActive: category.isActive || true,\r\n      sortOrder: category.sortOrder || 0\r\n    });\r\n    setImagePath(''); // Reset image path for editing\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const handleDeleteCategory = async (category: Category) => {\r\n    if (category.productCount && category.productCount > 0) {\r\n      showNotification({\r\n        type: 'error',\r\n        title: 'Cannot Delete Category',\r\n        message: `This category has ${category.productCount} products. Please move or delete them first.`\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (window.confirm(`Are you sure you want to delete \"${category.name}\"? This action cannot be undone.`)) {\r\n      try {\r\n        await deleteCategory(category.id);\r\n        showNotification({\r\n          type: 'success',\r\n          title: 'Category Deleted',\r\n          message: `${category.name} has been deleted successfully.`\r\n        });\r\n      } catch (error) {\r\n        showNotification({\r\n          type: 'error',\r\n          title: 'Deletion Failed',\r\n          message: `Failed to delete category: ${error instanceof Error ? error.message : 'Unknown error'}`\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  // Bulk operations\r\n  const handleSelectCategory = (categoryId: string) => {\r\n    setSelectedCategories(prev =>\r\n      prev.includes(categoryId)\r\n        ? prev.filter(id => id !== categoryId)\r\n        : [...prev, categoryId]\r\n    );\r\n  };\r\n\r\n  const handleSelectAll = () => {\r\n    if (selectedCategories.length === filteredCategories.length) {\r\n      setSelectedCategories([]);\r\n    } else {\r\n      setSelectedCategories(filteredCategories.map(c => c.id));\r\n    }\r\n  };\r\n\r\n  const handleBulkDelete = async () => {\r\n    if (selectedCategories.length === 0) return;\r\n\r\n    // Check if any selected categories have products\r\n    const categoriesWithProducts = filteredCategories.filter(cat =>\r\n      selectedCategories.includes(cat.id) && cat.productCount && cat.productCount > 0\r\n    );\r\n\r\n    if (categoriesWithProducts.length > 0) {\r\n      showNotification({\r\n        type: 'error',\r\n        title: 'Cannot Delete Categories',\r\n        message: `${categoriesWithProducts.length} categories have products. Please move or delete products first.`\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (window.confirm(`Are you sure you want to delete ${selectedCategories.length} categories? This action cannot be undone.`)) {\r\n      try {\r\n        for (const categoryId of selectedCategories) {\r\n          await deleteCategory(categoryId);\r\n        }\r\n        setSelectedCategories([]);\r\n        showNotification({\r\n          type: 'success',\r\n          title: 'Categories Deleted',\r\n          message: `${selectedCategories.length} categories have been deleted successfully.`\r\n        });\r\n      } catch (error) {\r\n        showNotification({\r\n          type: 'error',\r\n          title: 'Deletion Failed',\r\n          message: 'Failed to delete some categories. Please try again.'\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleBulkStatusUpdate = async (isActive: boolean) => {\r\n    if (selectedCategories.length === 0) return;\r\n\r\n    try {\r\n      for (const categoryId of selectedCategories) {\r\n        const category = categories.find(c => c.id === categoryId);\r\n        if (category) {\r\n          await updateCategory({ ...category, isActive });\r\n        }\r\n      }\r\n      setSelectedCategories([]);\r\n      showNotification({\r\n        type: 'success',\r\n        title: 'Categories Updated',\r\n        message: `${selectedCategories.length} categories have been ${isActive ? 'activated' : 'deactivated'}.`\r\n      });\r\n    } catch (error) {\r\n      showNotification({\r\n        type: 'error',\r\n        title: 'Update Failed',\r\n        message: 'Failed to update categories. Please try again.'\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleRefresh = async () => {\r\n    setRefreshing(true);\r\n    try {\r\n      // This would trigger a refresh in the product context\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      showNotification({\r\n        type: 'success',\r\n        title: 'Refreshed',\r\n        message: 'Category data has been refreshed.'\r\n      });\r\n    } catch (error) {\r\n      showNotification({\r\n        type: 'error',\r\n        title: 'Refresh Failed',\r\n        message: 'Failed to refresh data. Please try again.'\r\n      });\r\n    } finally {\r\n      setRefreshing(false);\r\n    }\r\n  };\r\n\r\n  const handleExport = async () => {\r\n    setIsExporting(true);\r\n    try {\r\n      // Mock export functionality\r\n      await new Promise(resolve => setTimeout(resolve, 2000));\r\n      showNotification({\r\n        type: 'success',\r\n        title: 'Export Complete',\r\n        message: 'Categories have been exported successfully.'\r\n      });\r\n    } catch (error) {\r\n      showNotification({\r\n        type: 'error',\r\n        title: 'Export Failed',\r\n        message: 'Failed to export categories. Please try again.'\r\n      });\r\n    } finally {\r\n      setIsExporting(false);\r\n    }\r\n  };\r\n\r\n  const toggleSort = (field: typeof sortBy) => {\r\n    if (sortBy === field) {\r\n      setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc');\r\n    } else {\r\n      setSortBy(field);\r\n      setSortOrder('asc');\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      if (editingCategory) {\r\n        // Update existing category - map form fields to expected API fields\r\n        await updateCategory({\r\n          ...editingCategory,\r\n          name: formData.name,\r\n          description: formData.description,\r\n          imageUrl: formData.image, // Map 'image' to 'imageUrl'\r\n          isActive: formData.isActive\r\n        });\r\n\r\n        showNotification({\r\n          type: 'success',\r\n          title: 'Category Updated',\r\n          message: `${formData.name} has been updated successfully.`\r\n        });\r\n      } else {\r\n        // Add new category - map form fields to expected API fields\r\n        await addCategory({\r\n          name: formData.name,\r\n          description: formData.description,\r\n          imageUrl: formData.image // Map 'image' to 'imageUrl'\r\n        });\r\n        showNotification({\r\n          type: 'success',\r\n          title: 'Category Added',\r\n          message: `${formData.name} has been added successfully.`\r\n        });\r\n      }\r\n\r\n      setIsModalOpen(false);\r\n    } catch (error) {\r\n      showNotification({\r\n        type: 'error',\r\n        title: 'Operation Failed',\r\n        message: `Failed to ${editingCategory ? 'update' : 'add'} category: ${error instanceof Error ? error.message : 'Unknown error'}`\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {\r\n    const { name, value, type } = e.target;\r\n\r\n    // Handle checkbox separately\r\n    if (type === 'checkbox' && e.target instanceof HTMLInputElement) {\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        [name]: (e.target as HTMLInputElement).checked\r\n      }));\r\n    } else {\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        [name]: value\r\n      }));\r\n    }\r\n  };\r\n\r\n  // Enhanced table columns with bulk selection\r\n  const tableColumns = [\r\n    {\r\n      key: 'select',\r\n      title: (\r\n        <button\r\n          onClick={handleSelectAll}\r\n          className=\"flex items-center justify-center w-full\"\r\n        >\r\n          {selectedCategories.length === filteredCategories.length && filteredCategories.length > 0 ? (\r\n            <CheckSquare className=\"h-4 w-4 text-indigo-600\" />\r\n          ) : (\r\n            <Square className=\"h-4 w-4 text-gray-400\" />\r\n          )}\r\n        </button>\r\n      ),\r\n      width: 50,\r\n      render: (value: any, record: Category) => (\r\n        <button\r\n          onClick={(e) => {\r\n            e.stopPropagation();\r\n            handleSelectCategory(record.id);\r\n          }}\r\n          className=\"flex items-center justify-center w-full\"\r\n        >\r\n          {selectedCategories.includes(record.id) ? (\r\n            <CheckSquare className=\"h-4 w-4 text-indigo-600\" />\r\n          ) : (\r\n            <Square className=\"h-4 w-4 text-gray-400\" />\r\n          )}\r\n        </button>\r\n      )\r\n    },\r\n    {\r\n      key: 'category',\r\n      title: (\r\n        <button\r\n          onClick={() => toggleSort('name')}\r\n          className=\"flex items-center space-x-1 hover:text-indigo-600\"\r\n        >\r\n          <span>Category</span>\r\n          {sortBy === 'name' && (\r\n            sortOrder === 'asc' ? <SortAsc className=\"h-4 w-4\" /> : <SortDesc className=\"h-4 w-4\" />\r\n          )}\r\n        </button>\r\n      ),\r\n      minWidth: 200,\r\n      render: (value: any, record: Category) => (\r\n        <div className=\"flex items-center\">\r\n          {record.image ? (\r\n            <img\r\n              src={record.image}\r\n              alt={record.name}\r\n              className=\"h-12 w-12 rounded-lg object-cover border border-gray-200\"\r\n              onError={(e) => {\r\n                (e.target as HTMLImageElement).src = '/placeholder-image.jpg';\r\n              }}\r\n            />\r\n          ) : (\r\n            <div className=\"h-12 w-12 rounded-lg bg-gray-100 flex items-center justify-center border border-gray-200\">\r\n              <Tag className=\"h-6 w-6 text-gray-400\" />\r\n            </div>\r\n          )}\r\n          <div className=\"ml-4\">\r\n            <div className=\"text-sm font-medium text-gray-900\">\r\n              {record.name}\r\n            </div>\r\n            {record.slug && (\r\n              <div className=\"text-sm text-gray-500\">\r\n                /{record.slug}\r\n              </div>\r\n            )}\r\n            {record.description && (\r\n              <div className=\"text-xs text-gray-400 mt-1 max-w-xs truncate\">\r\n                {record.description}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      key: 'productCount',\r\n      title: (\r\n        <button\r\n          onClick={() => toggleSort('productCount')}\r\n          className=\"flex items-center space-x-1 hover:text-indigo-600\"\r\n        >\r\n          <span>Products</span>\r\n          {sortBy === 'productCount' && (\r\n            sortOrder === 'asc' ? <SortAsc className=\"h-4 w-4\" /> : <SortDesc className=\"h-4 w-4\" />\r\n          )}\r\n        </button>\r\n      ),\r\n      width: 120,\r\n      render: (value: number, record: Category) => (\r\n        <div className=\"flex items-center space-x-2\">\r\n          <Package className=\"h-4 w-4 text-blue-600\" />\r\n          <span className=\"inline-flex px-2 py-1 text-xs font-semibold rounded-full bg-blue-100 text-blue-800\">\r\n            {value || 0} products\r\n          </span>\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      key: 'sortOrder',\r\n      title: (\r\n        <button\r\n          onClick={() => toggleSort('sortOrder')}\r\n          className=\"flex items-center space-x-1 hover:text-indigo-600\"\r\n        >\r\n          <span>Order</span>\r\n          {sortBy === 'sortOrder' && (\r\n            sortOrder === 'asc' ? <SortAsc className=\"h-4 w-4\" /> : <SortDesc className=\"h-4 w-4\" />\r\n          )}\r\n        </button>\r\n      ),\r\n      width: 80,\r\n      render: (value: number) => (\r\n        <span className=\"text-sm text-gray-600 font-mono\">\r\n          {value || 0}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      key: 'isActive',\r\n      title: 'Status',\r\n      width: 100,\r\n      render: (value: boolean, record: Category) => (\r\n        <div className=\"flex items-center space-x-2\">\r\n          {value ? (\r\n            <span className=\"inline-flex items-center px-2 py-1 text-xs font-semibold rounded-full bg-green-100 text-green-800\">\r\n              <div className=\"w-2 h-2 bg-green-600 rounded-full mr-1\"></div>\r\n              Active\r\n            </span>\r\n          ) : (\r\n            <span className=\"inline-flex items-center px-2 py-1 text-xs font-semibold rounded-full bg-red-100 text-red-800\">\r\n              <div className=\"w-2 h-2 bg-red-600 rounded-full mr-1\"></div>\r\n              Inactive\r\n            </span>\r\n          )}\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      key: 'actions',\r\n      title: 'Actions',\r\n      width: 150,\r\n      render: (value: any, record: Category) => (\r\n        <div className=\"flex items-center space-x-1\">\r\n          <button\r\n            onClick={(e) => {\r\n              e.stopPropagation();\r\n              handleEditCategory(record);\r\n            }}\r\n            className=\"text-indigo-600 hover:text-indigo-900 p-1 rounded hover:bg-indigo-50\"\r\n            title=\"Edit Category\"\r\n          >\r\n            <Edit className=\"h-4 w-4\" />\r\n          </button>\r\n\r\n          <button\r\n            onClick={(e) => {\r\n              e.stopPropagation();\r\n              // Handle view category details\r\n            }}\r\n            className=\"text-blue-600 hover:text-blue-900 p-1 rounded hover:bg-blue-50\"\r\n            title=\"View Details\"\r\n          >\r\n            <Eye className=\"h-4 w-4\" />\r\n          </button>\r\n\r\n          <button\r\n            onClick={(e) => {\r\n              e.stopPropagation();\r\n              // Handle duplicate category\r\n            }}\r\n            className=\"text-green-600 hover:text-green-900 p-1 rounded hover:bg-green-50\"\r\n            title=\"Duplicate Category\"\r\n          >\r\n            <Copy className=\"h-4 w-4\" />\r\n          </button>\r\n\r\n          <button\r\n            onClick={(e) => {\r\n              e.stopPropagation();\r\n              handleDeleteCategory(record);\r\n            }}\r\n            className={`p-1 rounded hover:bg-red-50 ${record.productCount && record.productCount > 0\r\n              ? 'text-gray-400 cursor-not-allowed'\r\n              : 'text-red-600 hover:text-red-900'\r\n              }`}\r\n            title={record.productCount && record.productCount > 0 ? 'Cannot delete - has products' : 'Delete Category'}\r\n            disabled={record.productCount && record.productCount > 0}\r\n          >\r\n            <Trash2 className=\"h-4 w-4\" />\r\n          </button>\r\n        </div>\r\n      )\r\n    }\r\n  ];\r\n\r\n  if (loading) {\r\n    return <AdminLoadingState type=\"products\" message=\"Loading category data...\" />;\r\n  }\r\n\r\n  return (\r\n    <AdminErrorBoundary>\r\n      <div className=\"space-y-6\">\r\n        {/* Enhanced Header */}\r\n        <div className=\"flex flex-col lg:flex-row lg:items-center lg:justify-between\">\r\n          <div>\r\n            <h2 className=\"text-2xl font-bold text-gray-900\">Category Management</h2>\r\n            <p className=\"text-gray-600 mt-1\">\r\n              Manage product categories ({filteredCategories.length} of {categories.length} categories)\r\n            </p>\r\n          </div>\r\n          <div className=\"flex items-center space-x-3 mt-4 lg:mt-0\">\r\n            <button\r\n              onClick={handleRefresh}\r\n              disabled={refreshing}\r\n              className=\"flex items-center space-x-2 px-3 py-2 border border-gray-300 rounded-lg hover:bg-gray-50 disabled:opacity-50\"\r\n            >\r\n              <RefreshCw className={`h-4 w-4 ${refreshing ? 'animate-spin' : ''}`} />\r\n              <span>Refresh</span>\r\n            </button>\r\n            <button\r\n              onClick={handleExport}\r\n              disabled={isExporting}\r\n              className=\"flex items-center space-x-2 px-3 py-2 border border-gray-300 rounded-lg hover:bg-gray-50 disabled:opacity-50\"\r\n            >\r\n              <Download className=\"h-4 w-4\" />\r\n              <span>{isExporting ? 'Exporting...' : 'Export'}</span>\r\n            </button>\r\n            <motion.button\r\n              onClick={handleAddCategory}\r\n              className=\"btn-primary flex items-center space-x-2\"\r\n              whileHover={{ scale: 1.02 }}\r\n              whileTap={{ scale: 0.98 }}\r\n            >\r\n              <Plus className=\"h-4 w-4\" />\r\n              <span>Add Category</span>\r\n            </motion.button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Bulk Actions Bar */}\r\n        <AnimatePresence>\r\n          {selectedCategories.length > 0 && (\r\n            <motion.div\r\n              initial={{ opacity: 0, y: -20 }}\r\n              animate={{ opacity: 1, y: 0 }}\r\n              exit={{ opacity: 0, y: -20 }}\r\n              className=\"bg-indigo-50 border border-indigo-200 rounded-lg p-4\"\r\n            >\r\n              <div className=\"flex items-center justify-between\">\r\n                <div className=\"flex items-center space-x-3\">\r\n                  <span className=\"text-sm font-medium text-indigo-900\">\r\n                    {selectedCategories.length} categor{selectedCategories.length !== 1 ? 'ies' : 'y'} selected\r\n                  </span>\r\n                </div>\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <button\r\n                    onClick={() => handleBulkStatusUpdate(true)}\r\n                    className=\"px-3 py-1 bg-green-100 text-green-800 rounded-md hover:bg-green-200 text-sm\"\r\n                  >\r\n                    Activate\r\n                  </button>\r\n                  <button\r\n                    onClick={() => handleBulkStatusUpdate(false)}\r\n                    className=\"px-3 py-1 bg-yellow-100 text-yellow-800 rounded-md hover:bg-yellow-200 text-sm\"\r\n                  >\r\n                    Deactivate\r\n                  </button>\r\n                  <button\r\n                    onClick={handleBulkDelete}\r\n                    className=\"px-3 py-1 bg-red-100 text-red-800 rounded-md hover:bg-red-200 text-sm\"\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                  <button\r\n                    onClick={() => setSelectedCategories([])}\r\n                    className=\"px-3 py-1 bg-gray-100 text-gray-800 rounded-md hover:bg-gray-200 text-sm\"\r\n                  >\r\n                    Clear\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </motion.div>\r\n          )}\r\n        </AnimatePresence>\r\n\r\n        {/* Enhanced Filters */}\r\n        <div className=\"bg-white rounded-xl shadow-sm border border-gray-100 p-6\">\r\n          <div className=\"flex items-center justify-between mb-4\">\r\n            <h3 className=\"text-lg font-medium text-gray-900\">Filters & Search</h3>\r\n            <div className=\"flex items-center space-x-2\">\r\n              <button\r\n                onClick={() => setViewMode(viewMode === 'table' ? 'grid' : 'table')}\r\n                className=\"px-3 py-1 border border-gray-300 rounded-md hover:bg-gray-50 text-sm\"\r\n              >\r\n                {viewMode === 'table' ? 'Grid View' : 'Table View'}\r\n              </button>\r\n              <button\r\n                onClick={() => setShowHierarchy(!showHierarchy)}\r\n                className=\"px-3 py-1 border border-gray-300 rounded-md hover:bg-gray-50 text-sm flex items-center space-x-1\"\r\n              >\r\n                <FolderTree className=\"h-4 w-4\" />\r\n                <span>Hierarchy</span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Search Categories\r\n              </label>\r\n              <div className=\"relative\">\r\n                <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\r\n                <input\r\n                  type=\"text\"\r\n                  value={searchTerm}\r\n                  onChange={(e) => setSearchTerm(e.target.value)}\r\n                  placeholder=\"Search by name or description...\"\r\n                  className=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Status\r\n              </label>\r\n              <select\r\n                value={statusFilter}\r\n                onChange={(e) => setStatusFilter(e.target.value as any)}\r\n                className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\r\n              >\r\n                <option value=\"all\">All Categories</option>\r\n                <option value=\"active\">Active Only</option>\r\n                <option value=\"inactive\">Inactive Only</option>\r\n              </select>\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Sort By\r\n              </label>\r\n              <select\r\n                value={`${sortBy}-${sortOrder}`}\r\n                onChange={(e) => {\r\n                  const [field, order] = e.target.value.split('-');\r\n                  setSortBy(field as any);\r\n                  setSortOrder(order as any);\r\n                }}\r\n                className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\r\n              >\r\n                <option value=\"name-asc\">Name (A-Z)</option>\r\n                <option value=\"name-desc\">Name (Z-A)</option>\r\n                <option value=\"productCount-desc\">Most Products</option>\r\n                <option value=\"productCount-asc\">Least Products</option>\r\n                <option value=\"sortOrder-asc\">Sort Order</option>\r\n                <option value=\"createdAt-desc\">Newest First</option>\r\n                <option value=\"createdAt-asc\">Oldest First</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Filter Summary */}\r\n          {(searchTerm || statusFilter !== 'all') && (\r\n            <div className=\"mt-4 pt-4 border-t border-gray-200\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <span className=\"text-sm text-gray-600\">\r\n                  Showing {filteredCategories.length} of {categories.length} categories\r\n                </span>\r\n                <button\r\n                  onClick={() => {\r\n                    setSearchTerm('');\r\n                    setStatusFilter('all');\r\n                  }}\r\n                  className=\"text-sm text-indigo-600 hover:text-indigo-800\"\r\n                >\r\n                  Clear all filters\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Categories Display */}\r\n        {filteredCategories.length === 0 ? (\r\n          <EmptyState\r\n            icon={<Tag className=\"h-24 w-24\" />}\r\n            title=\"No categories found\"\r\n            description=\"No categories match your current filters. Try adjusting your search criteria or add a new category.\"\r\n            action={{\r\n              label: \"Add Category\",\r\n              onClick: handleAddCategory\r\n            }}\r\n          />\r\n        ) : viewMode === 'table' ? (\r\n          <div className=\"bg-white rounded-xl shadow-sm border border-gray-100 overflow-hidden\">\r\n            <ResponsiveTable\r\n              columns={tableColumns}\r\n              data={filteredCategories}\r\n              loading={loading}\r\n              emptyMessage=\"No categories found\"\r\n              onRowClick={handleEditCategory}\r\n            />\r\n          </div>\r\n        ) : (\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\r\n            {filteredCategories.map((category) => (\r\n              <motion.div\r\n                key={category.id}\r\n                layout\r\n                initial={{ opacity: 0, scale: 0.9 }}\r\n                animate={{ opacity: 1, scale: 1 }}\r\n                exit={{ opacity: 0, scale: 0.9 }}\r\n                className=\"bg-white rounded-xl shadow-sm border border-gray-100 overflow-hidden hover:shadow-md transition-shadow cursor-pointer\"\r\n                onClick={() => handleEditCategory(category)}\r\n              >\r\n                <div className=\"relative\">\r\n                  {category.image ? (\r\n                    <img\r\n                      src={category.image}\r\n                      alt={category.name}\r\n                      className=\"w-full h-32 object-cover\"\r\n                      onError={(e) => {\r\n                        (e.target as HTMLImageElement).src = '/placeholder-image.jpg';\r\n                      }}\r\n                    />\r\n                  ) : (\r\n                    <div className=\"w-full h-32 bg-gradient-to-br from-indigo-100 to-purple-100 flex items-center justify-center\">\r\n                      <Tag className=\"h-12 w-12 text-indigo-400\" />\r\n                    </div>\r\n                  )}\r\n\r\n                  <div className=\"absolute top-2 left-2\">\r\n                    <button\r\n                      onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        handleSelectCategory(category.id);\r\n                      }}\r\n                      className=\"p-1 bg-white rounded-md shadow-sm\"\r\n                    >\r\n                      {selectedCategories.includes(category.id) ? (\r\n                        <CheckSquare className=\"h-4 w-4 text-indigo-600\" />\r\n                      ) : (\r\n                        <Square className=\"h-4 w-4 text-gray-400\" />\r\n                      )}\r\n                    </button>\r\n                  </div>\r\n\r\n                  <div className=\"absolute top-2 right-2\">\r\n                    {category.isActive ? (\r\n                      <span className=\"inline-flex items-center px-2 py-1 text-xs font-semibold rounded-full bg-green-100 text-green-800\">\r\n                        <div className=\"w-2 h-2 bg-green-600 rounded-full mr-1\"></div>\r\n                        Active\r\n                      </span>\r\n                    ) : (\r\n                      <span className=\"inline-flex items-center px-2 py-1 text-xs font-semibold rounded-full bg-red-100 text-red-800\">\r\n                        <div className=\"w-2 h-2 bg-red-600 rounded-full mr-1\"></div>\r\n                        Inactive\r\n                      </span>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"p-4\">\r\n                  <h3 className=\"text-lg font-medium text-gray-900 mb-1 truncate\">\r\n                    {category.name}\r\n                  </h3>\r\n                  {category.description && (\r\n                    <p className=\"text-sm text-gray-500 mb-2 line-clamp-2\">\r\n                      {category.description}\r\n                    </p>\r\n                  )}\r\n\r\n                  <div className=\"flex items-center justify-between mb-3\">\r\n                    <div className=\"flex items-center space-x-2\">\r\n                      <Package className=\"h-4 w-4 text-blue-600\" />\r\n                      <span className=\"text-sm text-gray-600\">\r\n                        {category.productCount || 0} products\r\n                      </span>\r\n                    </div>\r\n                    <span className=\"text-xs text-gray-400\">\r\n                      Order: {category.sortOrder || 0}\r\n                    </span>\r\n                  </div>\r\n\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <span className=\"text-sm text-gray-500\">\r\n                      /{category.slug}\r\n                    </span>\r\n                    <div className=\"flex items-center space-x-1\">\r\n                      <button\r\n                        onClick={(e) => {\r\n                          e.stopPropagation();\r\n                          handleEditCategory(category);\r\n                        }}\r\n                        className=\"p-1 text-indigo-600 hover:text-indigo-900 rounded hover:bg-indigo-50\"\r\n                        title=\"Edit Category\"\r\n                      >\r\n                        <Edit className=\"h-4 w-4\" />\r\n                      </button>\r\n                      <button\r\n                        onClick={(e) => {\r\n                          e.stopPropagation();\r\n                          handleDeleteCategory(category);\r\n                        }}\r\n                        className={`p-1 rounded hover:bg-red-50 ${category.productCount && category.productCount > 0\r\n                          ? 'text-gray-400 cursor-not-allowed'\r\n                          : 'text-red-600 hover:text-red-900'\r\n                          }`}\r\n                        title={category.productCount && category.productCount > 0 ? 'Cannot delete - has products' : 'Delete Category'}\r\n                        disabled={category.productCount && category.productCount > 0}\r\n                      >\r\n                        <Trash2 className=\"h-4 w-4\" />\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </motion.div>\r\n            ))}\r\n          </div>\r\n        )}\r\n\r\n        {/* Category Form Modal */}\r\n        <Modal\r\n          isOpen={isModalOpen}\r\n          onClose={() => setIsModalOpen(false)}\r\n          title={editingCategory ? \"Edit Category\" : \"Add New Category\"}\r\n        >\r\n          <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                Name *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                value={formData.name}\r\n                onChange={handleInputChange}\r\n                required\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500\"\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                Slug\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"slug\"\r\n                value={formData.slug}\r\n                onChange={handleInputChange}\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500\"\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                Description\r\n              </label>\r\n              <textarea\r\n                name=\"description\"\r\n                value={formData.description}\r\n                onChange={handleInputChange}\r\n                rows={3}\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500\"\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Category Image\r\n              </label>\r\n              <ImageUpload\r\n                value={formData.image}\r\n                onChange={(url) => setFormData(prev => ({ ...prev, image: url }))}\r\n                onPathChange={setImagePath}\r\n                folder=\"categories\"\r\n                placeholder=\"Upload category image or enter URL\"\r\n                aspectRatio=\"landscape\"\r\n                maxWidth={400}\r\n                maxHeight={200}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                  Sort Order\r\n                </label>\r\n                <input\r\n                  type=\"number\"\r\n                  name=\"sortOrder\"\r\n                  value={formData.sortOrder}\r\n                  onChange={handleInputChange}\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"flex items-center\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  name=\"isActive\"\r\n                  checked={formData.isActive}\r\n                  onChange={handleInputChange}\r\n                  className=\"h-4 w-4 text-indigo-600 border-gray-300 rounded focus:ring-indigo-500\"\r\n                />\r\n                <label className=\"ml-2 block text-sm text-gray-900\">\r\n                  Active\r\n                </label>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"flex justify-end space-x-3 pt-4\">\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => setIsModalOpen(false)}\r\n                className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"px-4 py-2 text-sm font-medium text-white bg-indigo-600 border border-transparent rounded-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n              >\r\n                {editingCategory ? 'Update Category' : 'Add Category'}\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </Modal>\r\n      </div>\r\n    </AdminErrorBoundary>\r\n  );\r\n};","import React, { useState, useMemo, useEffect } from 'react';\r\nimport { useNotification } from '../../../contexts/NotificationContext';\r\nimport { useCollections } from '../../../contexts/CollectionContext';\r\nimport { Collection } from '../../../types';\r\nimport { LoadingSpinner } from '../../Common/LoadingSpinner';\r\nimport { Modal } from '../../Common/Modal';\r\nimport { ImageUpload } from '../../Common/ImageUpload';\r\nimport { StorageService } from '../../../services/storageService';\r\nimport { Plus, Search, Download, Edit, Trash2, Eye, Copy, RefreshCw, Calendar, Tag, Crown, Zap, Award, Sparkles, Gift, Star, ChevronDown, ChevronUp } from 'lucide-react';\r\n\ninterface CollectionManagementProps {\r\n  className?: string;\r\n}\r\n\r\nexport const CollectionManagement: React.FC<CollectionManagementProps> = ({ className = '' }) => {\r\n  const {\r\n    collections,\r\n    loading: contextLoading,\r\n    addCollection,\r\n    updateCollection,\r\n    deleteCollection,\r\n    refreshCollections\r\n  } = useCollections();\r\n  const [loading, setLoading] = useState(false);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [editingCollection, setEditingCollection] = useState<Collection | null>(null);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [statusFilter, setStatusFilter] = useState<string>('all');\r\n  const [typeFilter, setTypeFilter] = useState<string>('all');\r\n  const [sortBy, setSortBy] = useState<string>('name');\r\n  const [sortOrder, setSortOrder] = useState<'asc' | 'desc'>('asc');\r\n  const [refreshing, setRefreshing] = useState(false);\r\n  const [isExporting, setIsExporting] = useState(false);\r\n  const { showNotification } = useNotification();\r\n\r\n  // Form state\r\n  const [formData, setFormData] = useState<Omit<Collection, 'id' | 'productCount' | 'createdAt' | 'updatedAt'>>({\r\n    name: '',\r\n    slug: '',\r\n    description: '',\r\n    shortDescription: '',\r\n    image: '',\r\n    bannerImage: '',\r\n    type: 'modern',\r\n    status: 'active',\r\n    price: 0,\r\n    originalPrice: 0,\r\n    discount: 0,\r\n    productIds: [],\r\n    featured: false,\r\n    isExclusive: false,\r\n    sortOrder: 0,\r\n    tags: []\r\n  });\r\n  const [imagePath, setImagePath] = useState<string>('');\r\n  const [bannerImagePath, setBannerImagePath] = useState<string>('');\r\n\r\n  // Initialize storage bucket on component mount\r\n  useEffect(() => {\r\n    const initStorage = async () => {\r\n      try {\r\n        await StorageService.initializeBucket();\r\n      } catch (error) {\r\n        console.error('Failed to initialize storage bucket:', error);\r\n      }\r\n    };\r\n    initStorage();\r\n  }, []);\r\n\r\n  // Generate slug from name\r\n  useEffect(() => {\r\n    if (formData.name && !editingCollection) {\r\n      const slug = formData.name\r\n        .toLowerCase()\r\n        .replace(/[^a-z0-9]+/g, '-')\r\n        .replace(/(^-|-$)/g, '');\r\n      setFormData(prev => ({ ...prev, slug }));\r\n    }\r\n  }, [formData.name, editingCollection]);\r\n\r\n  // Calculate discount percentage\r\n  useEffect(() => {\r\n    if (formData.price && formData.originalPrice && formData.originalPrice > formData.price) {\r\n      const discount = Math.round(((formData.originalPrice - formData.price) / formData.originalPrice) * 100);\r\n      setFormData(prev => ({ ...prev, discount }));\r\n    } else {\r\n      setFormData(prev => ({ ...prev, discount: 0 }));\r\n    }\r\n  }, [formData.price, formData.originalPrice]);\r\n\r\n  // Filtered and sorted collections\r\n  const filteredCollections = useMemo(() => {\r\n    let filtered = collections.filter(collection => {\r\n      const matchesSearch = collection.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n                           collection.description?.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n                           collection.tags.some(tag => tag.toLowerCase().includes(searchTerm.toLowerCase()));\r\n      const matchesStatus = statusFilter === 'all' || collection.status === statusFilter;\r\n      const matchesType = typeFilter === 'all' || collection.type === typeFilter;\r\n      \r\n      return matchesSearch && matchesStatus && matchesType;\r\n    });\r\n\r\n    // Sort collections\r\n    filtered.sort((a, b) => {\r\n      let aValue: any, bValue: any;\r\n      \r\n      switch (sortBy) {\r\n        case 'name':\r\n          aValue = a.name.toLowerCase();\r\n          bValue = b.name.toLowerCase();\r\n          break;\r\n        case 'type':\r\n          aValue = a.type;\r\n          bValue = b.type;\r\n          break;\r\n        case 'status':\r\n          aValue = a.status;\r\n          bValue = b.status;\r\n          break;\r\n        case 'productCount':\r\n          aValue = a.productCount;\r\n          bValue = b.productCount;\r\n          break;\r\n        case 'price':\r\n          aValue = a.price || 0;\r\n          bValue = b.price || 0;\r\n          break;\r\n        case 'sortOrder':\r\n          aValue = a.sortOrder || 0;\r\n          bValue = b.sortOrder || 0;\r\n          break;\r\n        case 'createdAt':\r\n          aValue = a.createdAt?.getTime() || 0;\r\n          bValue = b.createdAt?.getTime() || 0;\r\n          break;\r\n        default:\r\n          aValue = a.name.toLowerCase();\r\n          bValue = b.name.toLowerCase();\r\n      }\r\n\r\n      if (aValue < bValue) return sortOrder === 'asc' ? -1 : 1;\r\n      if (aValue > bValue) return sortOrder === 'asc' ? 1 : -1;\r\n      return 0;\r\n    });\r\n\r\n    return filtered;\r\n  }, [collections, searchTerm, statusFilter, typeFilter, sortBy, sortOrder]);\r\n\r\n  const handleAddCollection = () => {\r\n    setEditingCollection(null);\r\n    setFormData({\r\n      name: '',\r\n      slug: '',\r\n      description: '',\r\n      shortDescription: '',\r\n      image: '',\r\n      bannerImage: '',\r\n      type: 'modern',\r\n      status: 'active',\r\n      price: 0,\r\n      originalPrice: 0,\r\n      discount: 0,\r\n      productIds: [],\r\n      featured: false,\r\n      isExclusive: false,\r\n      sortOrder: 0,\r\n      tags: []\r\n    });\r\n    setImagePath('');\r\n    setBannerImagePath('');\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const handleEditCollection = (collection: Collection) => {\r\n    setEditingCollection(collection);\r\n    setFormData({\r\n      name: collection.name,\r\n      slug: collection.slug || '',\r\n      description: collection.description || '',\r\n      shortDescription: collection.shortDescription || '',\r\n      image: collection.image,\r\n      bannerImage: collection.bannerImage || '',\r\n      type: collection.type,\r\n      status: collection.status,\r\n      price: collection.price || 0,\r\n      originalPrice: collection.originalPrice || 0,\r\n      discount: collection.discount || 0,\r\n      productIds: collection.productIds,\r\n      featured: collection.featured,\r\n      isExclusive: collection.isExclusive,\r\n      launchDate: collection.launchDate,\r\n      endDate: collection.endDate,\r\n      sortOrder: collection.sortOrder || 0,\r\n      tags: collection.tags\r\n    });\r\n    setImagePath(''); // Reset image path for editing\r\n    setBannerImagePath(''); // Reset banner image path for editing\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const handleDeleteCollection = async (id: string) => {\r\n    if (!window.confirm('Are you sure you want to delete this collection?')) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      await deleteCollection(id);\r\n    } catch (error) {\r\n      // Error handling is done in the context\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    if (!formData.name.trim()) {\r\n      showNotification({\r\n        type: 'error',\r\n        title: 'Validation Error',\r\n        message: 'Collection name is required.'\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n\r\n      if (editingCollection) {\r\n        // Update existing collection\r\n        await updateCollection(editingCollection.id, formData);\r\n      } else {\r\n        // Add new collection\r\n        await addCollection(formData);\r\n      }\r\n\r\n      setIsModalOpen(false);\r\n    } catch (error) {\r\n      // Error handling is done in the context\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {\r\n    const { name, value, type } = e.target;\r\n    \r\n    if (type === 'checkbox') {\r\n      const checked = (e.target as HTMLInputElement).checked;\r\n      setFormData(prev => ({ ...prev, [name]: checked }));\r\n    } else if (type === 'number') {\r\n      setFormData(prev => ({ ...prev, [name]: parseFloat(value) || 0 }));\r\n    } else {\r\n      setFormData(prev => ({ ...prev, [name]: value }));\r\n    }\r\n  };\r\n\r\n  const handleTagsChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const tags = e.target.value.split(',').map(tag => tag.trim()).filter(tag => tag);\r\n    setFormData(prev => ({ ...prev, tags }));\r\n  };\r\n\r\n  const handleRefresh = async () => {\r\n    setRefreshing(true);\r\n    try {\r\n      await refreshCollections();\r\n    } catch (error) {\r\n      // Error handling is done in the context\r\n    } finally {\r\n      setRefreshing(false);\r\n    }\r\n  };\r\n\r\n  const handleExport = async () => {\r\n    setIsExporting(true);\r\n    try {\r\n      // TODO: Implement actual export functionality\r\n      await new Promise(resolve => setTimeout(resolve, 2000));\r\n      showNotification({\r\n        type: 'success',\r\n        title: 'Export Complete',\r\n        message: 'Collections data has been exported successfully.'\r\n      });\r\n    } catch (error) {\r\n      showNotification({\r\n        type: 'error',\r\n        title: 'Export Failed',\r\n        message: 'Failed to export data. Please try again.'\r\n      });\r\n    } finally {\r\n      setIsExporting(false);\r\n    }\r\n  };\r\n\r\n  const getTypeIcon = (type: Collection['type']) => {\r\n    switch (type) {\r\n      case 'heritage': return Crown;\r\n      case 'seasonal': return Calendar;\r\n      case 'limited': return Zap;\r\n      case 'exclusive': return Award;\r\n      case 'signature': return Star;\r\n      case 'modern': return Sparkles;\r\n      default: return Gift;\r\n    }\r\n  };\r\n\r\n  const getStatusColor = (status: Collection['status']) => {\r\n    switch (status) {\r\n      case 'active': return 'bg-green-100 text-green-800';\r\n      case 'inactive': return 'bg-gray-100 text-gray-800';\r\n      case 'coming_soon': return 'bg-blue-100 text-blue-800';\r\n      case 'sold_out': return 'bg-red-100 text-red-800';\r\n      default: return 'bg-gray-100 text-gray-800';\r\n    }\r\n  };\r\n\r\n  if (contextLoading && collections.length === 0) {\r\n    return (\r\n      <div className=\"flex justify-center items-center h-64\">\r\n        <LoadingSpinner size=\"lg\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={`space-y-6 ${className}`}>\r\n      {/* Header */}\r\n      <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4\">\r\n        <div>\r\n          <h2 className=\"text-2xl font-bold text-gray-900\">Collection Management</h2>\r\n          <p className=\"text-gray-600\">Manage special collections ({filteredCollections.length} of {collections.length} collections)</p>\r\n        </div>\r\n        \r\n        <div className=\"flex items-center space-x-3\">\r\n          <button\r\n            onClick={handleRefresh}\r\n            disabled={refreshing}\r\n            className=\"flex items-center space-x-2 px-4 py-2 text-gray-700 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 disabled:opacity-50\"\r\n          >\r\n            <RefreshCw className={`h-4 w-4 ${refreshing ? 'animate-spin' : ''}`} />\r\n            <span>Refresh</span>\r\n          </button>\r\n          \r\n          <button\r\n            onClick={handleExport}\r\n            disabled={isExporting}\r\n            className=\"flex items-center space-x-2 px-4 py-2 text-gray-700 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 disabled:opacity-50\"\r\n          >\r\n            <Download className=\"h-4 w-4\" />\r\n            <span>{isExporting ? 'Exporting...' : 'Export'}</span>\r\n          </button>\r\n          \r\n          <button\r\n            onClick={handleAddCollection}\r\n            className=\"flex items-center space-x-2 px-4 py-2 bg-indigo-600 text-white rounded-lg hover:bg-indigo-700\"\r\n          >\r\n            <Plus className=\"h-4 w-4\" />\r\n            <span>Add Collection</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Filters and Search */}\r\n      <div className=\"bg-white p-4 rounded-lg border border-gray-200\">\r\n        <div className=\"flex flex-col lg:flex-row lg:items-center gap-4\">\r\n          {/* Search */}\r\n          <div className=\"flex-1\">\r\n            <div className=\"relative\">\r\n              <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Search by name or description...\"\r\n                value={searchTerm}\r\n                onChange={(e) => setSearchTerm(e.target.value)}\r\n                className=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\r\n              />\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Filters */}\r\n          <div className=\"flex flex-wrap gap-3\">\r\n            <select\r\n              value={statusFilter}\r\n              onChange={(e) => setStatusFilter(e.target.value)}\r\n              className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\r\n            >\r\n              <option value=\"all\">All Status</option>\r\n              <option value=\"active\">Active</option>\r\n              <option value=\"inactive\">Inactive</option>\r\n              <option value=\"coming_soon\">Coming Soon</option>\r\n              <option value=\"sold_out\">Sold Out</option>\r\n            </select>\r\n            \r\n            <select\r\n              value={typeFilter}\r\n              onChange={(e) => setTypeFilter(e.target.value)}\r\n              className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\r\n            >\r\n              <option value=\"all\">All Types</option>\r\n              <option value=\"heritage\">Heritage</option>\r\n              <option value=\"seasonal\">Seasonal</option>\r\n              <option value=\"limited\">Limited</option>\r\n              <option value=\"exclusive\">Exclusive</option>\r\n              <option value=\"signature\">Signature</option>\r\n              <option value=\"modern\">Modern</option>\r\n            </select>\r\n            \r\n            <select\r\n              value={sortBy}\r\n              onChange={(e) => setSortBy(e.target.value)}\r\n              className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\r\n            >\r\n              <option value=\"name\">Name</option>\r\n              <option value=\"type\">Type</option>\r\n              <option value=\"status\">Status</option>\r\n              <option value=\"productCount\">Product Count</option>\r\n              <option value=\"price\">Price</option>\r\n              <option value=\"sortOrder\">Sort Order</option>\r\n              <option value=\"createdAt\">Created Date</option>\r\n            </select>\r\n            \r\n            <button\r\n              onClick={() => setSortOrder(prev => prev === 'asc' ? 'desc' : 'asc')}\r\n              className=\"px-3 py-2 border border-gray-300 rounded-lg hover:bg-gray-50\"\r\n            >\r\n              {sortOrder === 'asc' ? <ChevronUp className=\"h-4 w-4\" /> : <ChevronDown className=\"h-4 w-4\" />}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Collections Table */}\r\n      <div className=\"bg-white rounded-lg border border-gray-200 overflow-hidden\">\r\n        <div className=\"overflow-x-auto\">\r\n          <table className=\"w-full\">\r\n            <thead className=\"bg-gray-50 border-b border-gray-200\">\r\n              <tr>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Collection\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Type & Status\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Products\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Price\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Order\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Actions\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody className=\"bg-white divide-y divide-gray-200\">\r\n              {filteredCollections.map((collection) => {\r\n                const TypeIcon = getTypeIcon(collection.type);\r\n                \r\n                return (\r\n                  <tr key={collection.id} className=\"hover:bg-gray-50\">\r\n                    <td className=\"px-6 py-4\">\r\n                      <div className=\"flex items-center space-x-3\">\r\n                        <div className=\"flex-shrink-0\">\r\n                          <img\r\n                            src={collection.image}\r\n                            alt={collection.name}\r\n                            className=\"h-12 w-12 rounded-lg object-cover\"\r\n                            onError={(e) => {\r\n                              (e.target as HTMLImageElement).src = '/placeholder-collection.jpg';\r\n                            }}\r\n                          />\r\n                        </div>\r\n                        <div className=\"min-w-0 flex-1\">\r\n                          <div className=\"flex items-center space-x-2\">\r\n                            <p className=\"text-sm font-medium text-gray-900 truncate\">\r\n                              {collection.name}\r\n                            </p>\r\n                            {collection.featured && (\r\n                              <Star className=\"h-4 w-4 text-yellow-500\" />\r\n                            )}\r\n                            {collection.isExclusive && (\r\n                              <Crown className=\"h-4 w-4 text-purple-500\" />\r\n                            )}\r\n                          </div>\r\n                          <p className=\"text-sm text-gray-500 truncate\">\r\n                            /{collection.slug}\r\n                          </p>\r\n                          <p className=\"text-xs text-gray-400 truncate\">\r\n                            {collection.shortDescription}\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                    </td>\r\n                    <td className=\"px-6 py-4\">\r\n                      <div className=\"space-y-1\">\r\n                        <div className=\"flex items-center space-x-1\">\r\n                          <TypeIcon className=\"h-4 w-4 text-gray-400\" />\r\n                          <span className=\"text-sm text-gray-900 capitalize\">\r\n                            {collection.type}\r\n                          </span>\r\n                        </div>\r\n                        <span className={`inline-flex px-2 py-1 text-xs font-medium rounded-full ${getStatusColor(collection.status)}`}>\r\n                          {collection.status.replace('_', ' ')}\r\n                        </span>\r\n                      </div>\r\n                    </td>\r\n                    <td className=\"px-6 py-4\">\r\n                      <div className=\"flex items-center space-x-1\">\r\n                        <Tag className=\"h-4 w-4 text-gray-400\" />\r\n                        <span className=\"text-sm text-gray-900\">\r\n                          {collection.productCount} products\r\n                        </span>\r\n                      </div>\r\n                    </td>\r\n                    <td className=\"px-6 py-4\">\r\n                      {collection.price ? (\r\n                        <div className=\"space-y-1\">\r\n                          <div className=\"flex items-center space-x-2\">\r\n                            <span className=\"text-sm font-medium text-gray-900\">\r\n                              ${collection.price}\r\n                            </span>\r\n                            {collection.originalPrice && collection.originalPrice > collection.price && (\r\n                              <span className=\"text-xs text-gray-500 line-through\">\r\n                                ${collection.originalPrice}\r\n                              </span>\r\n                            )}\r\n                          </div>\r\n                          {collection.discount && collection.discount > 0 && (\r\n                            <span className=\"text-xs text-green-600 font-medium\">\r\n                              -{collection.discount}% off\r\n                            </span>\r\n                          )}\r\n                        </div>\r\n                      ) : (\r\n                        <span className=\"text-sm text-gray-500\">-</span>\r\n                      )}\r\n                    </td>\r\n                    <td className=\"px-6 py-4\">\r\n                      <span className=\"text-sm text-gray-900\">\r\n                        {collection.sortOrder || 0}\r\n                      </span>\r\n                    </td>\r\n                    <td className=\"px-6 py-4\">\r\n                      <div className=\"flex items-center space-x-2\">\r\n                        <button\r\n                          onClick={() => handleEditCollection(collection)}\r\n                          className=\"p-1 text-gray-400 hover:text-indigo-600\"\r\n                          title=\"Edit Collection\"\r\n                        >\r\n                          <Edit className=\"h-4 w-4\" />\r\n                        </button>\r\n                        <button\r\n                          onClick={() => {/* TODO: Implement view details */}}\r\n                          className=\"p-1 text-gray-400 hover:text-blue-600\"\r\n                          title=\"View Details\"\r\n                        >\r\n                          <Eye className=\"h-4 w-4\" />\r\n                        </button>\r\n                        <button\r\n                          onClick={() => {/* TODO: Implement duplicate */}}\r\n                          className=\"p-1 text-gray-400 hover:text-green-600\"\r\n                          title=\"Duplicate Collection\"\r\n                        >\r\n                          <Copy className=\"h-4 w-4\" />\r\n                        </button>\r\n                        <button\r\n                          onClick={() => handleDeleteCollection(collection.id)}\r\n                          className=\"p-1 text-gray-400 hover:text-red-600\"\r\n                          title=\"Delete Collection\"\r\n                        >\r\n                          <Trash2 className=\"h-4 w-4\" />\r\n                        </button>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        \r\n        {filteredCollections.length === 0 && (\r\n          <div className=\"text-center py-12\">\r\n            <Gift className=\"mx-auto h-12 w-12 text-gray-400\" />\r\n            <h3 className=\"mt-2 text-sm font-medium text-gray-900\">No collections found</h3>\r\n            <p className=\"mt-1 text-sm text-gray-500\">\r\n              {searchTerm || statusFilter !== 'all' || typeFilter !== 'all'\r\n                ? 'Try adjusting your search or filter criteria.'\r\n                : 'Get started by creating your first collection.'\r\n              }\r\n            </p>\r\n            {!searchTerm && statusFilter === 'all' && typeFilter === 'all' && (\r\n              <div className=\"mt-6\">\r\n                <button\r\n                  onClick={handleAddCollection}\r\n                  className=\"inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700\"\r\n                >\r\n                  <Plus className=\"h-4 w-4 mr-2\" />\r\n                  Add Collection\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Add/Edit Collection Modal */}\r\n      <Modal\r\n        isOpen={isModalOpen}\r\n        onClose={() => setIsModalOpen(false)}\r\n        title={editingCollection ? 'Edit Collection' : 'Add New Collection'}\r\n        size=\"xl\"\r\n      >\r\n        <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n            {/* Basic Information */}\r\n            <div className=\"space-y-4\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                  Collection Name *\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  value={formData.name}\r\n                  onChange={handleInputChange}\r\n                  required\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500\"\r\n                  placeholder=\"Enter collection name\"\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                  Slug\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"slug\"\r\n                  value={formData.slug}\r\n                  onChange={handleInputChange}\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500\"\r\n                  placeholder=\"collection-slug\"\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                  Short Description\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"shortDescription\"\r\n                  value={formData.shortDescription}\r\n                  onChange={handleInputChange}\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500\"\r\n                  placeholder=\"Brief description for cards\"\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                  Description\r\n                </label>\r\n                <textarea\r\n                  name=\"description\"\r\n                  value={formData.description}\r\n                  onChange={handleInputChange}\r\n                  rows={3}\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500\"\r\n                  placeholder=\"Detailed collection description\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            {/* Collection Details */}\r\n            <div className=\"space-y-4\">\r\n              <div className=\"grid grid-cols-2 gap-3\">\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                    Type\r\n                  </label>\r\n                  <select\r\n                    name=\"type\"\r\n                    value={formData.type}\r\n                    onChange={handleInputChange}\r\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500\"\r\n                  >\r\n                    <option value=\"modern\">Modern</option>\r\n                    <option value=\"heritage\">Heritage</option>\r\n                    <option value=\"seasonal\">Seasonal</option>\r\n                    <option value=\"limited\">Limited</option>\r\n                    <option value=\"exclusive\">Exclusive</option>\r\n                    <option value=\"signature\">Signature</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                    Status\r\n                  </label>\r\n                  <select\r\n                    name=\"status\"\r\n                    value={formData.status}\r\n                    onChange={handleInputChange}\r\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500\"\r\n                  >\r\n                    <option value=\"active\">Active</option>\r\n                    <option value=\"inactive\">Inactive</option>\r\n                    <option value=\"coming_soon\">Coming Soon</option>\r\n                    <option value=\"sold_out\">Sold Out</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"grid grid-cols-2 gap-3\">\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                    Price ($)\r\n                  </label>\r\n                  <input\r\n                    type=\"number\"\r\n                    name=\"price\"\r\n                    value={formData.price}\r\n                    onChange={handleInputChange}\r\n                    min=\"0\"\r\n                    step=\"0.01\"\r\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500\"\r\n                  />\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                    Original Price ($)\r\n                  </label>\r\n                  <input\r\n                    type=\"number\"\r\n                    name=\"originalPrice\"\r\n                    value={formData.originalPrice}\r\n                    onChange={handleInputChange}\r\n                    min=\"0\"\r\n                    step=\"0.01\"\r\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500\"\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                  Sort Order\r\n                </label>\r\n                <input\r\n                  type=\"number\"\r\n                  name=\"sortOrder\"\r\n                  value={formData.sortOrder}\r\n                  onChange={handleInputChange}\r\n                  min=\"0\"\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500\"\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                  Tags (comma-separated)\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={formData.tags.join(', ')}\r\n                  onChange={handleTagsChange}\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500\"\r\n                  placeholder=\"luxury, premium, exclusive\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"space-y-2\">\r\n                <label className=\"flex items-center\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"featured\"\r\n                    checked={formData.featured}\r\n                    onChange={handleInputChange}\r\n                    className=\"rounded border-gray-300 text-indigo-600 focus:ring-indigo-500\"\r\n                  />\r\n                  <span className=\"ml-2 text-sm text-gray-700\">Featured Collection</span>\r\n                </label>\r\n\r\n                <label className=\"flex items-center\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"isExclusive\"\r\n                    checked={formData.isExclusive}\r\n                    onChange={handleInputChange}\r\n                    className=\"rounded border-gray-300 text-indigo-600 focus:ring-indigo-500\"\r\n                  />\r\n                  <span className=\"ml-2 text-sm text-gray-700\">Exclusive Collection</span>\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Images */}\r\n          <div className=\"space-y-6\">\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Collection Image\r\n              </label>\r\n              <ImageUpload\r\n                value={formData.image}\r\n                onChange={(url) => setFormData(prev => ({ ...prev, image: url }))}\r\n                onPathChange={setImagePath}\r\n                folder=\"collections\"\r\n                placeholder=\"Upload collection image or enter URL\"\r\n                aspectRatio=\"square\"\r\n                maxWidth={300}\r\n                maxHeight={300}\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Banner Image (Optional)\r\n              </label>\r\n              <ImageUpload\r\n                value={formData.bannerImage || ''}\r\n                onChange={(url) => setFormData(prev => ({ ...prev, bannerImage: url }))}\r\n                onPathChange={setBannerImagePath}\r\n                folder=\"collections/banners\"\r\n                placeholder=\"Upload banner image or enter URL\"\r\n                aspectRatio=\"landscape\"\r\n                maxWidth={600}\r\n                maxHeight={300}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* Dates */}\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                Launch Date (Optional)\r\n              </label>\r\n              <input\r\n                type=\"date\"\r\n                name=\"launchDate\"\r\n                value={formData.launchDate ? formData.launchDate.toISOString().split('T')[0] : ''}\r\n                onChange={(e) => setFormData(prev => ({ \r\n                  ...prev, \r\n                  launchDate: e.target.value ? new Date(e.target.value) : undefined \r\n                }))}\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500\"\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                End Date (Optional)\r\n              </label>\r\n              <input\r\n                type=\"date\"\r\n                name=\"endDate\"\r\n                value={formData.endDate ? formData.endDate.toISOString().split('T')[0] : ''}\r\n                onChange={(e) => setFormData(prev => ({ \r\n                  ...prev, \r\n                  endDate: e.target.value ? new Date(e.target.value) : undefined \r\n                }))}\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* Form Actions */}\r\n          <div className=\"flex justify-end space-x-3 pt-6 border-t border-gray-200\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => setIsModalOpen(false)}\r\n              className=\"px-4 py-2 text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50\"\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              disabled={loading}\r\n              className=\"px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 disabled:opacity-50 flex items-center space-x-2\"\r\n            >\r\n              {loading && <LoadingSpinner size=\"sm\" />}\r\n              <span>{editingCollection ? 'Update Collection' : 'Add Collection'}</span>\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect, useMemo } from 'react';\r\nimport { useProducts } from '../../../contexts/ProductContext';\r\nimport { useNotification } from '../../../contexts/NotificationContext';\r\nimport { LoadingSpinner } from '../../Common/LoadingSpinner';\r\nimport { Modal } from '../../Common/Modal';\r\nimport { Edit, Trash2, Plus, Search, Tag, Percent, Hash, Clock, AlertCircle, CheckCircle, XCircle } from 'lucide-react';\r\nimport { motion } from 'framer-motion';\r\nimport { supabase } from '../../../lib/supabase';\r\nimport { AdminErrorBoundary } from '../../Common/AdminErrorBoundary';\r\nimport { AdminLoadingState, EmptyState } from '../../Common/EnhancedLoadingStates';\r\n\r\ninterface Coupon {\r\n  id: string;\r\n  code: string;\r\n  name: string;\r\n  description: string;\r\n  type: 'percentage' | 'fixed';\r\n  value: number;\r\n  minimumAmount: number;\r\n  maximumDiscount?: number;\r\n  usageLimit?: number;\r\n  usedCount: number;\r\n  isActive: boolean;\r\n  validFrom: string;\r\n  validUntil?: string;\r\n  createdAt: string;\r\n}\r\n\r\nexport const CouponManagement: React.FC = () => {\r\n  const [coupons, setCoupons] = useState<Coupon[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [editingCoupon, setEditingCoupon] = useState<Coupon | null>(null);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [filterStatus, setFilterStatus] = useState<'all' | 'active' | 'inactive'>('all');\r\n\r\n  // Enhanced state for bulk operations and advanced filtering\r\n  const [selectedCoupons, setSelectedCoupons] = useState<string[]>([]);\r\n  const [sortBy, setSortBy] = useState<'code' | 'name' | 'value' | 'usedCount' | 'validUntil' | 'createdAt'>('createdAt');\r\n  const [sortOrder, setSortOrder] = useState<'asc' | 'desc'>('desc');\r\n  const [typeFilter, setTypeFilter] = useState<'all' | 'percentage' | 'fixed'>('all');\r\n  const [validityFilter, setValidityFilter] = useState<'all' | 'valid' | 'expired' | 'upcoming'>('all');\r\n  const [usageFilter, setUsageFilter] = useState<'all' | 'unused' | 'partial' | 'exhausted'>('all');\r\n  const [refreshing, setRefreshing] = useState(false);\r\n  const [isExporting, setIsExporting] = useState(false);\r\n  const [viewMode, setViewMode] = useState<'table' | 'grid'>('table');\r\n\r\n  const { showNotification } = useNotification();\r\n\r\n  const [formData, setFormData] = useState<Omit<Coupon, 'id' | 'usedCount' | 'createdAt'>>({\r\n    code: '',\r\n    name: '',\r\n    description: '',\r\n    type: 'percentage',\r\n    value: 0,\r\n    minimumAmount: 0,\r\n    maximumDiscount: undefined,\r\n    usageLimit: undefined,\r\n    isActive: true,\r\n    validFrom: new Date().toISOString().split('T')[0],\r\n    validUntil: undefined\r\n  });\r\n\r\n  // Fetch coupons\r\n  useEffect(() => {\r\n    fetchCoupons();\r\n  }, []);\r\n\r\n  const fetchCoupons = async () => {\r\n    try {\r\n      setLoading(true);\r\n      \r\n      const { data, error } = await supabase\r\n        .from('coupons')\r\n        .select('*')\r\n        .order('created_at', { ascending: false });\r\n\r\n      if (error) throw error;\r\n\r\n      const couponsData: Coupon[] = data?.map(coupon => ({\r\n        id: coupon.id,\r\n        code: coupon.code,\r\n        name: coupon.name,\r\n        description: coupon.description,\r\n        type: coupon.type,\r\n        value: coupon.value,\r\n        minimumAmount: coupon.minimum_amount,\r\n        maximumDiscount: coupon.maximum_discount,\r\n        usageLimit: coupon.usage_limit,\r\n        usedCount: coupon.used_count,\r\n        isActive: coupon.is_active,\r\n        validFrom: coupon.valid_from,\r\n        validUntil: coupon.valid_until,\r\n        createdAt: coupon.created_at\r\n      })) || [];\r\n\r\n      setCoupons(couponsData);\r\n    } catch (error) {\r\n      console.error('Error fetching coupons:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleAddCoupon = () => {\r\n    setEditingCoupon(null);\r\n    setFormData({\r\n      code: '',\r\n      name: '',\r\n      description: '',\r\n      type: 'percentage',\r\n      value: 0,\r\n      minimumAmount: 0,\r\n      maximumDiscount: undefined,\r\n      usageLimit: undefined,\r\n      isActive: true,\r\n      validFrom: new Date().toISOString().split('T')[0],\r\n      validUntil: undefined\r\n    });\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const handleEditCoupon = (coupon: Coupon) => {\r\n    setEditingCoupon(coupon);\r\n    setFormData({\r\n      code: coupon.code,\r\n      name: coupon.name,\r\n      description: coupon.description,\r\n      type: coupon.type,\r\n      value: coupon.value,\r\n      minimumAmount: coupon.minimumAmount,\r\n      maximumDiscount: coupon.maximumDiscount,\r\n      usageLimit: coupon.usageLimit,\r\n      isActive: coupon.isActive,\r\n      validFrom: coupon.validFrom.split('T')[0],\r\n      validUntil: coupon.validUntil ? coupon.validUntil.split('T')[0] : undefined\r\n    });\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const handleDeleteCoupon = async (couponId: string) => {\r\n    if (window.confirm('Are you sure you want to delete this coupon? This action cannot be undone.')) {\r\n      try {\r\n        const { error } = await supabase\r\n          .from('coupons')\r\n          .delete()\r\n          .eq('id', couponId);\r\n\r\n        if (error) throw error;\r\n\r\n        fetchCoupons();\r\n        showNotification({\r\n          type: 'success',\r\n          title: 'Coupon Deleted',\r\n          message: 'Coupon has been deleted successfully.'\r\n        });\r\n      } catch (error) {\r\n        console.error('Error deleting coupon:', error);\r\n        showNotification({\r\n          type: 'error',\r\n          title: 'Delete Failed',\r\n          message: 'Failed to delete coupon. Please try again.'\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  // Bulk operations\r\n  const handleSelectCoupon = (couponId: string) => {\r\n    setSelectedCoupons(prev =>\r\n      prev.includes(couponId)\r\n        ? prev.filter(id => id !== couponId)\r\n        : [...prev, couponId]\r\n    );\r\n  };\r\n\r\n  const handleSelectAll = () => {\r\n    if (selectedCoupons.length === filteredCoupons.length) {\r\n      setSelectedCoupons([]);\r\n    } else {\r\n      setSelectedCoupons(filteredCoupons.map(c => c.id));\r\n    }\r\n  };\r\n\r\n  const handleBulkDelete = async () => {\r\n    if (selectedCoupons.length === 0) return;\r\n\r\n    if (window.confirm(`Are you sure you want to delete ${selectedCoupons.length} coupons? This action cannot be undone.`)) {\r\n      try {\r\n        const { error } = await supabase\r\n          .from('coupons')\r\n          .delete()\r\n          .in('id', selectedCoupons);\r\n\r\n        if (error) throw error;\r\n\r\n        setSelectedCoupons([]);\r\n        fetchCoupons();\r\n        showNotification({\r\n          type: 'success',\r\n          title: 'Coupons Deleted',\r\n          message: `${selectedCoupons.length} coupons have been deleted successfully.`\r\n        });\r\n      } catch (error) {\r\n        console.error('Error deleting coupons:', error);\r\n        showNotification({\r\n          type: 'error',\r\n          title: 'Delete Failed',\r\n          message: 'Failed to delete coupons. Please try again.'\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleBulkStatusUpdate = async (isActive: boolean) => {\r\n    if (selectedCoupons.length === 0) return;\r\n\r\n    try {\r\n      const { error } = await supabase\r\n        .from('coupons')\r\n        .update({ is_active: isActive })\r\n        .in('id', selectedCoupons);\r\n\r\n      if (error) throw error;\r\n\r\n      setSelectedCoupons([]);\r\n      fetchCoupons();\r\n      showNotification({\r\n        type: 'success',\r\n        title: 'Coupons Updated',\r\n        message: `${selectedCoupons.length} coupons have been ${isActive ? 'activated' : 'deactivated'}.`\r\n      });\r\n    } catch (error) {\r\n      console.error('Error updating coupons:', error);\r\n      showNotification({\r\n        type: 'error',\r\n        title: 'Update Failed',\r\n        message: 'Failed to update coupons. Please try again.'\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleRefresh = async () => {\r\n    setRefreshing(true);\r\n    await fetchCoupons();\r\n    setRefreshing(false);\r\n    showNotification({\r\n      type: 'success',\r\n      title: 'Refreshed',\r\n      message: 'Coupon data has been refreshed.'\r\n    });\r\n  };\r\n\r\n  const handleExport = async () => {\r\n    setIsExporting(true);\r\n    try {\r\n      // Mock export functionality\r\n      await new Promise(resolve => setTimeout(resolve, 2000));\r\n      showNotification({\r\n        type: 'success',\r\n        title: 'Export Complete',\r\n        message: 'Coupons have been exported successfully.'\r\n      });\r\n    } catch (error) {\r\n      showNotification({\r\n        type: 'error',\r\n        title: 'Export Failed',\r\n        message: 'Failed to export coupons. Please try again.'\r\n      });\r\n    } finally {\r\n      setIsExporting(false);\r\n    }\r\n  };\r\n\r\n  const toggleSort = (field: typeof sortBy) => {\r\n    if (sortBy === field) {\r\n      setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc');\r\n    } else {\r\n      setSortBy(field);\r\n      setSortOrder('asc');\r\n    }\r\n  };\r\n\r\n  const getCouponStatus = (coupon: Coupon) => {\r\n    const now = new Date();\r\n    const validFrom = new Date(coupon.validFrom);\r\n    const validUntil = coupon.validUntil ? new Date(coupon.validUntil) : null;\r\n\r\n    if (!coupon.isActive) return { status: 'inactive', color: 'bg-gray-100 text-gray-800', icon: XCircle };\r\n    if (now < validFrom) return { status: 'upcoming', color: 'bg-blue-100 text-blue-800', icon: Clock };\r\n    if (validUntil && now > validUntil) return { status: 'expired', color: 'bg-red-100 text-red-800', icon: XCircle };\r\n    if (coupon.usageLimit && coupon.usedCount >= coupon.usageLimit) return { status: 'exhausted', color: 'bg-orange-100 text-orange-800', icon: AlertCircle };\r\n    return { status: 'active', color: 'bg-green-100 text-green-800', icon: CheckCircle };\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    \r\n    try {\r\n      if (editingCoupon) {\r\n        // Update existing coupon\r\n        const { error } = await supabase\r\n          .from('coupons')\r\n          .update({\r\n            code: formData.code,\r\n            name: formData.name,\r\n            description: formData.description,\r\n            type: formData.type,\r\n            value: formData.value,\r\n            minimum_amount: formData.minimumAmount,\r\n            maximum_discount: formData.maximumDiscount,\r\n            usage_limit: formData.usageLimit,\r\n            is_active: formData.isActive,\r\n            valid_from: formData.validFrom,\r\n            valid_until: formData.validUntil\r\n          })\r\n          .eq('id', editingCoupon.id);\r\n\r\n        if (error) throw error;\r\n      } else {\r\n        // Add new coupon\r\n        const { error } = await supabase\r\n          .from('coupons')\r\n          .insert({\r\n            code: formData.code,\r\n            name: formData.name,\r\n            description: formData.description,\r\n            type: formData.type,\r\n            value: formData.value,\r\n            minimum_amount: formData.minimumAmount,\r\n            maximum_discount: formData.maximumDiscount,\r\n            usage_limit: formData.usageLimit,\r\n            is_active: formData.isActive,\r\n            valid_from: formData.validFrom,\r\n            valid_until: formData.validUntil\r\n          });\r\n\r\n        if (error) throw error;\r\n      }\r\n\r\n      setIsModalOpen(false);\r\n      fetchCoupons();\r\n    } catch (error) {\r\n      console.error('Error saving coupon:', error);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {\r\n    const { name, value, type } = e.target;\r\n    \r\n    if (type === 'checkbox' && e.target instanceof HTMLInputElement) {\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        [name]: e.target.checked\r\n      }));\r\n    } else if (type === 'number') {\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        [name]: value ? parseFloat(value) : 0\r\n      }));\r\n    } else {\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        [name]: value\r\n      }));\r\n    }\r\n  };\r\n\r\n  // Enhanced filtering and sorting logic\r\n  const filteredCoupons = useMemo(() => {\r\n    const filtered = coupons.filter(coupon => {\r\n      const matchesSearch =\r\n        coupon.code.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        coupon.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        coupon.description.toLowerCase().includes(searchTerm.toLowerCase());\r\n\r\n      const matchesStatus =\r\n        filterStatus === 'all' ||\r\n        (filterStatus === 'active' && coupon.isActive) ||\r\n        (filterStatus === 'inactive' && !coupon.isActive);\r\n\r\n      const matchesType =\r\n        typeFilter === 'all' || coupon.type === typeFilter;\r\n\r\n      // Validity filter\r\n      const now = new Date();\r\n      const validFrom = new Date(coupon.validFrom);\r\n      const validUntil = coupon.validUntil ? new Date(coupon.validUntil) : null;\r\n\r\n      let matchesValidity = true;\r\n      if (validityFilter === 'valid') {\r\n        matchesValidity = coupon.isActive && now >= validFrom && (!validUntil || now <= validUntil);\r\n      } else if (validityFilter === 'expired') {\r\n        matchesValidity = validUntil && now > validUntil;\r\n      } else if (validityFilter === 'upcoming') {\r\n        matchesValidity = now < validFrom;\r\n      }\r\n\r\n      // Usage filter\r\n      let matchesUsage = true;\r\n      if (usageFilter === 'unused') {\r\n        matchesUsage = coupon.usedCount === 0;\r\n      } else if (usageFilter === 'partial') {\r\n        matchesUsage = coupon.usedCount > 0 && (!coupon.usageLimit || coupon.usedCount < coupon.usageLimit);\r\n      } else if (usageFilter === 'exhausted') {\r\n        matchesUsage = coupon.usageLimit && coupon.usedCount >= coupon.usageLimit;\r\n      }\r\n\r\n      return matchesSearch && matchesStatus && matchesType && matchesValidity && matchesUsage;\r\n    });\r\n\r\n    // Sorting\r\n    filtered.sort((a, b) => {\r\n      let aValue: any, bValue: any;\r\n\r\n      switch (sortBy) {\r\n        case 'code':\r\n          aValue = a.code.toLowerCase();\r\n          bValue = b.code.toLowerCase();\r\n          break;\r\n        case 'name':\r\n          aValue = a.name.toLowerCase();\r\n          bValue = b.name.toLowerCase();\r\n          break;\r\n        case 'value':\r\n          aValue = a.value;\r\n          bValue = b.value;\r\n          break;\r\n        case 'usedCount':\r\n          aValue = a.usedCount;\r\n          bValue = b.usedCount;\r\n          break;\r\n        case 'validUntil':\r\n          aValue = a.validUntil ? new Date(a.validUntil).getTime() : 0;\r\n          bValue = b.validUntil ? new Date(b.validUntil).getTime() : 0;\r\n          break;\r\n        case 'createdAt':\r\n          aValue = new Date(a.createdAt).getTime();\r\n          bValue = new Date(b.createdAt).getTime();\r\n          break;\r\n        default:\r\n          return 0;\r\n      }\r\n\r\n      if (aValue < bValue) return sortOrder === 'asc' ? -1 : 1;\r\n      if (aValue > bValue) return sortOrder === 'asc' ? 1 : -1;\r\n      return 0;\r\n    });\r\n\r\n    return filtered;\r\n  }, [coupons, searchTerm, filterStatus, typeFilter, validityFilter, usageFilter, sortBy, sortOrder]);\r\n\r\n  if (loading) {\r\n    return <LoadingSpinner text=\"Loading coupons...\" />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex flex-col lg:flex-row lg:items-center lg:justify-between\">\r\n        <div>\r\n          <h2 className=\"text-2xl font-bold text-gray-900\">Coupon Management</h2>\r\n          <p className=\"text-gray-600 mt-1\">\r\n            Create and manage discount coupons ({coupons.length} total)\r\n          </p>\r\n        </div>\r\n        <motion.button\r\n          onClick={handleAddCoupon}\r\n          className=\"btn-primary flex items-center space-x-2 mt-4 lg:mt-0\"\r\n          whileHover={{ scale: 1.02 }}\r\n          whileTap={{ scale: 0.98 }}\r\n        >\r\n          <Plus className=\"h-4 w-4\" />\r\n          <span>Add Coupon</span>\r\n        </motion.button>\r\n      </div>\r\n\r\n      {/* Filters */}\r\n      <div className=\"bg-white rounded-xl shadow-sm border border-gray-100 p-6\">\r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n              Search Coupons\r\n            </label>\r\n            <div className=\"relative\">\r\n              <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\r\n              <input\r\n                type=\"text\"\r\n                value={searchTerm}\r\n                onChange={(e) => setSearchTerm(e.target.value)}\r\n                placeholder=\"Search by code or name...\"\r\n                className=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n              Filter by Status\r\n            </label>\r\n            <select\r\n              value={filterStatus}\r\n              onChange={(e) => setFilterStatus(e.target.value as any)}\r\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\r\n            >\r\n              <option value=\"all\">All Statuses</option>\r\n              <option value=\"active\">Active</option>\r\n              <option value=\"inactive\">Inactive</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Coupons Table */}\r\n      <div className=\"bg-white rounded-xl shadow-sm border border-gray-100 overflow-hidden\">\r\n        <div className=\"overflow-x-auto\">\r\n          <table className=\"w-full\">\r\n            <thead className=\"bg-gray-50\">\r\n              <tr>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Coupon\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Code\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Discount\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Usage\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Validity\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Status\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Actions\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody className=\"bg-white divide-y divide-gray-200\">\r\n              {filteredCoupons.length === 0 ? (\r\n                <tr>\r\n                  <td colSpan={7} className=\"px-6 py-12 text-center\">\r\n                    <Tag className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\r\n                    <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No coupons found</h3>\r\n                    <p className=\"text-gray-600\">\r\n                      {searchTerm || filterStatus !== 'all' \r\n                        ? 'Try adjusting your search or filter criteria.'\r\n                        : 'Get started by creating your first coupon.'\r\n                      }\r\n                    </p>\r\n                  </td>\r\n                </tr>\r\n              ) : (\r\n                filteredCoupons.map((coupon) => (\r\n                  <motion.tr\r\n                    key={coupon.id}\r\n                    initial={{ opacity: 0 }}\r\n                    animate={{ opacity: 1 }}\r\n                    className=\"hover:bg-gray-50\"\r\n                  >\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                      <div className=\"text-sm font-medium text-gray-900\">\r\n                        {coupon.name}\r\n                      </div>\r\n                      {coupon.description && (\r\n                        <div className=\"text-sm text-gray-500\">\r\n                          {coupon.description}\r\n                        </div>\r\n                      )}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                      <span className=\"inline-flex px-2 py-1 text-xs font-semibold rounded-full bg-indigo-100 text-indigo-800\">\r\n                        {coupon.code}\r\n                      </span>\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                      <div className=\"text-sm text-gray-900\">\r\n                        {coupon.type === 'percentage' ? (\r\n                          <span className=\"flex items-center\">\r\n                            <Percent className=\"h-4 w-4 mr-1\" />\r\n                            {coupon.value}%\r\n                          </span>\r\n                        ) : (\r\n                          <span className=\"flex items-center\">\r\n                            <Hash className=\"h-4 w-4 mr-1\" />\r\n                            ₹{coupon.value}\r\n                          </span>\r\n                        )}\r\n                      </div>\r\n                      {coupon.minimumAmount > 0 && (\r\n                        <div className=\"text-xs text-gray-500\">\r\n                          Min: ₹{coupon.minimumAmount}\r\n                        </div>\r\n                      )}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                      <div className=\"text-sm text-gray-900\">\r\n                        {coupon.usedCount} used\r\n                      </div>\r\n                      {coupon.usageLimit && (\r\n                        <div className=\"text-xs text-gray-500\">\r\n                          Limit: {coupon.usageLimit}\r\n                        </div>\r\n                      )}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                      <div className=\"text-sm text-gray-900\">\r\n                        {new Date(coupon.validFrom).toLocaleDateString()}\r\n                      </div>\r\n                      {coupon.validUntil && (\r\n                        <div className=\"text-xs text-gray-500\">\r\n                          to {new Date(coupon.validUntil).toLocaleDateString()}\r\n                        </div>\r\n                      )}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                      {coupon.isActive ? (\r\n                        <span className=\"inline-flex px-2 py-1 text-xs font-semibold rounded-full bg-green-100 text-green-800\">\r\n                          Active\r\n                        </span>\r\n                      ) : (\r\n                        <span className=\"inline-flex px-2 py-1 text-xs font-semibold rounded-full bg-red-100 text-red-800\">\r\n                          Inactive\r\n                        </span>\r\n                      )}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\r\n                      <div className=\"flex space-x-2\">\r\n                        <button\r\n                          onClick={() => handleEditCoupon(coupon)}\r\n                          className=\"text-indigo-600 hover:text-indigo-900 flex items-center\"\r\n                        >\r\n                          <Edit className=\"h-4 w-4 mr-1\" />\r\n                          Edit\r\n                        </button>\r\n                        <button\r\n                          onClick={() => handleDeleteCoupon(coupon.id)}\r\n                          className=\"text-red-600 hover:text-red-900 flex items-center\"\r\n                        >\r\n                          <Trash2 className=\"h-4 w-4 mr-1\" />\r\n                          Delete\r\n                        </button>\r\n                      </div>\r\n                    </td>\r\n                  </motion.tr>\r\n                ))\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Coupon Form Modal */}\r\n      <Modal\r\n        isOpen={isModalOpen}\r\n        onClose={() => setIsModalOpen(false)}\r\n        title={editingCoupon ? \"Edit Coupon\" : \"Add New Coupon\"}\r\n      >\r\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                Coupon Name *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                value={formData.name}\r\n                onChange={handleInputChange}\r\n                required\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\r\n                placeholder=\"Enter coupon name\"\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                Coupon Code *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"code\"\r\n                value={formData.code}\r\n                onChange={handleInputChange}\r\n                required\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\r\n                placeholder=\"Enter coupon code\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n              Description\r\n            </label>\r\n            <textarea\r\n              name=\"description\"\r\n              value={formData.description}\r\n              onChange={handleInputChange}\r\n              rows={2}\r\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\r\n              placeholder=\"Enter coupon description\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                Discount Type *\r\n              </label>\r\n              <select\r\n                name=\"type\"\r\n                value={formData.type}\r\n                onChange={handleInputChange}\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\r\n              >\r\n                <option value=\"percentage\">Percentage</option>\r\n                <option value=\"fixed\">Fixed Amount</option>\r\n              </select>\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                Discount Value *\r\n              </label>\r\n              <input\r\n                type=\"number\"\r\n                name=\"value\"\r\n                value={formData.value}\r\n                onChange={handleInputChange}\r\n                min=\"0\"\r\n                step=\"0.01\"\r\n                required\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\r\n                placeholder=\"Enter discount value\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                Minimum Order Amount\r\n              </label>\r\n              <input\r\n                type=\"number\"\r\n                name=\"minimumAmount\"\r\n                value={formData.minimumAmount}\r\n                onChange={handleInputChange}\r\n                min=\"0\"\r\n                step=\"0.01\"\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\r\n                placeholder=\"Enter minimum amount\"\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                Maximum Discount\r\n              </label>\r\n              <input\r\n                type=\"number\"\r\n                name=\"maximumDiscount\"\r\n                value={formData.maximumDiscount || ''}\r\n                onChange={handleInputChange}\r\n                min=\"0\"\r\n                step=\"0.01\"\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\r\n                placeholder=\"Enter maximum discount (optional)\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                Usage Limit\r\n              </label>\r\n              <input\r\n                type=\"number\"\r\n                name=\"usageLimit\"\r\n                value={formData.usageLimit || ''}\r\n                onChange={handleInputChange}\r\n                min=\"0\"\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\r\n                placeholder=\"Enter usage limit (optional)\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"flex items-center\">\r\n              <label className=\"block text-sm font-medium text-gray-700 mr-2\">\r\n                Status\r\n              </label>\r\n              <div className=\"relative inline-block w-10 mr-2 align-middle select-none\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  name=\"isActive\"\r\n                  checked={formData.isActive}\r\n                  onChange={handleInputChange}\r\n                  className=\"sr-only\"\r\n                  id=\"status-toggle\"\r\n                />\r\n                <label\r\n                  htmlFor=\"status-toggle\"\r\n                  className={`block overflow-hidden h-6 rounded-full cursor-pointer ${\r\n                    formData.isActive ? 'bg-indigo-600' : 'bg-gray-300'\r\n                  }`}\r\n                >\r\n                  <span\r\n                    className={`block h-4 w-4 mt-1 rounded-full bg-white shadow transform transition-transform duration-200 ease-in-out ${\r\n                      formData.isActive ? 'translate-x-5' : 'translate-x-1'\r\n                    }`}\r\n                  />\r\n                </label>\r\n              </div>\r\n              <span className=\"text-sm text-gray-600\">\r\n                {formData.isActive ? 'Active' : 'Inactive'}\r\n              </span>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                Valid From *\r\n              </label>\r\n              <input\r\n                type=\"date\"\r\n                name=\"validFrom\"\r\n                value={formData.validFrom}\r\n                onChange={handleInputChange}\r\n                required\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                Valid Until\r\n              </label>\r\n              <input\r\n                type=\"date\"\r\n                name=\"validUntil\"\r\n                value={formData.validUntil || ''}\r\n                onChange={handleInputChange}\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex justify-end space-x-3 pt-4\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => setIsModalOpen(false)}\r\n              className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 focus:ring-2 focus:ring-indigo-500\"\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"px-4 py-2 text-sm font-medium text-white bg-indigo-600 border border-transparent rounded-lg hover:bg-indigo-700 focus:ring-2 focus:ring-indigo-500\"\r\n            >\r\n              {editingCoupon ? 'Update Coupon' : 'Add Coupon'}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};","import React, { useState, useEffect } from 'react';\r\nimport { Settings, Globe, Mail, Shield, CreditCard, Save, AlertCircle, Eye, EyeOff, Search, Download, Upload, RotateCcw } from 'lucide-react';\r\nimport { supabase } from '../../../lib/supabase';\r\nimport { useNotification } from '../../../contexts/NotificationContext';\r\nimport { LoadingSpinner } from '../../Common/LoadingSpinner';\r\nimport { EnhancedButton } from '../../Common/EnhancedButton';\r\nimport { Modal } from '../../Common/Modal';\r\nimport { AdminErrorBoundary } from '../../Common/AdminErrorBoundary';\r\n\r\ninterface SystemSettings {\r\n  siteName: string;\r\n  siteDescription: string;\r\n  siteUrl: string;\r\n  contactEmail: string;\r\n  supportEmail: string;\r\n  currency: string;\r\n  taxRate: number;\r\n  shippingFee: number;\r\n  freeShippingThreshold: number;\r\n  allowGuestCheckout: boolean;\r\n  requireEmailVerification: boolean;\r\n  enableReviews: boolean;\r\n  enableWishlist: boolean;\r\n  enableCoupons: boolean;\r\n  maintenanceMode: boolean;\r\n  smtpHost: string;\r\n  smtpPort: number;\r\n  smtpUsername: string;\r\n  smtpPassword: string;\r\n  smtpSecure: boolean;\r\n}\r\n\r\nexport const SettingsManagement: React.FC = () => {\r\n  const [settings, setSettings] = useState<SystemSettings>({\r\n    siteName: '',\r\n    siteDescription: '',\r\n    siteUrl: '',\r\n    contactEmail: '',\r\n    supportEmail: '',\r\n    currency: 'USD',\r\n    taxRate: 0,\r\n    shippingFee: 0,\r\n    freeShippingThreshold: 0,\r\n    allowGuestCheckout: true,\r\n    requireEmailVerification: false,\r\n    enableReviews: true,\r\n    enableWishlist: true,\r\n    enableCoupons: true,\r\n    maintenanceMode: false,\r\n    smtpHost: '',\r\n    smtpPort: 587,\r\n    smtpUsername: '',\r\n    smtpPassword: '',\r\n    smtpSecure: true\r\n  });\r\n\r\n  const [loading, setLoading] = useState(true);\r\n  const [saving, setSaving] = useState(false);\r\n  const [activeTab, setActiveTab] = useState('general');\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [isExportModalOpen, setIsExportModalOpen] = useState(false);\r\n  const [isImportModalOpen, setIsImportModalOpen] = useState(false);\r\n  const [isResetModalOpen, setIsResetModalOpen] = useState(false);\r\n  const [exportFormat, setExportFormat] = useState<'json' | 'csv'>('json');\r\n  const [importFile, setImportFile] = useState<File | null>(null);\r\n  const [hasUnsavedChanges, setHasUnsavedChanges] = useState(false);\r\n  const { showNotification } = useNotification();\r\n\r\n  const tabs = [\r\n    { id: 'general', name: 'General', icon: Globe },\r\n    { id: 'ecommerce', name: 'E-commerce', icon: CreditCard },\r\n    { id: 'features', name: 'Features', icon: Settings },\r\n    { id: 'email', name: 'Email', icon: Mail },\r\n    { id: 'security', name: 'Security', icon: Shield }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    fetchSettings();\r\n  }, []);\r\n\r\n  const fetchSettings = async () => {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from('system_settings')\r\n        .select('*')\r\n        .single();\r\n\r\n      if (error && error.code !== 'PGRST116') {\r\n        throw error;\r\n      }\r\n\r\n      if (data) {\r\n        setSettings(data);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching settings:', error);\r\n      showNotification({\r\n        type: 'error',\r\n        title: 'Error',\r\n        message: 'Failed to load settings'\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    setSaving(true);\r\n    try {\r\n      const { error } = await supabase\r\n        .from('system_settings')\r\n        .upsert(settings, { onConflict: 'id' });\r\n\r\n      if (error) throw error;\r\n\r\n      showNotification({\r\n        type: 'success',\r\n        title: 'Settings Saved',\r\n        message: 'System settings have been updated successfully'\r\n      });\r\n    } catch (error) {\r\n      console.error('Error saving settings:', error);\r\n      showNotification({\r\n        type: 'error',\r\n        title: 'Error',\r\n        message: 'Failed to save settings'\r\n      });\r\n    } finally {\r\n      setSaving(false);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (field: keyof SystemSettings, value: any) => {\r\n    setSettings(prev => ({\r\n      ...prev,\r\n      [field]: value\r\n    }));\r\n    setHasUnsavedChanges(true);\r\n  };\r\n\r\n  // Enhanced functionality\r\n  const handleExportSettings = () => {\r\n    const dataToExport = {\r\n      ...settings,\r\n      exportedAt: new Date().toISOString(),\r\n      version: '1.0'\r\n    };\r\n\r\n    if (exportFormat === 'json') {\r\n      const blob = new Blob([JSON.stringify(dataToExport, null, 2)], { type: 'application/json' });\r\n      const url = URL.createObjectURL(blob);\r\n      const a = document.createElement('a');\r\n      a.href = url;\r\n      a.download = `settings-export-${new Date().toISOString().split('T')[0]}.json`;\r\n      a.click();\r\n      URL.revokeObjectURL(url);\r\n    } else {\r\n      // CSV export\r\n      const csvData = Object.entries(dataToExport)\r\n        .map(([key, value]) => `${key},${value}`)\r\n        .join('\\n');\r\n      const blob = new Blob([csvData], { type: 'text/csv' });\r\n      const url = URL.createObjectURL(blob);\r\n      const a = document.createElement('a');\r\n      a.href = url;\r\n      a.download = `settings-export-${new Date().toISOString().split('T')[0]}.csv`;\r\n      a.click();\r\n      URL.revokeObjectURL(url);\r\n    }\r\n\r\n    setIsExportModalOpen(false);\r\n    showNotification({\r\n      type: 'success',\r\n      title: 'Settings Exported',\r\n      message: `Settings exported successfully as ${exportFormat.toUpperCase()}`\r\n    });\r\n  };\r\n\r\n  const handleImportSettings = async () => {\r\n    if (!importFile) return;\r\n\r\n    try {\r\n      const text = await importFile.text();\r\n      let importedData;\r\n\r\n      if (importFile.type === 'application/json') {\r\n        importedData = JSON.parse(text);\r\n      } else {\r\n        // Handle CSV import\r\n        const lines = text.split('\\n');\r\n        importedData = {};\r\n        lines.forEach(line => {\r\n          const [key, value] = line.split(',');\r\n          if (key && value) {\r\n            importedData[key] = value;\r\n          }\r\n        });\r\n      }\r\n\r\n      // Validate and merge settings\r\n      const validatedSettings = { ...settings };\r\n      Object.keys(settings).forEach(key => {\r\n        if (importedData[key] !== undefined) {\r\n          validatedSettings[key as keyof SystemSettings] = importedData[key];\r\n        }\r\n      });\r\n\r\n      setSettings(validatedSettings);\r\n      setHasUnsavedChanges(true);\r\n      setIsImportModalOpen(false);\r\n      setImportFile(null);\r\n\r\n      showNotification({\r\n        type: 'success',\r\n        title: 'Settings Imported',\r\n        message: 'Settings imported successfully. Please review and save changes.'\r\n      });\r\n    } catch (error) {\r\n      showNotification({\r\n        type: 'error',\r\n        title: 'Import Failed',\r\n        message: 'Failed to import settings. Please check the file format.'\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleResetSettings = async () => {\r\n    try {\r\n      const defaultSettings: SystemSettings = {\r\n        siteName: '',\r\n        siteDescription: '',\r\n        siteUrl: '',\r\n        contactEmail: '',\r\n        supportEmail: '',\r\n        currency: 'USD',\r\n        taxRate: 0,\r\n        shippingFee: 0,\r\n        freeShippingThreshold: 0,\r\n        allowGuestCheckout: true,\r\n        requireEmailVerification: false,\r\n        enableReviews: true,\r\n        enableWishlist: true,\r\n        enableCoupons: true,\r\n        maintenanceMode: false,\r\n        smtpHost: '',\r\n        smtpPort: 587,\r\n        smtpUsername: '',\r\n        smtpPassword: '',\r\n        smtpSecure: true\r\n      };\r\n\r\n      setSettings(defaultSettings);\r\n      setHasUnsavedChanges(true);\r\n      setIsResetModalOpen(false);\r\n\r\n      showNotification({\r\n        type: 'success',\r\n        title: 'Settings Reset',\r\n        message: 'Settings have been reset to defaults. Please save to apply changes.'\r\n      });\r\n    } catch (error) {\r\n      showNotification({\r\n        type: 'error',\r\n        title: 'Reset Failed',\r\n        message: 'Failed to reset settings.'\r\n      });\r\n    }\r\n  };\r\n\r\n  const renderGeneralTab = () => (\r\n    <div className=\"space-y-6\">\r\n      <div>\r\n        <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n          Site Name\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          value={settings.siteName}\r\n          onChange={(e) => handleInputChange('siteName', e.target.value)}\r\n          className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\r\n          placeholder=\"Your Store Name\"\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n          Site Description\r\n        </label>\r\n        <textarea\r\n          value={settings.siteDescription}\r\n          onChange={(e) => handleInputChange('siteDescription', e.target.value)}\r\n          rows={3}\r\n          className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\r\n          placeholder=\"Brief description of your store\"\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n          Site URL\r\n        </label>\r\n        <input\r\n          type=\"url\"\r\n          value={settings.siteUrl}\r\n          onChange={(e) => handleInputChange('siteUrl', e.target.value)}\r\n          className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\r\n          placeholder=\"https://yourstore.com\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n            Contact Email\r\n          </label>\r\n          <input\r\n            type=\"email\"\r\n            value={settings.contactEmail}\r\n            onChange={(e) => handleInputChange('contactEmail', e.target.value)}\r\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\r\n            placeholder=\"contact@yourstore.com\"\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n            Support Email\r\n          </label>\r\n          <input\r\n            type=\"email\"\r\n            value={settings.supportEmail}\r\n            onChange={(e) => handleInputChange('supportEmail', e.target.value)}\r\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\r\n            placeholder=\"support@yourstore.com\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const renderEcommerceTab = () => (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n            Currency\r\n          </label>\r\n          <select\r\n            value={settings.currency}\r\n            onChange={(e) => handleInputChange('currency', e.target.value)}\r\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\r\n          >\r\n            <option value=\"USD\">USD - US Dollar</option>\r\n            <option value=\"EUR\">EUR - Euro</option>\r\n            <option value=\"GBP\">GBP - British Pound</option>\r\n            <option value=\"CAD\">CAD - Canadian Dollar</option>\r\n          </select>\r\n        </div>\r\n\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n            Tax Rate (%)\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            step=\"0.01\"\r\n            min=\"0\"\r\n            max=\"100\"\r\n            value={settings.taxRate}\r\n            onChange={(e) => handleInputChange('taxRate', parseFloat(e.target.value) || 0)}\r\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n            Shipping Fee\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            step=\"0.01\"\r\n            min=\"0\"\r\n            value={settings.shippingFee}\r\n            onChange={(e) => handleInputChange('shippingFee', parseFloat(e.target.value) || 0)}\r\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n            Free Shipping Threshold\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            step=\"0.01\"\r\n            min=\"0\"\r\n            value={settings.freeShippingThreshold}\r\n            onChange={(e) => handleInputChange('freeShippingThreshold', parseFloat(e.target.value) || 0)}\r\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const renderFeaturesTab = () => (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n        <div className=\"space-y-4\">\r\n          <h3 className=\"text-lg font-medium text-gray-900\">Store Features</h3>\r\n\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <label className=\"text-sm font-medium text-gray-700\">Allow Guest Checkout</label>\r\n              <p className=\"text-sm text-gray-500\">Allow customers to checkout without creating an account</p>\r\n            </div>\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => handleInputChange('allowGuestCheckout', !settings.allowGuestCheckout)}\r\n              className={`${\r\n                settings.allowGuestCheckout ? 'bg-indigo-600' : 'bg-gray-200'\r\n              } relative inline-flex h-6 w-11 flex-shrink-0 cursor-pointer rounded-full border-2 border-transparent transition-colors duration-200 ease-in-out focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2`}\r\n            >\r\n              <span\r\n                className={`${\r\n                  settings.allowGuestCheckout ? 'translate-x-5' : 'translate-x-0'\r\n                } pointer-events-none inline-block h-5 w-5 transform rounded-full bg-white shadow ring-0 transition duration-200 ease-in-out`}\r\n              />\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <label className=\"text-sm font-medium text-gray-700\">Require Email Verification</label>\r\n              <p className=\"text-sm text-gray-500\">Require users to verify their email address</p>\r\n            </div>\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => handleInputChange('requireEmailVerification', !settings.requireEmailVerification)}\r\n              className={`${\r\n                settings.requireEmailVerification ? 'bg-indigo-600' : 'bg-gray-200'\r\n              } relative inline-flex h-6 w-11 flex-shrink-0 cursor-pointer rounded-full border-2 border-transparent transition-colors duration-200 ease-in-out focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2`}\r\n            >\r\n              <span\r\n                className={`${\r\n                  settings.requireEmailVerification ? 'translate-x-5' : 'translate-x-0'\r\n                } pointer-events-none inline-block h-5 w-5 transform rounded-full bg-white shadow ring-0 transition duration-200 ease-in-out`}\r\n              />\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <label className=\"text-sm font-medium text-gray-700\">Enable Reviews</label>\r\n              <p className=\"text-sm text-gray-500\">Allow customers to leave product reviews</p>\r\n            </div>\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => handleInputChange('enableReviews', !settings.enableReviews)}\r\n              className={`${\r\n                settings.enableReviews ? 'bg-indigo-600' : 'bg-gray-200'\r\n              } relative inline-flex h-6 w-11 flex-shrink-0 cursor-pointer rounded-full border-2 border-transparent transition-colors duration-200 ease-in-out focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2`}\r\n            >\r\n              <span\r\n                className={`${\r\n                  settings.enableReviews ? 'translate-x-5' : 'translate-x-0'\r\n                } pointer-events-none inline-block h-5 w-5 transform rounded-full bg-white shadow ring-0 transition duration-200 ease-in-out`}\r\n              />\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"space-y-4\">\r\n          <h3 className=\"text-lg font-medium text-gray-900\">Additional Features</h3>\r\n\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <label className=\"text-sm font-medium text-gray-700\">Enable Wishlist</label>\r\n              <p className=\"text-sm text-gray-500\">Allow customers to save products to wishlist</p>\r\n            </div>\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => handleInputChange('enableWishlist', !settings.enableWishlist)}\r\n              className={`${\r\n                settings.enableWishlist ? 'bg-indigo-600' : 'bg-gray-200'\r\n              } relative inline-flex h-6 w-11 flex-shrink-0 cursor-pointer rounded-full border-2 border-transparent transition-colors duration-200 ease-in-out focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2`}\r\n            >\r\n              <span\r\n                className={`${\r\n                  settings.enableWishlist ? 'translate-x-5' : 'translate-x-0'\r\n                } pointer-events-none inline-block h-5 w-5 transform rounded-full bg-white shadow ring-0 transition duration-200 ease-in-out`}\r\n              />\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <label className=\"text-sm font-medium text-gray-700\">Enable Coupons</label>\r\n              <p className=\"text-sm text-gray-500\">Allow discount coupons and promotional codes</p>\r\n            </div>\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => handleInputChange('enableCoupons', !settings.enableCoupons)}\r\n              className={`${\r\n                settings.enableCoupons ? 'bg-indigo-600' : 'bg-gray-200'\r\n              } relative inline-flex h-6 w-11 flex-shrink-0 cursor-pointer rounded-full border-2 border-transparent transition-colors duration-200 ease-in-out focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2`}\r\n            >\r\n              <span\r\n                className={`${\r\n                  settings.enableCoupons ? 'translate-x-5' : 'translate-x-0'\r\n                } pointer-events-none inline-block h-5 w-5 transform rounded-full bg-white shadow ring-0 transition duration-200 ease-in-out`}\r\n              />\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <label className=\"text-sm font-medium text-gray-700\">Maintenance Mode</label>\r\n              <p className=\"text-sm text-gray-500\">Put the store in maintenance mode</p>\r\n            </div>\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => handleInputChange('maintenanceMode', !settings.maintenanceMode)}\r\n              className={`${\r\n                settings.maintenanceMode ? 'bg-red-600' : 'bg-gray-200'\r\n              } relative inline-flex h-6 w-11 flex-shrink-0 cursor-pointer rounded-full border-2 border-transparent transition-colors duration-200 ease-in-out focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2`}\r\n            >\r\n              <span\r\n                className={`${\r\n                  settings.maintenanceMode ? 'translate-x-5' : 'translate-x-0'\r\n                } pointer-events-none inline-block h-5 w-5 transform rounded-full bg-white shadow ring-0 transition duration-200 ease-in-out`}\r\n              />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const renderEmailTab = () => (\r\n    <div className=\"space-y-6\">\r\n      <div>\r\n        <h3 className=\"text-lg font-medium text-gray-900 mb-4\">SMTP Configuration</h3>\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n              SMTP Host\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              value={settings.smtpHost}\r\n              onChange={(e) => handleInputChange('smtpHost', e.target.value)}\r\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\r\n              placeholder=\"smtp.gmail.com\"\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n              SMTP Port\r\n            </label>\r\n            <input\r\n              type=\"number\"\r\n              value={settings.smtpPort}\r\n              onChange={(e) => handleInputChange('smtpPort', parseInt(e.target.value) || 587)}\r\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\r\n              placeholder=\"587\"\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n              SMTP Username\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              value={settings.smtpUsername}\r\n              onChange={(e) => handleInputChange('smtpUsername', e.target.value)}\r\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\r\n              placeholder=\"your-email@gmail.com\"\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n              SMTP Password\r\n            </label>\r\n            <div className=\"relative\">\r\n              <input\r\n                type={showPassword ? 'text' : 'password'}\r\n                value={settings.smtpPassword}\r\n                onChange={(e) => handleInputChange('smtpPassword', e.target.value)}\r\n                className=\"w-full px-3 py-2 pr-10 border border-gray-300 rounded-md focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\r\n                placeholder=\"Your SMTP password\"\r\n              />\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => setShowPassword(!showPassword)}\r\n                className=\"absolute inset-y-0 right-0 pr-3 flex items-center\"\r\n              >\r\n                {showPassword ? (\r\n                  <EyeOff className=\"h-4 w-4 text-gray-400\" />\r\n                ) : (\r\n                  <Eye className=\"h-4 w-4 text-gray-400\" />\r\n                )}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"mt-4\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <label className=\"text-sm font-medium text-gray-700\">Use Secure Connection (TLS/SSL)</label>\r\n              <p className=\"text-sm text-gray-500\">Enable secure email transmission</p>\r\n            </div>\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => handleInputChange('smtpSecure', !settings.smtpSecure)}\r\n              className={`${\r\n                settings.smtpSecure ? 'bg-indigo-600' : 'bg-gray-200'\r\n              } relative inline-flex h-6 w-11 flex-shrink-0 cursor-pointer rounded-full border-2 border-transparent transition-colors duration-200 ease-in-out focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2`}\r\n            >\r\n              <span\r\n                className={`${\r\n                  settings.smtpSecure ? 'translate-x-5' : 'translate-x-0'\r\n                } pointer-events-none inline-block h-5 w-5 transform rounded-full bg-white shadow ring-0 transition duration-200 ease-in-out`}\r\n              />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const renderSecurityTab = () => (\r\n    <div className=\"space-y-6\">\r\n      <div>\r\n        <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Security Settings</h3>\r\n\r\n        <div className=\"bg-yellow-50 border border-yellow-200 rounded-md p-4 mb-6\">\r\n          <div className=\"flex\">\r\n            <AlertCircle className=\"h-5 w-5 text-yellow-400\" />\r\n            <div className=\"ml-3\">\r\n              <h3 className=\"text-sm font-medium text-yellow-800\">Security Notice</h3>\r\n              <div className=\"mt-2 text-sm text-yellow-700\">\r\n                <p>These settings affect the security of your entire application. Please review carefully before making changes.</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"space-y-4\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <label className=\"text-sm font-medium text-gray-700\">Require Email Verification</label>\r\n              <p className=\"text-sm text-gray-500\">Force users to verify their email before accessing the store</p>\r\n            </div>\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => handleInputChange('requireEmailVerification', !settings.requireEmailVerification)}\r\n              className={`${\r\n                settings.requireEmailVerification ? 'bg-indigo-600' : 'bg-gray-200'\r\n              } relative inline-flex h-6 w-11 flex-shrink-0 cursor-pointer rounded-full border-2 border-transparent transition-colors duration-200 ease-in-out focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2`}\r\n            >\r\n              <span\r\n                className={`${\r\n                  settings.requireEmailVerification ? 'translate-x-5' : 'translate-x-0'\r\n                } pointer-events-none inline-block h-5 w-5 transform rounded-full bg-white shadow ring-0 transition duration-200 ease-in-out`}\r\n              />\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <label className=\"text-sm font-medium text-gray-700\">Maintenance Mode</label>\r\n              <p className=\"text-sm text-gray-500\">Temporarily disable public access to the store</p>\r\n            </div>\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => handleInputChange('maintenanceMode', !settings.maintenanceMode)}\r\n              className={`${\r\n                settings.maintenanceMode ? 'bg-red-600' : 'bg-gray-200'\r\n              } relative inline-flex h-6 w-11 flex-shrink-0 cursor-pointer rounded-full border-2 border-transparent transition-colors duration-200 ease-in-out focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2`}\r\n            >\r\n              <span\r\n                className={`${\r\n                  settings.maintenanceMode ? 'translate-x-5' : 'translate-x-0'\r\n                } pointer-events-none inline-block h-5 w-5 transform rounded-full bg-white shadow ring-0 transition duration-200 ease-in-out`}\r\n              />\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"mt-6 p-4 bg-gray-50 rounded-lg\">\r\n          <h4 className=\"text-sm font-medium text-gray-900 mb-2\">Security Recommendations</h4>\r\n          <ul className=\"text-sm text-gray-600 space-y-1\">\r\n            <li>• Enable email verification for new user accounts</li>\r\n            <li>• Use strong SMTP passwords and enable secure connections</li>\r\n            <li>• Regularly review and update security settings</li>\r\n            <li>• Monitor system logs for suspicious activity</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"p-8\">\r\n        <LoadingSpinner size=\"large\" text=\"Loading settings...\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <AdminErrorBoundary>\r\n      <div className=\"space-y-6\">\r\n        {/* Header */}\r\n        <div className=\"flex flex-col lg:flex-row lg:items-center lg:justify-between gap-4\">\r\n          <div>\r\n            <h1 className=\"text-2xl font-bold text-gray-900 flex items-center\">\r\n              <Settings className=\"h-8 w-8 mr-3 text-indigo-600\" />\r\n              System Settings\r\n            </h1>\r\n            <p className=\"text-gray-600 mt-1\">Configure your store settings and preferences</p>\r\n            {hasUnsavedChanges && (\r\n              <div className=\"flex items-center mt-2 text-amber-600\">\r\n                <AlertCircle className=\"h-4 w-4 mr-1\" />\r\n                <span className=\"text-sm\">You have unsaved changes</span>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"flex flex-wrap items-center gap-2\">\r\n            {/* Search */}\r\n            <div className=\"relative\">\r\n              <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Search settings...\"\r\n                value={searchTerm}\r\n                onChange={(e) => setSearchTerm(e.target.value)}\r\n                className=\"pl-10 pr-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 text-sm\"\r\n              />\r\n            </div>\r\n\r\n            {/* Action Buttons */}\r\n            <EnhancedButton\r\n              onClick={() => setIsExportModalOpen(true)}\r\n              icon={Download}\r\n              variant=\"outline\"\r\n              size=\"sm\"\r\n            >\r\n              Export\r\n            </EnhancedButton>\r\n\r\n            <EnhancedButton\r\n              onClick={() => setIsImportModalOpen(true)}\r\n              icon={Upload}\r\n              variant=\"outline\"\r\n              size=\"sm\"\r\n            >\r\n              Import\r\n            </EnhancedButton>\r\n\r\n            <EnhancedButton\r\n              onClick={() => setIsResetModalOpen(true)}\r\n              icon={RotateCcw}\r\n              variant=\"outline\"\r\n              size=\"sm\"\r\n              className=\"text-red-600 border-red-300 hover:bg-red-50\"\r\n            >\r\n              Reset\r\n            </EnhancedButton>\r\n\r\n            <EnhancedButton\r\n              onClick={handleSave}\r\n              loading={saving}\r\n              icon={Save}\r\n              className=\"bg-indigo-600 hover:bg-indigo-700 text-white\"\r\n            >\r\n              Save Changes\r\n            </EnhancedButton>\r\n          </div>\r\n        </div>\r\n\r\n      {/* Tabs */}\r\n      <div className=\"border-b border-gray-200\">\r\n        <nav className=\"-mb-px flex space-x-8\">\r\n          {tabs.map((tab) => (\r\n            <button\r\n              key={tab.id}\r\n              onClick={() => setActiveTab(tab.id)}\r\n              className={`${\r\n                activeTab === tab.id\r\n                  ? 'border-indigo-500 text-indigo-600'\r\n                  : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\r\n              } whitespace-nowrap py-2 px-1 border-b-2 font-medium text-sm flex items-center`}\r\n            >\r\n              <tab.icon className=\"h-5 w-5\" />\r\n              <span className=\"ml-2\">{tab.name}</span>\r\n            </button>\r\n          ))}\r\n        </nav>\r\n      </div>\r\n\r\n        {/* Tab Content */}\r\n        <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-6\">\r\n          {activeTab === 'general' && renderGeneralTab()}\r\n          {activeTab === 'ecommerce' && renderEcommerceTab()}\r\n          {activeTab === 'features' && renderFeaturesTab()}\r\n          {activeTab === 'email' && renderEmailTab()}\r\n          {activeTab === 'security' && renderSecurityTab()}\r\n        </div>\r\n\r\n        {/* Export Modal */}\r\n        <Modal\r\n          isOpen={isExportModalOpen}\r\n          onClose={() => setIsExportModalOpen(false)}\r\n          title=\"Export Settings\"\r\n        >\r\n          <div className=\"space-y-4\">\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Export Format\r\n              </label>\r\n              <select\r\n                value={exportFormat}\r\n                onChange={(e) => setExportFormat(e.target.value as 'json' | 'csv')}\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\r\n              >\r\n                <option value=\"json\">JSON</option>\r\n                <option value=\"csv\">CSV</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"flex justify-end space-x-3\">\r\n              <EnhancedButton\r\n                onClick={() => setIsExportModalOpen(false)}\r\n                variant=\"outline\"\r\n              >\r\n                Cancel\r\n              </EnhancedButton>\r\n              <EnhancedButton\r\n                onClick={handleExportSettings}\r\n                icon={Download}\r\n              >\r\n                Export\r\n              </EnhancedButton>\r\n            </div>\r\n          </div>\r\n        </Modal>\r\n\r\n        {/* Import Modal */}\r\n        <Modal\r\n          isOpen={isImportModalOpen}\r\n          onClose={() => setIsImportModalOpen(false)}\r\n          title=\"Import Settings\"\r\n        >\r\n          <div className=\"space-y-4\">\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Select File\r\n              </label>\r\n              <input\r\n                type=\"file\"\r\n                accept=\".json,.csv\"\r\n                onChange={(e) => setImportFile(e.target.files?.[0] || null)}\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\r\n              />\r\n              <p className=\"text-sm text-gray-500 mt-1\">\r\n                Supported formats: JSON, CSV\r\n              </p>\r\n            </div>\r\n            <div className=\"flex justify-end space-x-3\">\r\n              <EnhancedButton\r\n                onClick={() => {\r\n                  setIsImportModalOpen(false);\r\n                  setImportFile(null);\r\n                }}\r\n                variant=\"outline\"\r\n              >\r\n                Cancel\r\n              </EnhancedButton>\r\n              <EnhancedButton\r\n                onClick={handleImportSettings}\r\n                disabled={!importFile}\r\n                icon={Upload}\r\n              >\r\n                Import\r\n              </EnhancedButton>\r\n            </div>\r\n          </div>\r\n        </Modal>\r\n\r\n        {/* Reset Modal */}\r\n        <Modal\r\n          isOpen={isResetModalOpen}\r\n          onClose={() => setIsResetModalOpen(false)}\r\n          title=\"Reset Settings\"\r\n        >\r\n          <div className=\"space-y-4\">\r\n            <div className=\"flex items-start space-x-3\">\r\n              <AlertCircle className=\"h-6 w-6 text-red-500 mt-0.5\" />\r\n              <div>\r\n                <h3 className=\"text-lg font-medium text-gray-900\">\r\n                  Are you sure you want to reset all settings?\r\n                </h3>\r\n                <p className=\"text-sm text-gray-500 mt-1\">\r\n                  This action will restore all settings to their default values. This cannot be undone.\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div className=\"flex justify-end space-x-3\">\r\n              <EnhancedButton\r\n                onClick={() => setIsResetModalOpen(false)}\r\n                variant=\"outline\"\r\n              >\r\n                Cancel\r\n              </EnhancedButton>\r\n              <EnhancedButton\r\n                onClick={handleResetSettings}\r\n                icon={RotateCcw}\r\n                className=\"bg-red-600 hover:bg-red-700 text-white\"\r\n              >\r\n                Reset All Settings\r\n              </EnhancedButton>\r\n            </div>\r\n          </div>\r\n        </Modal>\r\n      </div>\r\n    </AdminErrorBoundary>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Megaphone, TrendingUp, Target, BarChart3, Plus, Search, Edit, Trash2, Eye, Play, Pause, Copy, DollarSign, Gift, RefreshCw } from 'lucide-react';\r\nimport { supabase } from '../../../lib/supabase';\r\nimport { useNotification } from '../../../contexts/NotificationContext';\r\nimport { LoadingSpinner } from '../../Common/LoadingSpinner';\r\nimport { EnhancedButton } from '../../Common/EnhancedButton';\r\nimport { Modal } from '../../Common/Modal';\r\nimport { ImageUpload } from '../../Common/ImageUpload';\r\nimport { AdminErrorBoundary } from '../../Common/AdminErrorBoundary';\r\n\r\ninterface Campaign {\r\n  id: string;\r\n  name: string;\r\n  type: 'email' | 'sms' | 'social' | 'banner' | 'popup';\r\n  status: 'draft' | 'active' | 'paused' | 'completed' | 'scheduled';\r\n  startDate: string;\r\n  endDate: string;\r\n  targetAudience: string;\r\n  budget: number;\r\n  spent: number;\r\n  impressions: number;\r\n  clicks: number;\r\n  conversions: number;\r\n  revenue: number;\r\n  createdAt: string;\r\n  updatedAt: string;\r\n}\r\n\r\ninterface Promotion {\r\n  id: string;\r\n  name: string;\r\n  type: 'flash_sale' | 'bundle' | 'bogo' | 'discount' | 'free_shipping';\r\n  status: 'active' | 'inactive' | 'scheduled' | 'expired';\r\n  discountType: 'percentage' | 'fixed' | 'free_shipping';\r\n  discountValue: number;\r\n  minimumAmount: number;\r\n  maxUses: number;\r\n  currentUses: number;\r\n  startDate: string;\r\n  endDate: string;\r\n  products: string[];\r\n  categories: string[];\r\n  createdAt: string;\r\n}\r\n\r\ninterface MarketingMetrics {\r\n  totalCampaigns: number;\r\n  activeCampaigns: number;\r\n  totalBudget: number;\r\n  totalSpent: number;\r\n  totalImpressions: number;\r\n  totalClicks: number;\r\n  totalConversions: number;\r\n  totalRevenue: number;\r\n  averageCTR: number;\r\n  averageConversionRate: number;\r\n  roi: number;\r\n}\r\n\r\nexport const MarketingManagement: React.FC = () => {\r\n  const [campaigns, setCampaigns] = useState<Campaign[]>([]);\r\n  const [promotions, setPromotions] = useState<Promotion[]>([]);\r\n  const [metrics, setMetrics] = useState<MarketingMetrics | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [activeTab, setActiveTab] = useState<'overview' | 'campaigns' | 'promotions' | 'analytics'>('overview');\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [statusFilter, setStatusFilter] = useState('');\r\n  const [typeFilter, setTypeFilter] = useState('');\r\n  const [isCreateCampaignModalOpen, setIsCreateCampaignModalOpen] = useState(false);\r\n  const [isCreatePromotionModalOpen, setIsCreatePromotionModalOpen] = useState(false);\r\n  const [selectedCampaign, setSelectedCampaign] = useState<Campaign | null>(null);\r\n  const [selectedPromotion, setSelectedPromotion] = useState<Promotion | null>(null);\r\n  const { showNotification } = useNotification();\r\n\r\n  const tabs = [\r\n    { id: 'overview', name: 'Overview', icon: <BarChart3 className=\"h-5 w-5\" /> },\r\n    { id: 'campaigns', name: 'Campaigns', icon: <Megaphone className=\"h-5 w-5\" /> },\r\n    { id: 'promotions', name: 'Promotions', icon: <Gift className=\"h-5 w-5\" /> },\r\n    { id: 'analytics', name: 'Analytics', icon: <TrendingUp className=\"h-5 w-5\" /> }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const fetchData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await Promise.all([\r\n        fetchCampaigns(),\r\n        fetchPromotions(),\r\n        fetchMetrics()\r\n      ]);\r\n    } catch (error) {\r\n      console.error('Error fetching marketing data:', error);\r\n      showNotification({\r\n        type: 'error',\r\n        title: 'Error',\r\n        message: 'Failed to load marketing data'\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchCampaigns = async () => {\r\n    // Mock data for now - replace with actual Supabase query\r\n    const mockCampaigns: Campaign[] = [\r\n      {\r\n        id: '1',\r\n        name: 'Summer Sale Email Campaign',\r\n        type: 'email',\r\n        status: 'active',\r\n        startDate: '2024-06-01',\r\n        endDate: '2024-06-30',\r\n        targetAudience: 'All Customers',\r\n        budget: 5000,\r\n        spent: 3200,\r\n        impressions: 45000,\r\n        clicks: 2250,\r\n        conversions: 180,\r\n        revenue: 18000,\r\n        createdAt: '2024-05-15T10:00:00Z',\r\n        updatedAt: '2024-06-15T14:30:00Z'\r\n      },\r\n      {\r\n        id: '2',\r\n        name: 'New Product Launch',\r\n        type: 'social',\r\n        status: 'scheduled',\r\n        startDate: '2024-07-01',\r\n        endDate: '2024-07-15',\r\n        targetAudience: 'Premium Customers',\r\n        budget: 8000,\r\n        spent: 0,\r\n        impressions: 0,\r\n        clicks: 0,\r\n        conversions: 0,\r\n        revenue: 0,\r\n        createdAt: '2024-06-01T09:00:00Z',\r\n        updatedAt: '2024-06-01T09:00:00Z'\r\n      }\r\n    ];\r\n    setCampaigns(mockCampaigns);\r\n  };\r\n\r\n  const fetchPromotions = async () => {\r\n    // Mock data for now - replace with actual Supabase query\r\n    const mockPromotions: Promotion[] = [\r\n      {\r\n        id: '1',\r\n        name: 'Flash Sale - 50% Off Electronics',\r\n        type: 'flash_sale',\r\n        status: 'active',\r\n        discountType: 'percentage',\r\n        discountValue: 50,\r\n        minimumAmount: 100,\r\n        maxUses: 1000,\r\n        currentUses: 234,\r\n        startDate: '2024-06-15T00:00:00Z',\r\n        endDate: '2024-06-17T23:59:59Z',\r\n        products: ['electronics'],\r\n        categories: ['smartphones', 'laptops'],\r\n        createdAt: '2024-06-14T10:00:00Z'\r\n      },\r\n      {\r\n        id: '2',\r\n        name: 'Buy One Get One Free - Clothing',\r\n        type: 'bogo',\r\n        status: 'scheduled',\r\n        discountType: 'percentage',\r\n        discountValue: 50,\r\n        minimumAmount: 0,\r\n        maxUses: 500,\r\n        currentUses: 0,\r\n        startDate: '2024-07-01T00:00:00Z',\r\n        endDate: '2024-07-31T23:59:59Z',\r\n        products: [],\r\n        categories: ['clothing'],\r\n        createdAt: '2024-06-20T15:00:00Z'\r\n      }\r\n    ];\r\n    setPromotions(mockPromotions);\r\n  };\r\n\r\n  const fetchMetrics = async () => {\r\n    // Mock metrics - replace with actual calculations\r\n    const mockMetrics: MarketingMetrics = {\r\n      totalCampaigns: 12,\r\n      activeCampaigns: 3,\r\n      totalBudget: 50000,\r\n      totalSpent: 32000,\r\n      totalImpressions: 450000,\r\n      totalClicks: 22500,\r\n      totalConversions: 1800,\r\n      totalRevenue: 180000,\r\n      averageCTR: 5.0,\r\n      averageConversionRate: 8.0,\r\n      roi: 462.5\r\n    };\r\n    setMetrics(mockMetrics);\r\n  };\r\n\r\n  const renderOverviewTab = () => (\r\n    <div className=\"space-y-6\">\r\n      {/* Metrics Cards */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n        <div className=\"bg-white p-6 rounded-lg shadow-sm border border-gray-200\">\r\n          <div className=\"flex items-center\">\r\n            <div className=\"p-2 bg-blue-100 rounded-lg\">\r\n              <Megaphone className=\"h-6 w-6 text-blue-600\" />\r\n            </div>\r\n            <div className=\"ml-4\">\r\n              <p className=\"text-sm font-medium text-gray-600\">Total Campaigns</p>\r\n              <p className=\"text-2xl font-bold text-gray-900\">{metrics?.totalCampaigns || 0}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-white p-6 rounded-lg shadow-sm border border-gray-200\">\r\n          <div className=\"flex items-center\">\r\n            <div className=\"p-2 bg-green-100 rounded-lg\">\r\n              <DollarSign className=\"h-6 w-6 text-green-600\" />\r\n            </div>\r\n            <div className=\"ml-4\">\r\n              <p className=\"text-sm font-medium text-gray-600\">Total Revenue</p>\r\n              <p className=\"text-2xl font-bold text-gray-900\">\r\n                ${metrics?.totalRevenue?.toLocaleString() || 0}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-white p-6 rounded-lg shadow-sm border border-gray-200\">\r\n          <div className=\"flex items-center\">\r\n            <div className=\"p-2 bg-purple-100 rounded-lg\">\r\n              <Target className=\"h-6 w-6 text-purple-600\" />\r\n            </div>\r\n            <div className=\"ml-4\">\r\n              <p className=\"text-sm font-medium text-gray-600\">Conversion Rate</p>\r\n              <p className=\"text-2xl font-bold text-gray-900\">{metrics?.averageConversionRate || 0}%</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-white p-6 rounded-lg shadow-sm border border-gray-200\">\r\n          <div className=\"flex items-center\">\r\n            <div className=\"p-2 bg-orange-100 rounded-lg\">\r\n              <TrendingUp className=\"h-6 w-6 text-orange-600\" />\r\n            </div>\r\n            <div className=\"ml-4\">\r\n              <p className=\"text-sm font-medium text-gray-600\">ROI</p>\r\n              <p className=\"text-2xl font-bold text-gray-900\">{metrics?.roi || 0}%</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Quick Actions */}\r\n      <div className=\"bg-white p-6 rounded-lg shadow-sm border border-gray-200\">\r\n        <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Quick Actions</h3>\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\r\n          <EnhancedButton\r\n            onClick={() => setIsCreateCampaignModalOpen(true)}\r\n            icon={Plus}\r\n            className=\"w-full\"\r\n          >\r\n            Create Campaign\r\n          </EnhancedButton>\r\n          <EnhancedButton\r\n            onClick={() => setIsCreatePromotionModalOpen(true)}\r\n            icon={Gift}\r\n            variant=\"outline\"\r\n            className=\"w-full\"\r\n          >\r\n            Create Promotion\r\n          </EnhancedButton>\r\n          <EnhancedButton\r\n            onClick={() => setActiveTab('analytics')}\r\n            icon={<BarChart3 className=\"h-4 w-4\" />}\r\n            variant=\"outline\"\r\n            className=\"w-full\"\r\n          >\r\n            View Analytics\r\n          </EnhancedButton>\r\n          <EnhancedButton\r\n            onClick={fetchData}\r\n            icon={RefreshCw}\r\n            variant=\"outline\"\r\n            className=\"w-full\"\r\n          >\r\n            Refresh Data\r\n          </EnhancedButton>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const renderCampaignsTab = () => (\r\n    <div className=\"space-y-6\">\r\n      {/* Search and Filters */}\r\n      <div className=\"flex flex-col sm:flex-row gap-4\">\r\n        <div className=\"relative flex-1\">\r\n          <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search campaigns...\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n            className=\"pl-10 pr-4 py-2 w-full border border-gray-300 rounded-md focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\r\n          />\r\n        </div>\r\n        <select\r\n          value={statusFilter}\r\n          onChange={(e) => setStatusFilter(e.target.value)}\r\n          className=\"px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\r\n        >\r\n          <option value=\"\">All Status</option>\r\n          <option value=\"active\">Active</option>\r\n          <option value=\"paused\">Paused</option>\r\n          <option value=\"scheduled\">Scheduled</option>\r\n          <option value=\"completed\">Completed</option>\r\n        </select>\r\n        <select\r\n          value={typeFilter}\r\n          onChange={(e) => setTypeFilter(e.target.value)}\r\n          className=\"px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\r\n        >\r\n          <option value=\"\">All Types</option>\r\n          <option value=\"email\">Email</option>\r\n          <option value=\"sms\">SMS</option>\r\n          <option value=\"social\">Social</option>\r\n          <option value=\"banner\">Banner</option>\r\n          <option value=\"popup\">Popup</option>\r\n        </select>\r\n      </div>\r\n\r\n      {/* Campaigns Table */}\r\n      <div className=\"overflow-x-auto\">\r\n        <table className=\"min-w-full divide-y divide-gray-200\">\r\n          <thead className=\"bg-gray-50\">\r\n            <tr>\r\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                Campaign\r\n              </th>\r\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                Type\r\n              </th>\r\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                Status\r\n              </th>\r\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                Performance\r\n              </th>\r\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                Budget\r\n              </th>\r\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                Actions\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"bg-white divide-y divide-gray-200\">\r\n            {campaigns.map((campaign) => (\r\n              <tr key={campaign.id} className=\"hover:bg-gray-50\">\r\n                <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                  <div>\r\n                    <div className=\"text-sm font-medium text-gray-900\">{campaign.name}</div>\r\n                    <div className=\"text-sm text-gray-500\">{campaign.targetAudience}</div>\r\n                  </div>\r\n                </td>\r\n                <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                  <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800\">\r\n                    {campaign.type}\r\n                  </span>\r\n                </td>\r\n                <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                  <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${campaign.status === 'active' ? 'bg-green-100 text-green-800' :\r\n                    campaign.status === 'paused' ? 'bg-yellow-100 text-yellow-800' :\r\n                      campaign.status === 'scheduled' ? 'bg-blue-100 text-blue-800' :\r\n                        'bg-gray-100 text-gray-800'\r\n                    }`}>\r\n                    {campaign.status}\r\n                  </span>\r\n                </td>\r\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                  <div>CTR: {((campaign.clicks / campaign.impressions) * 100).toFixed(2)}%</div>\r\n                  <div>Conv: {((campaign.conversions / campaign.clicks) * 100).toFixed(2)}%</div>\r\n                </td>\r\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                  <div>${campaign.spent.toLocaleString()} / ${campaign.budget.toLocaleString()}</div>\r\n                  <div className=\"w-full bg-gray-200 rounded-full h-2 mt-1\">\r\n                    <div\r\n                      className=\"bg-indigo-600 h-2 rounded-full\"\r\n                      style={{ width: `${(campaign.spent / campaign.budget) * 100}%` }}\r\n                    ></div>\r\n                  </div>\r\n                </td>\r\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\r\n                  <div className=\"flex space-x-2\">\r\n                    <button className=\"text-indigo-600 hover:text-indigo-900\">\r\n                      <Eye className=\"h-4 w-4\" />\r\n                    </button>\r\n                    <button className=\"text-indigo-600 hover:text-indigo-900\">\r\n                      <Edit className=\"h-4 w-4\" />\r\n                    </button>\r\n                    <button className=\"text-indigo-600 hover:text-indigo-900\">\r\n                      {campaign.status === 'active' ? <Pause className=\"h-4 w-4\" /> : <Play className=\"h-4 w-4\" />}\r\n                    </button>\r\n                    <button className=\"text-red-600 hover:text-red-900\">\r\n                      <Trash2 className=\"h-4 w-4\" />\r\n                    </button>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const renderPromotionsTab = () => (\r\n    <div className=\"space-y-6\">\r\n      {/* Promotions Grid */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n        {promotions.map((promotion) => (\r\n          <div key={promotion.id} className=\"bg-white border border-gray-200 rounded-lg p-6 hover:shadow-md transition-shadow\">\r\n            <div className=\"flex items-center justify-between mb-4\">\r\n              <h3 className=\"text-lg font-medium text-gray-900\">{promotion.name}</h3>\r\n              <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${promotion.status === 'active' ? 'bg-green-100 text-green-800' :\r\n                promotion.status === 'scheduled' ? 'bg-blue-100 text-blue-800' :\r\n                  promotion.status === 'expired' ? 'bg-red-100 text-red-800' :\r\n                    'bg-gray-100 text-gray-800'\r\n                }`}>\r\n                {promotion.status}\r\n              </span>\r\n            </div>\r\n\r\n            <div className=\"space-y-3\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <span className=\"text-sm text-gray-500\">Type:</span>\r\n                <span className=\"text-sm font-medium text-gray-900\">{promotion.type}</span>\r\n              </div>\r\n\r\n              <div className=\"flex items-center justify-between\">\r\n                <span className=\"text-sm text-gray-500\">Discount:</span>\r\n                <span className=\"text-sm font-medium text-gray-900\">\r\n                  {promotion.discountType === 'percentage' ? `${promotion.discountValue}%` :\r\n                    promotion.discountType === 'fixed' ? `$${promotion.discountValue}` :\r\n                      'Free Shipping'}\r\n                </span>\r\n              </div>\r\n\r\n              <div className=\"flex items-center justify-between\">\r\n                <span className=\"text-sm text-gray-500\">Usage:</span>\r\n                <span className=\"text-sm font-medium text-gray-900\">\r\n                  {promotion.currentUses} / {promotion.maxUses}\r\n                </span>\r\n              </div>\r\n\r\n              <div className=\"w-full bg-gray-200 rounded-full h-2\">\r\n                <div\r\n                  className=\"bg-indigo-600 h-2 rounded-full\"\r\n                  style={{ width: `${(promotion.currentUses / promotion.maxUses) * 100}%` }}\r\n                ></div>\r\n              </div>\r\n\r\n              <div className=\"flex items-center justify-between text-sm text-gray-500\">\r\n                <span>Start: {new Date(promotion.startDate).toLocaleDateString()}</span>\r\n                <span>End: {new Date(promotion.endDate).toLocaleDateString()}</span>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"flex justify-end space-x-2 mt-4\">\r\n              <button className=\"text-indigo-600 hover:text-indigo-900\">\r\n                <Eye className=\"h-4 w-4\" />\r\n              </button>\r\n              <button className=\"text-indigo-600 hover:text-indigo-900\">\r\n                <Edit className=\"h-4 w-4\" />\r\n              </button>\r\n              <button className=\"text-indigo-600 hover:text-indigo-900\">\r\n                <Copy className=\"h-4 w-4\" />\r\n              </button>\r\n              <button className=\"text-red-600 hover:text-red-900\">\r\n                <Trash2 className=\"h-4 w-4\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const renderAnalyticsTab = () => (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n        {/* Performance Chart Placeholder */}\r\n        <div className=\"bg-white p-6 rounded-lg border border-gray-200\">\r\n          <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Campaign Performance</h3>\r\n          <div className=\"h-64 bg-gray-100 rounded-lg flex items-center justify-center\">\r\n            <p className=\"text-gray-500\">Performance chart will be implemented here</p>\r\n          </div>\r\n        </div>\r\n\r\n        {/* ROI Chart Placeholder */}\r\n        <div className=\"bg-white p-6 rounded-lg border border-gray-200\">\r\n          <h3 className=\"text-lg font-medium text-gray-900 mb-4\">ROI Analysis</h3>\r\n          <div className=\"h-64 bg-gray-100 rounded-lg flex items-center justify-center\">\r\n            <p className=\"text-gray-500\">ROI chart will be implemented here</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Detailed Metrics */}\r\n      <div className=\"bg-white p-6 rounded-lg border border-gray-200\">\r\n        <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Detailed Metrics</h3>\r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n          <div className=\"text-center\">\r\n            <p className=\"text-3xl font-bold text-indigo-600\">{metrics?.totalImpressions?.toLocaleString()}</p>\r\n            <p className=\"text-sm text-gray-500\">Total Impressions</p>\r\n          </div>\r\n          <div className=\"text-center\">\r\n            <p className=\"text-3xl font-bold text-green-600\">{metrics?.totalClicks?.toLocaleString()}</p>\r\n            <p className=\"text-sm text-gray-500\">Total Clicks</p>\r\n          </div>\r\n          <div className=\"text-center\">\r\n            <p className=\"text-3xl font-bold text-purple-600\">{metrics?.totalConversions?.toLocaleString()}</p>\r\n            <p className=\"text-sm text-gray-500\">Total Conversions</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"p-8\">\r\n        <LoadingSpinner size=\"large\" text=\"Loading marketing data...\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <AdminErrorBoundary>\r\n      <div className=\"space-y-6\">\r\n        {/* Header */}\r\n        <div className=\"flex flex-col lg:flex-row lg:items-center lg:justify-between gap-4\">\r\n          <div>\r\n            <h1 className=\"text-2xl font-bold text-gray-900 flex items-center\">\r\n              <Megaphone className=\"h-8 w-8 mr-3 text-indigo-600\" />\r\n              Marketing & Promotions\r\n            </h1>\r\n            <p className=\"text-gray-600 mt-1\">Manage campaigns, promotions, and marketing analytics</p>\r\n          </div>\r\n\r\n          <div className=\"flex items-center gap-2\">\r\n            <EnhancedButton\r\n              onClick={() => setIsCreateCampaignModalOpen(true)}\r\n              icon={Plus}\r\n            >\r\n              Create Campaign\r\n            </EnhancedButton>\r\n            <EnhancedButton\r\n              onClick={() => setIsCreatePromotionModalOpen(true)}\r\n              icon={Gift}\r\n              variant=\"secondary\"\r\n            >\r\n              Create Promotion\r\n            </EnhancedButton>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Tabs */}\r\n        <div className=\"border-b border-gray-200\">\r\n          <nav className=\"-mb-px flex space-x-8\">\r\n            {tabs.map((tab) => (\r\n              <button\r\n                key={tab.id}\r\n                onClick={() => setActiveTab(tab.id as any)}\r\n                className={`${activeTab === tab.id\r\n                  ? 'border-indigo-500 text-indigo-600'\r\n                  : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\r\n                  } whitespace-nowrap py-2 px-1 border-b-2 font-medium text-sm flex items-center`}\r\n              >\r\n                {tab.icon}\r\n                <span className=\"ml-2\">{tab.name}</span>\r\n              </button>\r\n            ))}\r\n          </nav>\r\n        </div>\r\n\r\n        {/* Tab Content */}\r\n        <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-6\">\r\n          {activeTab === 'overview' && renderOverviewTab()}\r\n          {activeTab === 'campaigns' && renderCampaignsTab()}\r\n          {activeTab === 'promotions' && renderPromotionsTab()}\r\n          {activeTab === 'analytics' && renderAnalyticsTab()}\r\n        </div>\r\n\r\n        {/* Create Campaign Modal */}\r\n        <Modal\r\n          isOpen={isCreateCampaignModalOpen}\r\n          onClose={() => setIsCreateCampaignModalOpen(false)}\r\n          title=\"Create New Campaign\"\r\n        >\r\n          <div className=\"space-y-4\">\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Campaign Name\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\r\n                placeholder=\"Enter campaign name\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Campaign Type\r\n              </label>\r\n              <select className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\">\r\n                <option value=\"email\">Email Campaign</option>\r\n                <option value=\"sms\">SMS Campaign</option>\r\n                <option value=\"social\">Social Media</option>\r\n                <option value=\"banner\">Banner Ads</option>\r\n                <option value=\"popup\">Popup Campaign</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"grid grid-cols-2 gap-4\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Start Date\r\n                </label>\r\n                <input\r\n                  type=\"date\"\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  End Date\r\n                </label>\r\n                <input\r\n                  type=\"date\"\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Budget (₹)\r\n              </label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\r\n                placeholder=\"0.00\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Campaign Image\r\n              </label>\r\n              <ImageUpload\r\n                value=\"\"\r\n                onChange={(url) => console.log('Campaign image:', url)}\r\n                folder=\"marketing\"\r\n                placeholder=\"Upload campaign image or enter URL\"\r\n                aspectRatio=\"landscape\"\r\n                maxWidth={600}\r\n                maxHeight={300}\r\n              />\r\n            </div>\r\n            <div className=\"flex justify-end space-x-3\">\r\n              <EnhancedButton\r\n                onClick={() => setIsCreateCampaignModalOpen(false)}\r\n                variant=\"outline\"\r\n              >\r\n                Cancel\r\n              </EnhancedButton>\r\n              <EnhancedButton\r\n                onClick={() => {\r\n                  setIsCreateCampaignModalOpen(false);\r\n                  showNotification({\r\n                    type: 'success',\r\n                    title: 'Campaign Created',\r\n                    message: 'New campaign has been created successfully'\r\n                  });\r\n                }}\r\n                icon={Plus}\r\n              >\r\n                Create Campaign\r\n              </EnhancedButton>\r\n            </div>\r\n          </div>\r\n        </Modal>\r\n\r\n        {/* Create Promotion Modal */}\r\n        <Modal\r\n          isOpen={isCreatePromotionModalOpen}\r\n          onClose={() => setIsCreatePromotionModalOpen(false)}\r\n          title=\"Create New Promotion\"\r\n        >\r\n          <div className=\"space-y-4\">\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Promotion Name\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\r\n                placeholder=\"Enter promotion name\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Promotion Type\r\n              </label>\r\n              <select className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\">\r\n                <option value=\"flash_sale\">Flash Sale</option>\r\n                <option value=\"bundle\">Bundle Deal</option>\r\n                <option value=\"bogo\">Buy One Get One</option>\r\n                <option value=\"discount\">Discount</option>\r\n                <option value=\"free_shipping\">Free Shipping</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"grid grid-cols-2 gap-4\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Discount Type\r\n                </label>\r\n                <select className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\">\r\n                  <option value=\"percentage\">Percentage</option>\r\n                  <option value=\"fixed\">Fixed Amount</option>\r\n                  <option value=\"free_shipping\">Free Shipping</option>\r\n                </select>\r\n              </div>\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Discount Value\r\n                </label>\r\n                <input\r\n                  type=\"number\"\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\r\n                  placeholder=\"0\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"flex justify-end space-x-3\">\r\n              <EnhancedButton\r\n                onClick={() => setIsCreatePromotionModalOpen(false)}\r\n                variant=\"outline\"\r\n              >\r\n                Cancel\r\n              </EnhancedButton>\r\n              <EnhancedButton\r\n                onClick={() => {\r\n                  setIsCreatePromotionModalOpen(false);\r\n                  showNotification({\r\n                    type: 'success',\r\n                    title: 'Promotion Created',\r\n                    message: 'New promotion has been created successfully'\r\n                  });\r\n                }}\r\n                icon={Gift}\r\n              >\r\n                Create Promotion\r\n              </EnhancedButton>\r\n            </div>\r\n          </div>\r\n        </Modal>\r\n      </div>\r\n    </AdminErrorBoundary>\r\n  );\r\n};\r\n"],"names":["UniversalTableManager","tableName","displayName","onBack","data","setData","useState","columns","setColumns","loading","setLoading","error","setError","searchTerm","setSearchTerm","sortColumn","setSortColumn","sortDirection","setSortDirection","pagination","setPagination","currentPage","totalPages","totalRecords","recordsPerPage","selectedRows","setSelectedRows","Set","refreshing","setRefreshing","editingRecord","setEditingRecord","editFormData","setEditFormData","saving","setSaving","showEditModal","setShowEditModal","fetchTableSchema","useCallback","async","schemaData","rpcError","supabase","rpc","table_name","length","fallbackData","fallbackError","from","select","eq","mappedColumns","map","col","name","column_name","type","data_type","nullable","is_nullable","formatColumnName","fallbackErr","sampleData","dataError","limit","sampleRecord","inferredColumns","Object","keys","key","inferDataType","err","value","Number","isInteger","test","Array","isArray","fetchTableData","count","countError","head","Math","ceil","offset","query","range","order","ascending","textColumns","filter","includes","searchConditions","join","or","tableData","prev","useEffect","columnName","split","word","charAt","toUpperCase","slice","handlePageChange","newPage","handleFormFieldChange","fieldName","tableColumns","title","width","render","jsx","className","children","minWidth","record","jsxs","JSON","stringify","Date","toLocaleDateString","onClick","e","stopPropagation","handleEditRecord","Edit","id","recordId","window","confirm","delete","Error","message","errorMessage","handleDeleteRecord","String","Trash2","ChevronLeft","ErrorFallback","onRetry","size","toLowerCase","Plus","exportTableData","Download","disabled","RefreshCw","Search","placeholder","onChange","target","Filter","ids","bulkDeleteRecords","LoadingSpinner","Fragment","ResponsiveTable","emptyMessage","X","AlertTriangle","column","rows","parsed","parse","parseFloat","saveData","forEach","find","created_at","toISOString","updated_at","insert","update","Save","UserManagementTable","users","selectedUsers","onSelectUser","onSelectAll","onEditUser","onDeleteUser","onResendConfirmation","onConfirmEmail","actionLoading","getStatusBadge","getRoleBadge","checked","user","_b","_a","email","phone","role","createdAt","emailVerified","Send","CheckCircle","Users","viewport","useViewport","isInstallable","installPWA","usePWAInstall","checkPermission","logSecurityEvent","rateLimitStatus","useSecurity","setUsers","setSelectedUsers","isCreateModalOpen","setIsCreateModalOpen","isEditModalOpen","setIsEditModalOpen","currentUser","setCurrentUser","showPassword","setShowPassword","generatedPassword","setGeneratedPassword","setActionLoading","filters","setFilters","search","status","sortBy","sortOrder","formData","setFormData","dateOfBirth","isActive","sendEmail","showNotification","useNotification","loadUsers","filteredUsers","useMemo","filtered","searchLower","sort","a","b","aValue","bValue","fetchedUsers","getAllUsers","resetForm","handleBulkRoleUpdate","newRole","result","updateUsersBulk","success","u","handleBulkStatusUpdate","ResponsiveContainer","enablePWASupport","showMobileMenu","isMobile","Smartphone","EnhancedButton","csvContent","row","cell","blob","Blob","url","URL","createObjectURL","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","variant","UserPlus","deleteUsersBulk","userId","deleteUser","resendConfirmationEmail","confirmUserEmail","Clock","admin","seller","customer","UserFormModal","isOpen","onClose","onSubmit","userCreation","validationResult","validateUser","sanitizeInput","isValid","warnings","createNewUser","password","errors","isEdit","updateUser","products","deleteProduct","useProducts","isModalOpen","setIsModalOpen","editingProduct","setEditingProduct","selectedCategory","setSelectedCategory","selectedProducts","setSelectedProducts","showBulkActions","setShowBulkActions","setSortBy","setSortOrder","stockFilter","setStockFilter","priceRange","setPriceRange","min","max","viewMode","setViewMode","isExporting","setIsExporting","categories","p","category","filteredProducts","product","matchesSearch","description","matchesCategory","matchesStock","stock","matchesPrice","price","getTime","handleAddProduct","handleEditProduct","handleDeleteProduct","handleSelectProduct","productId","toggleSort","field","getStockStatus","text","color","CheckSquare","Square","SortAsc","SortDesc","src","images","alt","onError","toFixed","originalPrice","round","stockStatus","Eye","Copy","AdminErrorBoundary","Promise","resolve","setTimeout","motion","button","whileHover","scale","whileTap","AnimatePresence","div","initial","opacity","y","animate","exit","CardSkeleton","EmptyState","icon","Package","action","label","onRowClick","layout","Modal","EnhancedProductForm","orders","setOrders","statusFilter","setStatusFilter","selectedOrder","setSelectedOrder","selectedOrders","setSelectedOrders","dateRange","setDateRange","start","end","amountRange","setAmountRange","customerFilter","setCustomerFilter","isOrderDetailOpen","setIsOrderDetailOpen","isEditOrderOpen","setIsEditOrderOpen","fetchOrders","filteredOrders","profiles","matchesStatus","matchesCustomer","matchesAmount","total","matchesDate","orderDate","startDate","endDate","mappedOrders","user_id","order_items","item","quantity","image","updateOrderStatus","orderId","newStatus","in","getStatusColor","getStatusIcon","XCircle","formatCurrency","amount","Intl","NumberFormat","style","currency","format","formatDate","dateString","year","month","day","hour","minute","o","User","DollarSign","Calendar","FileText","AdminLoadingState","addCategory","updateCategory","deleteCategory","editingCategory","setEditingCategory","slug","imagePath","setImagePath","selectedCategories","setSelectedCategories","showHierarchy","setShowHierarchy","StorageService","initializeBucket","initStorage","filteredCategories","productCount","handleAddCategory","handleEditCategory","handleDeleteCategory","handleSelectCategory","categoryId","c","handleInputChange","HTMLInputElement","Tag","categoriesWithProducts","cat","FolderTree","preventDefault","imageUrl","required","ImageUpload","onPathChange","folder","aspectRatio","maxWidth","maxHeight","collections","contextLoading","addCollection","updateCollection","deleteCollection","refreshCollections","useCollections","editingCollection","setEditingCollection","typeFilter","setTypeFilter","shortDescription","bannerImage","discount","productIds","featured","isExclusive","tags","bannerImagePath","setBannerImagePath","replace","filteredCollections","collection","some","tag","matchesType","handleAddCollection","ChevronUp","ChevronDown","TypeIcon","Crown","Zap","Award","Star","Sparkles","Gift","getTypeIcon","launchDate","handleEditCollection","handleDeleteCollection","trim","step","coupons","setCoupons","editingCoupon","setEditingCoupon","filterStatus","setFilterStatus","selectedCoupons","setSelectedCoupons","validityFilter","setValidityFilter","usageFilter","setUsageFilter","code","minimumAmount","maximumDiscount","usageLimit","validFrom","validUntil","fetchCoupons","couponsData","coupon","minimum_amount","maximum_discount","usage_limit","usedCount","used_count","is_active","valid_from","valid_until","filteredCoupons","now","matchesValidity","matchesUsage","colSpan","tr","Percent","Hash","handleEditCoupon","couponId","handleDeleteCoupon","htmlFor","settings","setSettings","siteName","siteDescription","siteUrl","contactEmail","supportEmail","taxRate","shippingFee","freeShippingThreshold","allowGuestCheckout","requireEmailVerification","enableReviews","enableWishlist","enableCoupons","maintenanceMode","smtpHost","smtpPort","smtpUsername","smtpPassword","smtpSecure","activeTab","setActiveTab","isExportModalOpen","setIsExportModalOpen","isImportModalOpen","setIsImportModalOpen","isResetModalOpen","setIsResetModalOpen","exportFormat","setExportFormat","importFile","setImportFile","hasUnsavedChanges","setHasUnsavedChanges","tabs","Globe","CreditCard","Settings","Mail","Shield","fetchSettings","single","AlertCircle","Upload","RotateCcw","upsert","onConflict","tab","parseInt","EyeOff","dataToExport","exportedAt","version","csvData","entries","accept","files","importedData","lines","line","validatedSettings","campaigns","setCampaigns","promotions","setPromotions","metrics","setMetrics","isCreateCampaignModalOpen","setIsCreateCampaignModalOpen","isCreatePromotionModalOpen","setIsCreatePromotionModalOpen","selectedCampaign","setSelectedCampaign","selectedPromotion","setSelectedPromotion","BarChart3","Megaphone","TrendingUp","fetchData","all","fetchCampaigns","fetchPromotions","fetchMetrics","targetAudience","budget","spent","impressions","clicks","conversions","revenue","updatedAt","discountType","discountValue","maxUses","currentUses","totalCampaigns","activeCampaigns","totalBudget","totalSpent","totalImpressions","totalClicks","totalConversions","totalRevenue","averageCTR","averageConversionRate","roi","toLocaleString","Target","campaign","Pause","Play","promotion","_c","renderAnalyticsTab"],"mappings":"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"}