{"version":3,"mappings":"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","names":["ErrorContext","createContext","useError","context","useContext","Error","ErrorProvider","children","error","setError","useState","jsx","Provider","value","clearError","AuthContext","useAuth","AuthProvider","user","setUser","loading","setLoading","loginAttempts","setLoginAttempts","isLocked","setIsLocked","isMobileAuthOpen","setIsMobileAuthOpen","mobileAuthMode","setMobileAuthMode","useEffect","async","sessionPromise","supabase","auth","getSession","timeoutPromise","Promise","_","reject","setTimeout","data","session","race","handleUserSession","initializeAuth","subscription","onAuthStateChange","event","localStorage","removeItem","unsubscribe","authUser","profileData","getProfileForUser","id","fullUser","email","newProfile","createUser","name","_a","user_metadata","full_name","role","_b","phone","_c","dateOfBirth","_d","date_of_birth","err","message","signIn","password","authPromise","signInWithPassword","includes","signUp","additionalData","options","fullName","address","subscribe_newsletter","subscribeNewsletter","emailService","__vitePreload","import","then","n","a","__VITE_PRELOAD__","sendWelcomeEmail","emailError","signOut","closeMobileAuth","logout","login","register","userData","resetPassword","updatePassword","resendVerification","updateProfile","openMobileAuth","mode","jsxs","MobileAuthView","isOpen","onClose","initialMode","NotificationContext","useNotification","NotificationProvider","notifications","setNotifications","notificationTimers","useRef","Map","showNotification","notification","timestamp","Date","now","Math","random","toString","substring","duration","some","type","title","newNotification","isVisible","isDismissing","prev","map","timer","dismissNotification","current","set","get","clearTimeout","delete","filter","forEach","clear","ToastNotification","progress","setProgress","progressRef","startTime","updateProgress","elapsed","remaining","max","styles","container","icon","CheckCircle","className","iconBg","AlertCircle","AlertTriangle","Info","getStyles","onClick","removeNotification","X","style","width","ticking","handleScroll","requestAnimationFrame","document","querySelector","scrollTop","window","pageYOffset","documentElement","topPosition","top","updateNotificationPosition","addEventListener","passive","removeEventListener","showError","appError","handleSupabaseError","userMessage","showSuccess","showInfo","showWarning","position","right","maxHeight","overflow","CartContext","useCart","CartProvider","items","setItems","guestCart","setGuestCart","loadGuestCart","useCallback","savedCart","getItem","parsedCart","JSON","parse","saveGuestCart","cartItems","setItem","stringify","mergeGuestCartWithUserCart","length","item","addToCartDB","product","variantId","quantity","fetchCart","getCartItems","guestCartItems","merged","productId","removeFromCartDB","updatedCart","total","reduce","sum","price","itemCount","addItem","currentGuestCart","existingItemIndex","findIndex","newItem","createdAt","updateQuantity","updateCartItemQuantity","clearCart","clearCartDB","WishlistContext","useWishlist","WishlistProvider","fetchWishlist","wishlistItems","getWishlistItems","removeFromWishlistDB","isInWishlist","addToWishlistDB","clearWishlist","promises","all","ProductContext","useProducts","ProductProvider","memo","products","setProducts","featuredProducts","setFeaturedProducts","categories","setCategories","basicLoading","setBasicLoading","detailsLoading","setDetailsLoading","featuredLoading","setFeaturedLoading","isUsingMockData","setIsUsingMockData","fetchCategories","cacheKey","generateCacheKey","cachedCategories","categoryCache","testDirectRestAPI","bI","result","success","transformedCategories","cat","slug","toLowerCase","replace","description","imageUrl","image_url","parentId","parent_id","sortOrder","sort_order","isActive","is_active","created_at","updatedAt","updated_at","fetchFeaturedProducts","limit","cached","productCache","featuredData","getFeaturedProducts","fetchProducts","forceRefresh","productCacheKey","categoryCacheKey","cachedProducts","productsResult","categoriesResult","getProductsBasic","getCategories","dbError","fullProductsData","getProducts","detailError","addProduct","productData","sellerId","createProduct","categoryId","stock","images","featured","invalidateProductCache","updateProductData","updatedProduct","reviews","rating","reviewCount","updates","updateProduct","deleteProductData","deleteProduct","fetchReviewsForProduct","from","select","eq","order","ascending","submitReview","review","payload","product_id","comment","addReview","addCategory","categoryData","createCategory","invalidateCategoryCache","resolve","updateCategoryData","updatedCategory","productCount","updateCategory","deleteCategoryData","deleteCategory","contextValue","useMemo","CollectionContext","mockCollections","shortDescription","image","bannerImage","status","originalPrice","discount","productIds","isExclusive","launchDate","tags","metaTitle","metaDescription","endDate","CollectionProvider","collections","setCollections","initializeCollections","featuredCollections","collection","activeCollections","getCollectionById","find","getCollectionBySlug","addCollection","collectionData","newCollection","errorMessage","updateCollection","existingCollection","updatedCollection","deleteCollection","c","refreshCollections","useCollections","CompareContext","useCompare","CompareProvider","savedCompare","lastAddedItem","setLastAddedItem","prevItems","isInCompare","clearCompare","OrderContext","useOrders","OrderProvider","orders","setOrders","fetchUserOrders","ordersData","getOrders","createOrder","shippingAddress","billingAddress","paymentMethod","orderId","createOrderDB","updateOrderStatus","updateOrderStatusDB","getOrderById","getOrderByIdDB","localOrder","getUserOrders","userId","targetUserId","AddressContext","useAddresses","AddressProvider","addresses","setAddresses","fetchAddresses","addressesData","getUserAddresses","addAddress","addAddressDB","updateAddress","updateAddressDB","deleteAddress","addressId","deleteAddressDB","setDefaultAddress","setDefaultAddressDB","RecommendationsContext","RecommendationsProvider","recommendations","setRecommendations","related","frequentlyBought","youMayLike","recentlyViewed","trending","newArrivals","calculateProductSimilarity","product1","product2","score","category","abs","sellerName","tag","getRelatedProducts","maxItems","currentProduct","p","sort","b","slice","getFrequentlyBoughtTogether","complementaryCategories","priceRatio","getPersonalizedRecommendations","recentlyViewedProducts","recentlyViewedService","getRecentlyViewedProducts","viewedCategories","Set","viewedBrands","Boolean","avgViewedPrice","viewedIds","has","getRecentlyViewed","getTrendingProducts","getNewArrivals","getTime","refreshRecommendations","newRecommendations","handleRecentlyViewedUpdate","addToRecentlyViewed","removeFromRecentlyViewed","removeProduct","clearRecentlyViewed","clearAll","getRecommendationAnalytics","getAnalytics","totalRecommendations","Object","values","flat","categoriesRepresented","averageRating","useRecommendations","ThemeContext","useTheme","ThemeProvider","preferences","themeConfig","systemPreferences","updatePreferences","resetToDefaults","useAdvancedTheme","announcement","colorScheme","announcer","createElement","setAttribute","textContent","body","appendChild","contains","removeChild","setMode","setColorScheme","setFontScale","fontScale","setBorderRadius","borderRadius","setAnimationLevel","animationLevel","toggleHighContrast","highContrast","toggleReducedMotion","reducedMotion","theme","actualTheme","AuthModalContext","useAuthModal","AuthModalProvider","isModalOpen","setIsModalOpen","modalAction","setModalAction","selectedProduct","setSelectedProduct","hideAuthModal","showAuthModal","action","createPortal","EnhancedAuthModal","CombinedProvider","SecurityProvider","displayName"],"ignoreList":[],"sources":["../../src/contexts/ErrorContext.tsx","../../src/contexts/AuthContext.tsx","../../src/contexts/NotificationContext.tsx","../../src/contexts/CartContext.tsx","../../src/contexts/WishlistContext.tsx","../../src/contexts/ProductContext.tsx","../../src/contexts/CollectionContext.tsx","../../src/contexts/CompareContext.tsx","../../src/contexts/OrderContext.tsx","../../src/contexts/AddressContext.tsx","../../src/contexts/RecommendationsContext.tsx","../../src/contexts/ThemeContext.tsx","../../src/contexts/AuthModalContext.tsx","../../src/contexts/CombinedProvider.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, ReactNode } from 'react';\r\n\r\ninterface ErrorContextType {\r\n  error: string | null;\r\n  setError: (message: string | null) => void;\r\n  clearError: () => void;\r\n}\r\n\r\nconst ErrorContext = createContext<ErrorContextType | undefined>(undefined);\r\n\r\nexport const useError = () => {\r\n  const context = useContext(ErrorContext);\r\n  if (!context) throw new Error('useError must be used within an ErrorProvider');\r\n  return context;\r\n};\r\n\r\nexport const ErrorProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  const clearError = () => setError(null);\r\n\r\n  return (\r\n    <ErrorContext.Provider value={{ error, setError, clearError }}>\r\n      {children}\r\n    </ErrorContext.Provider>\r\n  );\r\n};\r\n","import React, { createContext, useContext, useState, ReactNode, useEffect } from 'react';\r\nimport { User, AuthContextType } from '../types';\r\nimport { supabase, getProfileForUser, updateUserProfile } from '../lib/supabase';\r\nimport { createUser } from '../lib/crudOperations';\r\nimport { AuthChangeEvent, Session } from '@supabase/supabase-js';\r\nimport { useError } from './ErrorContext';\r\n\r\nimport { MobileAuthView } from '../components/Auth/MobileAuthView';\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\ninterface AuthProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\r\n  console.log('🔐 AuthProvider initialized!');\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [loginAttempts, setLoginAttempts] = useState(0);\r\n  const [isLocked, setIsLocked] = useState(false);\r\n  const [isMobileAuthOpen, setIsMobileAuthOpen] = useState(false);\r\n  const [mobileAuthMode, setMobileAuthMode] = useState<'login' | 'signup' | 'profile'>('login');\r\n  const { setError } = useError();\r\n\r\n\r\n\r\n  // Initialize auth state with better error handling\r\n  useEffect(() => {\r\n    const initializeAuth = async () => {\r\n      try {\r\n        // Add timeout for session retrieval\r\n        const sessionPromise = supabase.auth.getSession();\r\n        const timeoutPromise = new Promise((_, reject) => {\r\n          setTimeout(() => reject(new Error('Session retrieval timed out')), 10000);\r\n        });\r\n\r\n        const { data: { session } } = await Promise.race([sessionPromise, timeoutPromise]) as any;\r\n\r\n        if (session?.user) {\r\n          await handleUserSession(session.user);\r\n        }\r\n      } catch (error) {\r\n        console.error('Auth initialization error:', error);\r\n\r\n        // In case of timeout or connection issues, try direct login mode\r\n        if (import.meta.env.VITE_DIRECT_LOGIN_ENABLED === 'true') {\r\n          console.log('Falling back to direct login mode due to auth initialization error');\r\n          const directLoginRole = import.meta.env.VITE_DIRECT_LOGIN_DEFAULT_ROLE || 'admin';\r\n          const tempUser: User = {\r\n            id: 'direct-login-user',\r\n            email: 'admin@sufiessences.com',\r\n            name: 'Direct Login User',\r\n            role: directLoginRole as 'admin' | 'seller' | 'customer',\r\n            isActive: true,\r\n            emailVerified: true,\r\n            createdAt: new Date(),\r\n          };\r\n          setUser(tempUser);\r\n          setError(null);\r\n        } else {\r\n          setError('Authentication initialization failed. Please refresh the page.');\r\n        }\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    initializeAuth();\r\n  }, []);\r\n\r\n\r\n\r\n  // Handle auth state changes with better error handling\r\n  useEffect(() => {\r\n    const handleAuthStateChange = async (event: AuthChangeEvent, session: Session | null) => {\r\n      try {\r\n        setLoading(true);\r\n\r\n        if (session?.user) {\r\n          await handleUserSession(session.user);\r\n        } else {\r\n          setUser(null);\r\n          setError(null);\r\n          // Clear any stored user data\r\n          localStorage.removeItem('user_preferences');\r\n          localStorage.removeItem('cart_items');\r\n        }\r\n      } catch (error) {\r\n        console.error('Auth state change error:', error);\r\n\r\n        // If there's an error during auth state change, fall back to direct login if enabled\r\n        if (import.meta.env.VITE_DIRECT_LOGIN_ENABLED === 'true' && session?.user) {\r\n          console.log('Falling back to direct login mode due to auth state change error');\r\n          const directLoginRole = import.meta.env.VITE_DIRECT_LOGIN_DEFAULT_ROLE || 'admin';\r\n          const tempUser: User = {\r\n            id: session.user.id || 'direct-login-user',\r\n            email: session.user.email || 'admin@sufiessences.com',\r\n            name: 'Direct Login User',\r\n            role: directLoginRole as 'admin' | 'seller' | 'customer',\r\n            isActive: true,\r\n            emailVerified: true,\r\n            createdAt: new Date(),\r\n          };\r\n          setUser(tempUser);\r\n          setError(null);\r\n        } else {\r\n          setError('Authentication error occurred. Please try refreshing the page.');\r\n        }\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    const { data: { subscription } } = supabase.auth.onAuthStateChange(handleAuthStateChange);\r\n    return () => subscription?.unsubscribe();\r\n  }, []);\r\n\r\n  const handleUserSession = async (authUser: any) => {\r\n    try {\r\n      const profileData = await getProfileForUser(authUser.id);\r\n\r\n      if (profileData) {\r\n        const fullUser: User = {\r\n          ...profileData,\r\n          email: authUser.email!,\r\n        };\r\n        setUser(fullUser);\r\n        setError(null);\r\n      } else {\r\n        // Create profile if it doesn't exist\r\n        const newProfile = await createUser({\r\n          email: authUser.email!,\r\n          name: authUser.user_metadata?.full_name || '',\r\n          role: authUser.user_metadata?.role || 'customer',\r\n          phone: authUser.user_metadata?.phone || '',\r\n          dateOfBirth: authUser.user_metadata?.date_of_birth || '',\r\n        });\r\n\r\n        if (newProfile) {\r\n          setUser(newProfile);\r\n        } else {\r\n          setUser(null);\r\n          setError('Failed to create user profile');\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.error('Session handling error:', err);\r\n      // Fallback for direct login mode when RLS policies aren't set up\r\n      if (import.meta.env.VITE_DIRECT_LOGIN_ENABLED === 'true') {\r\n        console.log('Direct login mode: Creating temporary user profile');\r\n        const directLoginRole = import.meta.env.VITE_DIRECT_LOGIN_DEFAULT_ROLE || 'admin';\r\n        const tempUser: User = {\r\n          id: authUser.id || 'direct-login-user',\r\n          email: authUser.email || 'admin@sufiessences.com',\r\n          name: 'Direct Login User',\r\n          role: directLoginRole as 'admin' | 'seller' | 'customer',\r\n          isActive: true,\r\n          emailVerified: true,\r\n          createdAt: new Date(),\r\n        };\r\n        setUser(tempUser);\r\n        setError(null);\r\n        return;\r\n      }\r\n      setError(err instanceof Error ? err.message : 'Authentication error');\r\n      setUser(null);\r\n    }\r\n  };\r\n\r\n\r\n\r\n  // Standard Authentication Methods with timeout handling\r\n  const signIn = async (email: string, password: string): Promise<void> => {\r\n    try {\r\n      // Add timeout wrapper for auth requests\r\n      const authPromise = supabase.auth.signInWithPassword({ email, password });\r\n\r\n      // Create timeout promise\r\n      const timeoutPromise = new Promise((_, reject) => {\r\n        setTimeout(() => reject(new Error('Authentication request timed out')), 15000);\r\n      });\r\n\r\n      // Race between auth and timeout\r\n      const { error } = await Promise.race([authPromise, timeoutPromise]) as any;\r\n\r\n      if (error) {\r\n        // Handle specific error cases\r\n        if (error.message.includes('Invalid login credentials')) {\r\n          throw new Error('Invalid credentials. Please check your email and password.');\r\n        } else if (error.message.includes('Email not confirmed')) {\r\n          throw new Error('Please confirm your email address before signing in.');\r\n        } else if (error.message.includes('Too many requests')) {\r\n          throw new Error('Too many login attempts. Please wait a moment and try again.');\r\n        } else if (error.message.includes('Account is temporarily locked')) {\r\n          throw new Error('Account is temporarily locked due to too many failed attempts. Please try again later.');\r\n        } else if (error.message.includes('timed out') || error.message.includes('aborted')) {\r\n          throw new Error('Connection timeout. Please check your internet connection and try again.');\r\n        } else {\r\n          throw new Error(error.message);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      if (error instanceof Error) {\r\n        if (error.message.includes('timed out') || error.message.includes('aborted')) {\r\n          throw new Error('Connection timeout. Please check your internet connection and try again.');\r\n        }\r\n        throw error;\r\n      }\r\n      throw new Error('An unexpected error occurred during sign in.');\r\n    }\r\n  };\r\n\r\n  const signUp = async (\r\n    email: string,\r\n    password: string,\r\n    additionalData?: Record<string, unknown>\r\n  ): Promise<void> => {\r\n    const { error } = await supabase.auth.signUp({\r\n      email,\r\n      password,\r\n      options: {\r\n        data: {\r\n          full_name: additionalData?.fullName || '',\r\n          phone: additionalData?.phone || '',\r\n          date_of_birth: additionalData?.dateOfBirth || '',\r\n          address: additionalData?.address || '',\r\n          subscribe_newsletter: additionalData?.subscribeNewsletter || false,\r\n          role: 'customer' // Default role for new users\r\n        }\r\n      }\r\n    });\r\n\r\n    if (error) {\r\n      throw new Error(error.message);\r\n    }\r\n\r\n    // Send welcome email after successful registration\r\n    try {\r\n      const { emailService } = await import('../services/emailService');\r\n      await emailService.sendWelcomeEmail({\r\n        email: email,\r\n        name: (additionalData?.fullName as string) || 'Customer'\r\n      });\r\n    } catch (emailError) {\r\n      console.error('Failed to send welcome email:', emailError);\r\n      // Don't fail registration if email fails\r\n    }\r\n  };\r\n\r\n  const signOut = async (): Promise<void> => {\r\n    const { error } = await supabase.auth.signOut();\r\n    if (error) {\r\n      throw new Error(error.message);\r\n    }\r\n\r\n    // Clear user data\r\n    setUser(null);\r\n    localStorage.removeItem('user_preferences');\r\n    localStorage.removeItem('cart_items');\r\n  };\r\n\r\n  const logout = async () => {\r\n    await signOut();\r\n  };\r\n\r\n  const login = async (email: string, password: string): Promise<string | null> => {\r\n    try {\r\n      await signIn(email, password);\r\n      return null;\r\n    } catch (error) {\r\n      return error instanceof Error ? error.message : 'Login failed';\r\n    }\r\n  };\r\n\r\n  const register = async (userData: Partial<User>): Promise<boolean> => {\r\n    try {\r\n      await signUp(\r\n        userData.email!,\r\n        userData.password!,\r\n        {\r\n          fullName: userData.name,\r\n          phone: userData.phone,\r\n          dateOfBirth: userData.dateOfBirth,\r\n          address: userData.address || ''\r\n        }\r\n      );\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Registration error:', error);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // Mobile Authentication Methods\r\n  const openMobileAuth = (mode: 'login' | 'signup' | 'profile' = 'login') => {\r\n    setMobileAuthMode(mode);\r\n    setIsMobileAuthOpen(true);\r\n  };\r\n\r\n  const closeMobileAuth = () => {\r\n    setIsMobileAuthOpen(false);\r\n  };\r\n\r\n  const value: AuthContextType = {\r\n    user,\r\n    loading,\r\n    loginAttempts,\r\n    isLocked,\r\n    signIn,\r\n    signUp,\r\n    logout,\r\n    signOut,\r\n    login,\r\n    register,\r\n    resetPassword: async () => { },\r\n    updatePassword: async () => { },\r\n    resendVerification: async () => { },\r\n    updateProfile: async () => { },\r\n\r\n    openMobileAuth,\r\n    closeMobileAuth,\r\n    isMobileAuthOpen,\r\n    mobileAuthMode\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n      {/* Mobile Auth View */}\r\n      <MobileAuthView\r\n        isOpen={isMobileAuthOpen}\r\n        onClose={closeMobileAuth}\r\n        initialMode={mobileAuthMode}\r\n      />\r\n    </AuthContext.Provider>\r\n  );\r\n};","import React, { createContext, useContext, useState, ReactNode, useEffect, useRef } from 'react';\r\nimport { CheckCircle, AlertTriangle, Info, X, AlertCircle } from 'lucide-react';\r\nimport { AppError, handleSupabaseError } from '../utils/errorHandling';\r\n\r\ninterface Notification {\r\n  id: string;\r\n  type: 'success' | 'error' | 'info' | 'warning';\r\n  title: string;\r\n  message: string;\r\n  duration?: number;\r\n  timestamp: number;\r\n  isVisible?: boolean;\r\n  isDismissing?: boolean;\r\n}\r\n\r\ninterface NotificationContextType {\r\n  showNotification: (notification: Omit<Notification, 'id' | 'timestamp'>) => void;\r\n  showError: (error: Error | AppError, context?: string) => void;\r\n  showSuccess: (message: string, title?: string) => void;\r\n  showInfo: (message: string, title?: string) => void;\r\n  showWarning: (message: string, title?: string) => void;\r\n}\r\n\r\nconst NotificationContext = createContext<NotificationContextType | undefined>(undefined);\r\n\r\nexport const useNotification = () => {\r\n  const context = useContext(NotificationContext);\r\n  if (!context) {\r\n    throw new Error('useNotification must be used within a NotificationProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\ninterface NotificationProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const NotificationProvider: React.FC<NotificationProviderProps> = ({ children }) => {\r\n  const [notifications, setNotifications] = useState<Notification[]>([]);\r\n  const notificationTimers = useRef<Map<string, NodeJS.Timeout>>(new Map());\r\n\r\n  const showNotification = (notification: Omit<Notification, 'id' | 'timestamp'>) => {\r\n    const timestamp = Date.now();\r\n    const id = `${timestamp}-${Math.random().toString(36).substring(2, 9)}`;\r\n    const duration = notification.duration || 5000;\r\n\r\n    // Check for duplicates within the last 2 seconds\r\n    const isDuplicate = notifications.some(n =>\r\n      n.type === notification.type &&\r\n      n.message === notification.message &&\r\n      n.title === notification.title &&\r\n      timestamp - n.timestamp < 2000\r\n    );\r\n\r\n    if (isDuplicate) {\r\n      return; // Prevent duplicate notifications\r\n    }\r\n\r\n    const newNotification: Notification = {\r\n      ...notification,\r\n      id,\r\n      timestamp,\r\n      duration,\r\n      isVisible: false,\r\n      isDismissing: false\r\n    };\r\n\r\n    setNotifications(prev => [newNotification, ...prev]);\r\n\r\n    // Show notification with animation\r\n    setTimeout(() => {\r\n      setNotifications(prev =>\r\n        prev.map(n => n.id === id ? { ...n, isVisible: true } : n)\r\n      );\r\n    }, 10);\r\n\r\n    // Auto-dismiss notification\r\n    if (duration > 0) {\r\n      const timer = setTimeout(() => {\r\n        dismissNotification(id);\r\n      }, duration);\r\n\r\n      notificationTimers.current.set(id, timer);\r\n    }\r\n  };\r\n\r\n  const dismissNotification = (id: string) => {\r\n    // Clear any existing timer\r\n    const timer = notificationTimers.current.get(id);\r\n    if (timer) {\r\n      clearTimeout(timer);\r\n      notificationTimers.current.delete(id);\r\n    }\r\n\r\n    // Start dismiss animation\r\n    setNotifications(prev =>\r\n      prev.map(n => n.id === id ? { ...n, isDismissing: true } : n)\r\n    );\r\n\r\n    // Remove after animation completes\r\n    setTimeout(() => {\r\n      setNotifications(prev => prev.filter(n => n.id !== id));\r\n    }, 300);\r\n  };\r\n\r\n  const removeNotification = (id: string) => {\r\n    dismissNotification(id);\r\n  };\r\n\r\n  // Clean up timers on unmount\r\n  useEffect(() => {\r\n    return () => {\r\n      notificationTimers.current.forEach(timer => clearTimeout(timer));\r\n      notificationTimers.current.clear();\r\n    };\r\n  }, []);\r\n\r\n  const showError = (error: Error | AppError, context?: string) => {\r\n    const appError = 'type' in error ? error : handleSupabaseError(error);\r\n\r\n    showNotification({\r\n      type: 'error',\r\n      title: 'Oops! Something went wrong',\r\n      message: appError.userMessage,\r\n      duration: 7000\r\n    });\r\n  };\r\n\r\n  const showSuccess = (message: string, title: string = 'Success!') => {\r\n    showNotification({\r\n      type: 'success',\r\n      title,\r\n      message,\r\n      duration: 4000\r\n    });\r\n  };\r\n\r\n  const showInfo = (message: string, title: string = 'Info') => {\r\n    showNotification({\r\n      type: 'info',\r\n      title,\r\n      message,\r\n      duration: 5000\r\n    });\r\n  };\r\n\r\n  const showWarning = (message: string, title: string = 'Heads up!') => {\r\n    showNotification({\r\n      type: 'warning',\r\n      title,\r\n      message,\r\n      duration: 6000\r\n    });\r\n  };\r\n\r\n  // Modern e-commerce toast notification component\r\n  const ToastNotification: React.FC<{ notification: Notification }> = ({ notification }) => {\r\n    const [progress, setProgress] = useState(100);\r\n    const progressRef = useRef<NodeJS.Timeout | null>(null);\r\n\r\n    useEffect(() => {\r\n      if (notification.duration && notification.duration > 0 && notification.isVisible && !notification.isDismissing) {\r\n        const startTime = Date.now();\r\n        const duration = notification.duration;\r\n        const updateProgress = () => {\r\n          const elapsed = Date.now() - startTime;\r\n          const remaining = Math.max(0, 100 - (elapsed / duration) * 100);\r\n          setProgress(remaining);\r\n\r\n          if (remaining > 0) {\r\n            progressRef.current = setTimeout(updateProgress, 50);\r\n          }\r\n        };\r\n        updateProgress();\r\n      }\r\n\r\n      return () => {\r\n        if (progressRef.current) {\r\n          clearTimeout(progressRef.current);\r\n        }\r\n      };\r\n    }, [notification.duration, notification.isVisible, notification.isDismissing]);\r\n\r\n    const getStyles = () => {\r\n      switch (notification.type) {\r\n        case 'success':\r\n          return {\r\n            container: 'bg-white border-l-4 border-emerald-500 shadow-lg shadow-emerald-500/20',\r\n            icon: <CheckCircle className=\"h-5 w-5 text-emerald-600\" />,\r\n            iconBg: 'bg-emerald-50',\r\n            progress: 'bg-emerald-500'\r\n          };\r\n        case 'error':\r\n          return {\r\n            container: 'bg-white border-l-4 border-red-500 shadow-lg shadow-red-500/20',\r\n            icon: <AlertCircle className=\"h-5 w-5 text-red-600\" />,\r\n            iconBg: 'bg-red-50',\r\n            progress: 'bg-red-500'\r\n          };\r\n        case 'warning':\r\n          return {\r\n            container: 'bg-white border-l-4 border-amber-500 shadow-lg shadow-amber-500/20',\r\n            icon: <AlertTriangle className=\"h-5 w-5 text-amber-600\" />,\r\n            iconBg: 'bg-amber-50',\r\n            progress: 'bg-amber-500'\r\n          };\r\n        case 'info':\r\n        default:\r\n          return {\r\n            container: 'bg-white border-l-4 border-blue-500 shadow-lg shadow-blue-500/20',\r\n            icon: <Info className=\"h-5 w-5 text-blue-600\" />,\r\n            iconBg: 'bg-blue-50',\r\n            progress: 'bg-blue-500'\r\n          };\r\n      }\r\n    };\r\n\r\n    const styles = getStyles();\r\n\r\n    return (\r\n      <div\r\n        className={`\r\n          ${styles.container}\r\n          rounded-lg overflow-hidden backdrop-blur-sm max-w-sm w-full\r\n          transform transition-all duration-300 ease-out\r\n          ${notification.isVisible && !notification.isDismissing\r\n            ? 'translate-x-0 opacity-100 scale-100'\r\n            : 'translate-x-full opacity-0 scale-95'\r\n          }\r\n          ${notification.isDismissing ? 'translate-x-full opacity-0 scale-95' : ''}\r\n        `}\r\n      >\r\n        <div className=\"p-4\">\r\n          <div className=\"flex items-start\">\r\n            <div className={`flex-shrink-0 ${styles.iconBg} rounded-full p-2 mr-3`}>\r\n              {styles.icon}\r\n            </div>\r\n            <div className=\"flex-1 min-w-0\">\r\n              <h4 className=\"text-sm font-semibold text-gray-900 mb-1\">\r\n                {notification.title}\r\n              </h4>\r\n              <p className=\"text-sm text-gray-600 leading-relaxed\">\r\n                {notification.message}\r\n              </p>\r\n            </div>\r\n            <button\r\n              onClick={() => removeNotification(notification.id)}\r\n              className=\"flex-shrink-0 ml-3 p-1 rounded-lg hover:bg-gray-100 transition-colors duration-200 group\"\r\n            >\r\n              <X className=\"h-4 w-4 text-gray-400 group-hover:text-gray-600\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Progress bar */}\r\n        {notification.duration && notification.duration > 0 && (\r\n          <div className=\"h-1 bg-gray-200\">\r\n            <div\r\n              className={`h-full ${styles.progress} transition-all duration-75 ease-linear`}\r\n              style={{ width: `${progress}%` }}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // Scroll-aware positioning for notifications\r\n  useEffect(() => {\r\n    let ticking = false;\r\n\r\n    const updateNotificationPosition = () => {\r\n      const container = document.querySelector('.notification-container');\r\n      if (container) {\r\n        const scrollTop = window.pageYOffset || document.documentElement.scrollTop;\r\n        // Keep notifications visible in viewport but not too close to edges\r\n        const topPosition = Math.max(20, scrollTop + 20);\r\n        (container as HTMLElement).style.top = `${topPosition}px`;\r\n      }\r\n    };\r\n\r\n    const handleScroll = () => {\r\n      if (!ticking) {\r\n        requestAnimationFrame(() => {\r\n          updateNotificationPosition();\r\n          ticking = false;\r\n        });\r\n        ticking = true;\r\n      }\r\n    };\r\n\r\n    window.addEventListener('scroll', handleScroll, { passive: true });\r\n    return () => window.removeEventListener('scroll', handleScroll);\r\n  }, []);\r\n\r\n  return (\r\n    <NotificationContext.Provider value={{\r\n      showNotification,\r\n      showError,\r\n      showSuccess,\r\n      showInfo,\r\n      showWarning\r\n    }}>\r\n      {children}\r\n\r\n      {/* Modern toast container with viewport-aware positioning */}\r\n      <div\r\n        className=\"fixed top-4 right-4 z-[9999] pointer-events-none notification-container\"\r\n        style={{\r\n          position: 'fixed',\r\n          top: '1rem',\r\n          right: '1rem',\r\n          maxHeight: 'calc(100vh - 2rem)',\r\n          overflow: 'hidden'\r\n        }}\r\n      >\r\n        <div className=\"flex flex-col-reverse gap-3 max-w-sm w-full\">\r\n          {notifications.map((notification) => (\r\n            <div key={notification.id} className=\"pointer-events-auto\">\r\n              <ToastNotification notification={notification} />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </NotificationContext.Provider>\r\n  );\r\n};","import React, { createContext, useContext, useState, ReactNode, useEffect, useCallback } from 'react';\r\nimport { CartItem, Product, CartContextType } from '../types';\r\nimport {\r\n  getCartItems,\r\n  addToCart as addToCartDB,\r\n  updateCartItemQuantity,\r\n  removeFromCart as removeFromCartDB,\r\n  clearCart as clearCartDB\r\n} from '../lib/supabase';\r\nimport { useAuth } from './AuthContext';\r\nimport { useNotification } from './NotificationContext';\r\n\r\nconst CartContext = createContext<CartContextType | undefined>(undefined);\r\n\r\nexport const useCart = () => {\r\n  const context = useContext(CartContext);\r\n  if (!context) throw new Error('useCart must be used within a CartProvider');\r\n  return context;\r\n};\r\n\r\nexport const CartProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\r\n  const { user } = useAuth();\r\n  const { showNotification } = useNotification();\r\n  const [items, setItems] = useState<CartItem[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [guestCart, setGuestCart] = useState<CartItem[]>([]);\r\n\r\n  // Guest cart management functions\r\n  const loadGuestCart = useCallback(() => {\r\n    try {\r\n      const savedCart = localStorage.getItem('guestCart');\r\n      if (savedCart) {\r\n        const parsedCart = JSON.parse(savedCart);\r\n        setGuestCart(parsedCart);\r\n        return parsedCart;\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading guest cart:', error);\r\n    }\r\n    return [];\r\n  }, []);\r\n\r\n  const saveGuestCart = useCallback((cartItems: CartItem[]) => {\r\n    try {\r\n      localStorage.setItem('guestCart', JSON.stringify(cartItems));\r\n      setGuestCart(cartItems);\r\n    } catch (error) {\r\n      console.error('Error saving guest cart:', error);\r\n    }\r\n  }, []);\r\n\r\n  const mergeGuestCartWithUserCart = useCallback(async () => {\r\n    if (user && guestCart.length > 0) {\r\n      try {\r\n        // Add guest cart items to user's database cart\r\n        for (const item of guestCart) {\r\n          await addToCartDB(item.product.id, item.variantId, item.quantity);\r\n        }\r\n        // Clear guest cart after merging\r\n        localStorage.removeItem('guestCart');\r\n        setGuestCart([]);\r\n        return true; // Indicate successful merge\r\n      } catch (error) {\r\n        console.error('Error merging guest cart:', error);\r\n        return false;\r\n      }\r\n    }\r\n    return false;\r\n  }, [user, guestCart]);\r\n\r\n  const fetchCart = useCallback(async () => {\r\n    setLoading(true);\r\n\r\n    try {\r\n      if (user) {\r\n        // Fetch authenticated user's cart from database\r\n        const cartItems = await getCartItems();\r\n        setItems(cartItems);\r\n      } else {\r\n        // Load guest cart from localStorage\r\n        const guestCartItems = loadGuestCart();\r\n        setItems(guestCartItems);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching cart:', error);\r\n      showNotification({\r\n        type: 'error',\r\n        title: 'Error',\r\n        message: 'Failed to fetch cart items. Please try again later.'\r\n      });\r\n    }\r\n    setLoading(false);\r\n  }, [user, showNotification, loadGuestCart]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    fetchCart();\r\n  }, [fetchCart]);\r\n\r\n  // Load guest cart on component mount\r\n  useEffect(() => {\r\n    if (!user) {\r\n      loadGuestCart();\r\n    }\r\n  }, [user, loadGuestCart]);\r\n\r\n  // Merge guest cart when user logs in\r\n  useEffect(() => {\r\n    if (user && guestCart.length > 0) {\r\n      mergeGuestCartWithUserCart().then((merged) => {\r\n        if (merged) {\r\n          fetchCart(); // Refresh cart after successful merge\r\n        }\r\n      });\r\n    }\r\n  }, [user, guestCart.length, mergeGuestCartWithUserCart, fetchCart]);\r\n\r\n  const addItem = async (product: Product, quantity: number = 1) => {\r\n    try {\r\n      if (user) {\r\n        // Add to authenticated user's database cart\r\n        const success = await addToCartDB(product.id, undefined, quantity);\r\n        if (success) {\r\n          await fetchCart();\r\n          showNotification({ type: 'success', title: 'Added to Cart', message: `${product.name} has been added.` });\r\n        } else {\r\n          showNotification({ type: 'error', title: 'Error', message: 'Could not add item to cart.' });\r\n        }\r\n      } else {\r\n        // Add to guest cart in localStorage\r\n        const currentGuestCart = loadGuestCart();\r\n        const existingItemIndex = currentGuestCart.findIndex(item => item.product.id === product.id);\r\n\r\n        let updatedCart: CartItem[];\r\n        if (existingItemIndex >= 0) {\r\n          // Update existing item quantity\r\n          updatedCart = [...currentGuestCart];\r\n          updatedCart[existingItemIndex].quantity += quantity;\r\n        } else {\r\n          // Add new item\r\n          const newItem: CartItem = {\r\n            id: `guest-${Date.now()}-${product.id}`,\r\n            product,\r\n            productId: product.id,\r\n            quantity,\r\n            variantId: undefined,\r\n            createdAt: new Date()\r\n          };\r\n          updatedCart = [...currentGuestCart, newItem];\r\n        }\r\n\r\n        saveGuestCart(updatedCart);\r\n        setItems(updatedCart);\r\n        showNotification({ type: 'success', title: 'Added to Cart', message: `${product.name} has been added.` });\r\n      }\r\n    } catch (error) {\r\n      console.error('Error adding to cart:', error);\r\n      showNotification({ type: 'error', title: 'Error', message: 'Failed to add item to cart. Please try again later.' });\r\n    }\r\n  };\r\n\r\n  const removeItem = async (productId: string) => {\r\n    try {\r\n      if (user) {\r\n        // Remove from authenticated user's database cart\r\n        const success = await removeFromCartDB(productId);\r\n        if (success) {\r\n          await fetchCart();\r\n        } else {\r\n          showNotification({ type: 'error', title: 'Error', message: 'Failed to remove item from cart.' });\r\n        }\r\n      } else {\r\n        // Remove from guest cart\r\n        const currentGuestCart = loadGuestCart();\r\n        const updatedCart = currentGuestCart.filter(item => item.product.id !== productId);\r\n        saveGuestCart(updatedCart);\r\n        setItems(updatedCart);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error removing from cart:', error);\r\n      showNotification({ type: 'error', title: 'Error', message: 'Failed to remove item from cart. Please try again later.' });\r\n    }\r\n  };\r\n\r\n  const updateQuantity = async (productId: string, quantity: number) => {\r\n    if (quantity <= 0) {\r\n      await removeItem(productId);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      if (user) {\r\n        // Update authenticated user's database cart\r\n        const success = await updateCartItemQuantity(productId, quantity);\r\n        if (success) {\r\n          await fetchCart();\r\n        } else {\r\n          showNotification({ type: 'error', title: 'Error', message: 'Failed to update item quantity.' });\r\n        }\r\n      } else {\r\n        // Update guest cart\r\n        const currentGuestCart = loadGuestCart();\r\n        const updatedCart = currentGuestCart.map(item =>\r\n          item.product.id === productId ? { ...item, quantity } : item\r\n        );\r\n        saveGuestCart(updatedCart);\r\n        setItems(updatedCart);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating quantity:', error);\r\n      showNotification({ type: 'error', title: 'Error', message: 'Failed to update item quantity. Please try again later.' });\r\n    }\r\n  };\r\n\r\n  const clearCart = async () => {\r\n    try {\r\n      if (user) {\r\n        // Clear authenticated user's database cart\r\n        const success = await clearCartDB();\r\n        if (success) {\r\n          setItems([]);\r\n        } else {\r\n          showNotification({ type: 'error', title: 'Error', message: 'Failed to clear cart.' });\r\n        }\r\n      } else {\r\n        // Clear guest cart\r\n        localStorage.removeItem('guestCart');\r\n        setGuestCart([]);\r\n        setItems([]);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error clearing cart:', error);\r\n      showNotification({ type: 'error', title: 'Error', message: 'Failed to clear cart. Please try again later.' });\r\n    }\r\n  };\r\n\r\n  const total = items.reduce((sum, item) => sum + (item.product.price * item.quantity), 0);\r\n  const itemCount = items.reduce((sum, item) => sum + item.quantity, 0);\r\n\r\n  const value: CartContextType = {\r\n    items,\r\n    addItem,\r\n    removeItem,\r\n    updateQuantity,\r\n    clearCart,\r\n    total,\r\n    itemCount,\r\n    loading\r\n  };\r\n\r\n  return <CartContext.Provider value={value}>{children}</CartContext.Provider>;\r\n};","import React, { createContext, useContext, useState, ReactNode, useEffect, useCallback } from 'react';\r\nimport { Product, WishlistItem, WishlistContextType } from '../types';\r\nimport {\r\n  getWishlistItems,\r\n  addToWishlist as addToWishlistDB,\r\n  removeFromWishlist as removeFromWishlistDB\r\n} from '../lib/supabase';\r\nimport { useAuth } from './AuthContext';\r\nimport { useNotification } from './NotificationContext';\r\n\r\nconst WishlistContext = createContext<WishlistContextType | undefined>(undefined);\r\n\r\nexport const useWishlist = () => {\r\n  const context = useContext(WishlistContext);\r\n  if (!context) throw new Error('useWishlist must be used within a WishlistProvider');\r\n  return context;\r\n};\r\n\r\nexport const WishlistProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\r\n  const { user } = useAuth();\r\n  const { showNotification } = useNotification();\r\n  const [items, setItems] = useState<WishlistItem[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const fetchWishlist = useCallback(async () => {\r\n    if (!user) {\r\n      setItems([]);\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n\r\n    try {\r\n      const wishlistItems = await getWishlistItems();\r\n      setItems(wishlistItems);\r\n    } catch (error) {\r\n      console.error('Error fetching wishlist:', error);\r\n      showNotification({\r\n        type: 'error',\r\n        title: 'Error',\r\n        message: 'Failed to fetch wishlist items. Please try again later.'\r\n      });\r\n    }\r\n    setLoading(false);\r\n  }, [user, showNotification]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    fetchWishlist();\r\n  }, [fetchWishlist]);\r\n\r\n  const addItem = async (product: Product) => {\r\n    if (!user) {\r\n      showNotification({ \r\n        type: 'info', \r\n        title: 'Authentication Required', \r\n        message: 'Please log in or create an account to add items to your wishlist.' \r\n      });\r\n      return;\r\n    }\r\n\r\n    if (isInWishlist(product.id)) {\r\n      await removeItem(product.id);\r\n      showNotification({ type: 'info', title: 'Removed from Wishlist', message: `${product.name} removed from your wishlist.` });\r\n    } else {\r\n      try {\r\n        const success = await addToWishlistDB(product.id);\r\n        if (success) {\r\n          await fetchWishlist();\r\n          showNotification({ type: 'success', title: 'Added to Wishlist', message: `${product.name} added to your wishlist.` });\r\n        } else {\r\n          showNotification({ type: 'error', title: 'Error', message: 'Could not add item to wishlist.' });\r\n        }\r\n      } catch (error) {\r\n        console.error('Error adding to wishlist:', error);\r\n        showNotification({ type: 'error', title: 'Error', message: 'Failed to add item to wishlist. Please try again later.' });\r\n      }\r\n    }\r\n  };\r\n\r\n  const removeItem = async (productId: string) => {\r\n    if (!user) return;\r\n\r\n    try {\r\n      const success = await removeFromWishlistDB(productId);\r\n      if (success) {\r\n        await fetchWishlist();\r\n      } else {\r\n        showNotification({ type: 'error', title: 'Error', message: 'Failed to remove item from wishlist.' });\r\n      }\r\n    } catch (error) {\r\n      console.error('Error removing from wishlist:', error);\r\n      showNotification({ type: 'error', title: 'Error', message: 'Failed to remove item from wishlist. Please try again later.' });\r\n    }\r\n  };\r\n\r\n  const isInWishlist = (productId: string) => items.some(item => item.product.id === productId);\r\n\r\n  const clearWishlist = async () => {\r\n    if (!user) return;\r\n\r\n    try {\r\n      // Clear all items one by one using the removeFromWishlist function\r\n      const promises = items.map(item => removeFromWishlistDB(item.product.id));\r\n      await Promise.all(promises);\r\n      setItems([]);\r\n    } catch (error) {\r\n      console.error('Error clearing wishlist:', error);\r\n      showNotification({ type: 'error', title: 'Error', message: 'Failed to clear wishlist. Please try again later.' });\r\n    }\r\n  };\r\n\r\n  const value: WishlistContextType = {\r\n    items,\r\n    addItem,\r\n    removeItem,\r\n    isInWishlist,\r\n    clearWishlist,\r\n    loading\r\n  };\r\n\r\n  return <WishlistContext.Provider value={value}>{children}</WishlistContext.Provider>;\r\n};","import React, { createContext, useContext, useState, ReactNode, useEffect, useCallback, useMemo, memo } from 'react';\r\nimport { Product, ProductContextType, Review, Category } from '../types';\r\nimport { useAuth } from './AuthContext';\r\nimport {\r\n  getProducts,\r\n  getProductsBasic,\r\n  getProductsMinimal,\r\n  getFeaturedProducts,\r\n  getCategories,\r\n  addReview,\r\n  supabase\r\n} from '../lib/supabase';\r\nimport {\r\n  createProduct,\r\n  updateProduct,\r\n  deleteProduct,\r\n  createCategory,\r\n  updateCategory,\r\n  deleteCategory\r\n} from '../lib/crudOperations';\r\nimport { useError } from './ErrorContext';\r\nimport { productCache, categoryCache, generateCacheKey, invalidateProductCache, invalidateCategoryCache } from '../utils/cache';\r\n\r\nconst ProductContext = createContext<ProductContextType | undefined>(undefined);\r\n\r\nexport const useProducts = () => {\r\n  const context = useContext(ProductContext);\r\n  if (!context) throw new Error('useProducts must be used within a ProductProvider');\r\n  return context;\r\n};\r\n\r\nexport const ProductProvider: React.FC<{ children: ReactNode }> = memo(({ children }) => {\r\n  const [products, setProducts] = useState<Product[]>([]);\r\n  const [featuredProducts, setFeaturedProducts] = useState<Product[]>([]);\r\n  const [categories, setCategories] = useState<Category[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [basicLoading, setBasicLoading] = useState(false);\r\n  const [detailsLoading, setDetailsLoading] = useState(false);\r\n  const [featuredLoading, setFeaturedLoading] = useState(false);\r\n  const [isUsingMockData, setIsUsingMockData] = useState(false);\r\n  const { setError } = useError();\r\n  const { user: authUser } = useAuth();\r\n\r\n  // Debug: Log initial state\r\n  useEffect(() => {\r\n    console.log('ProductProvider initialized');\r\n  }, []);\r\n\r\n  // Debug: Log when products/categories change\r\n  useEffect(() => {\r\n    console.log('Products state updated:', products.length);\r\n  }, [products]);\r\n\r\n  useEffect(() => {\r\n    console.log('Categories state updated:', categories.length);\r\n  }, [categories]);\r\n\r\n  useEffect(() => {\r\n    console.log('Loading state updated:', { loading, basicLoading, detailsLoading });\r\n  }, [loading, basicLoading, detailsLoading]);\r\n\r\n  useEffect(() => {\r\n    console.log('Using mock data state updated:', isUsingMockData);\r\n  }, [isUsingMockData]);\r\n\r\n  const fetchCategories = useCallback(async () => {\r\n    console.log('🔥 fetchCategories called!');\r\n    try {\r\n      // Check cache first\r\n      const cacheKey = generateCacheKey('categories');\r\n      const cachedCategories = categoryCache.get(cacheKey);\r\n\r\n      if (cachedCategories) {\r\n        console.log('Using cached categories');\r\n        setCategories(cachedCategories as Category[]);\r\n        return;\r\n      }\r\n\r\n      // Use working REST API approach instead of hanging Supabase client\r\n      const { testDirectRestAPI } = await import('../lib/supabase');\r\n      const result = await testDirectRestAPI();\r\n\r\n      if (result.success && result.data) {\r\n        // Transform the REST API data to match our Category interface\r\n        const transformedCategories = result.data.map(cat => ({\r\n          id: cat.id,\r\n          name: cat.name,\r\n          slug: cat.slug || cat.name.toLowerCase().replace(/\\s+/g, '-'),\r\n          description: cat.description || `${cat.name} products`,\r\n          imageUrl: cat.image_url || 'https://via.placeholder.com/400',\r\n          parentId: cat.parent_id,\r\n          sortOrder: cat.sort_order || 0,\r\n          isActive: cat.is_active !== false,\r\n          createdAt: new Date(cat.created_at || Date.now()),\r\n          updatedAt: new Date(cat.updated_at || Date.now())\r\n        }));\r\n\r\n        console.log('Using database categories via REST API:', transformedCategories.length);\r\n        setCategories(transformedCategories);\r\n        setIsUsingMockData(false);\r\n\r\n        // Cache the results\r\n        categoryCache.set(cacheKey, transformedCategories);\r\n      } else {\r\n        throw new Error(result.error || 'Failed to fetch categories');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching categories:', error);\r\n      setError('Failed to load categories from database');\r\n      setCategories([]);\r\n      setIsUsingMockData(false);\r\n    }\r\n  }, [setError]);\r\n\r\n  const fetchFeaturedProducts = useCallback(async (limit: number = 8) => {\r\n    console.log('🔥 fetchFeaturedProducts called with limit:', limit);\r\n    try {\r\n      setFeaturedLoading(true);\r\n      const cacheKey = generateCacheKey('featured-products', { limit });\r\n      const cached = productCache.get(cacheKey);\r\n\r\n      if (cached) {\r\n        console.log('Using cached featured products');\r\n        setFeaturedProducts(cached as Product[]);\r\n        setFeaturedLoading(false);\r\n        return;\r\n      }\r\n\r\n      const featuredData = await getFeaturedProducts(limit);\r\n\r\n      console.log('Using database featured products:', featuredData.length);\r\n      setFeaturedProducts(featuredData);\r\n      setIsUsingMockData(false);\r\n      productCache.set(cacheKey, featuredData);\r\n    } catch (error) {\r\n      console.error('Error fetching featured products:', error);\r\n      setError('Failed to load featured products from database');\r\n      setFeaturedProducts([]);\r\n      setIsUsingMockData(false);\r\n    } finally {\r\n      setFeaturedLoading(false);\r\n    }\r\n  }, [setError]);\r\n\r\n  // Optimized loading: fetch products and categories in parallel\r\n  const fetchProducts = useCallback(async (forceRefresh = false) => {\r\n    setLoading(true);\r\n    setBasicLoading(true);\r\n\r\n    try {\r\n      // Check cache first (unless force refresh)\r\n      const productCacheKey = generateCacheKey('products-basic');\r\n      const categoryCacheKey = generateCacheKey('categories');\r\n\r\n      const cachedProducts = !forceRefresh ? productCache.get(productCacheKey) : null;\r\n      const cachedCategories = !forceRefresh ? categoryCache.get(categoryCacheKey) : null;\r\n\r\n      if (cachedProducts && cachedCategories) {\r\n        console.log('Using cached products and categories');\r\n        setProducts(cachedProducts as Product[]);\r\n        setCategories(cachedCategories as Category[]);\r\n        setBasicLoading(false);\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      // Try to fetch from database first\r\n      try {\r\n        console.log('Attempting to fetch products from database');\r\n        const [productsResult, categoriesResult] = await Promise.all([\r\n          getProductsBasic({ limit: 50 }),\r\n          getCategories()\r\n        ]);\r\n\r\n        console.log('Database fetch results:', {\r\n          productsCount: productsResult.length,\r\n          categoriesCount: categoriesResult.length\r\n        });\r\n\r\n        // If we get data from database, use it\r\n        console.log('Using database products');\r\n        setProducts(productsResult);\r\n        productCache.set(productCacheKey, productsResult);\r\n        setIsUsingMockData(false);\r\n\r\n        console.log('Using database categories');\r\n        setCategories(categoriesResult);\r\n        categoryCache.set(categoryCacheKey, categoriesResult);\r\n        setIsUsingMockData(false);\r\n      } catch (dbError) {\r\n        // If database fetch fails, show error but don't use mock data\r\n        console.log('Database error:', dbError);\r\n        setError('Failed to load data from database');\r\n        setProducts([]);\r\n        setCategories([]);\r\n        setIsUsingMockData(false);\r\n      }\r\n\r\n      setBasicLoading(false);\r\n\r\n      // Optionally fetch full product details in background (non-blocking)\r\n      if (!forceRefresh) {\r\n        setDetailsLoading(true);\r\n        setTimeout(async () => {\r\n          try {\r\n            const fullProductsData = await getProducts({ limit: 50 });\r\n            console.log('Fetched full product details:', fullProductsData.length);\r\n            setProducts(fullProductsData);\r\n            productCache.set('products-full', fullProductsData);\r\n          } catch (detailError) {\r\n            console.warn('Failed to fetch full product details, using basic data:', detailError);\r\n          } finally {\r\n            setDetailsLoading(false);\r\n          }\r\n        }, 100); // Small delay to not block UI\r\n      }\r\n\r\n    } catch (error) {\r\n      if (error instanceof Error && error.message.includes('infinite recursion')) {\r\n        setError('DATABASE SETUP ERROR: Your database security policies are causing an infinite loop. This is a common setup issue. Please run the provided SQL script in your Supabase SQL Editor to fix it.');\r\n      } else {\r\n        console.log('Database error');\r\n        setError('Failed to load data from database');\r\n        setProducts([]);\r\n        setCategories([]);\r\n        setIsUsingMockData(false);\r\n      }\r\n      console.error('Error fetching products:', error);\r\n      setBasicLoading(false);\r\n      setDetailsLoading(false);\r\n    }\r\n    setLoading(false);\r\n  }, [setError]);\r\n\r\n\r\n\r\n  // Auto-fetch products and featured products on context initialization\r\n  useEffect(() => {\r\n    console.log('ProductContext: Auto-fetching products on initialization');\r\n    fetchProducts();\r\n  }, [fetchProducts]);\r\n\r\n  useEffect(() => {\r\n    console.log('ProductContext: Auto-fetching featured products on initialization');\r\n    fetchFeaturedProducts();\r\n  }, [fetchFeaturedProducts]);\r\n\r\n  useEffect(() => {\r\n    console.log('ProductContext: Auto-fetching categories on initialization');\r\n    fetchCategories();\r\n  }, [fetchCategories]);\r\n\r\n  // CRUD functions with new implementation\r\n  const addProduct = async (productData: Omit<Product, 'id' | 'createdAt' | 'reviews' | 'rating' | 'reviewCount'>) => {\r\n    try {\r\n      const sellerId = authUser?.id;\r\n      const newProduct = await createProduct({\r\n        name: productData.name,\r\n        description: productData.description,\r\n        price: productData.price,\r\n        categoryId: productData.categoryId,\r\n        sellerId: sellerId,\r\n        stock: productData.stock,\r\n        imageUrl: productData.images?.[0] || '', // Use first image from array\r\n        featured: productData.featured\r\n      });\r\n\r\n      if (newProduct) {\r\n        invalidateProductCache();\r\n        await fetchProducts(true);\r\n        setError(null);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error adding product:', error);\r\n      setError('Error adding product: ' + (error instanceof Error ? error.message : 'Unknown error'));\r\n    }\r\n  };\r\n\r\n  const updateProductData = async (updatedProduct: Product) => {\r\n    try {\r\n      const { id, createdAt, reviews, rating, reviewCount, ...updates } = updatedProduct;\r\n\r\n      const result = await updateProduct(id, updates);\r\n      if (result) {\r\n        invalidateProductCache();\r\n        await fetchProducts(true);\r\n        setError(null);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating product:', error);\r\n      setError('Error updating product: ' + (error instanceof Error ? error.message : 'Unknown error'));\r\n    }\r\n  };\r\n\r\n  const deleteProductData = async (productId: string, sellerId?: string) => {\r\n    try {\r\n      const result = await deleteProduct(productId);\r\n      if (result) {\r\n        invalidateProductCache();\r\n        await fetchProducts(true);\r\n        setError(null);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error deleting product:', error);\r\n      setError('Error deleting product: ' + (error instanceof Error ? error.message : 'Unknown error'));\r\n    }\r\n  };\r\n\r\n  const fetchReviewsForProduct = async (productId: string): Promise<Review[]> => {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from('reviews')\r\n        .select('*, profiles(full_name, avatar_url)')\r\n        .eq('product_id', productId)\r\n        .order('created_at', { ascending: false });\r\n\r\n      if (error) {\r\n        console.error('Error fetching reviews:', error);\r\n        return [];\r\n      }\r\n      return data as Review[];\r\n    } catch (error) {\r\n      console.error('Error fetching reviews:', error);\r\n      return [];\r\n    }\r\n  };\r\n\r\n  const submitReview = async (review: Omit<Review, 'id' | 'createdAt' | 'profiles'>) => {\r\n    try {\r\n      const payload: Partial<Review> = {\r\n        productId: review.productId || review.product_id!,\r\n        rating: review.rating,\r\n        comment: review.comment,\r\n        title: review.title,\r\n        createdAt: new Date()\r\n      } as any;\r\n      const success = await addReview(payload as any);\r\n      if (!success) {\r\n        setError('Failed to submit review');\r\n      }\r\n    } catch (error) {\r\n      setError('Error submitting review: ' + (error instanceof Error ? error.message : 'Unknown error'));\r\n    }\r\n  };\r\n\r\n  const addCategory = async (categoryData: Omit<Category, 'id' | 'productCount' | 'createdAt' | 'updatedAt'>) => {\r\n    try {\r\n      const newCategory = await createCategory({\r\n        name: categoryData.name,\r\n        description: categoryData.description,\r\n        imageUrl: categoryData.imageUrl\r\n      });\r\n\r\n      if (newCategory) {\r\n        invalidateCategoryCache();\r\n        await fetchCategories();\r\n        setError(null);\r\n        return Promise.resolve();\r\n      }\r\n    } catch (error) {\r\n      console.error('Error adding category:', error);\r\n      setError('Error adding category: ' + (error instanceof Error ? error.message : 'Unknown error'));\r\n      return Promise.reject(error);\r\n    }\r\n  };\r\n\r\n  const updateCategoryData = async (updatedCategory: Category) => {\r\n    try {\r\n      const { id, createdAt, updatedAt, productCount, ...updates } = updatedCategory;\r\n      const result = await updateCategory(id, updates);\r\n\r\n      if (result) {\r\n        invalidateCategoryCache();\r\n        await fetchCategories();\r\n        setError(null);\r\n        return Promise.resolve();\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating category:', error);\r\n      setError('Error updating category: ' + (error instanceof Error ? error.message : 'Unknown error'));\r\n      return Promise.reject(error);\r\n    }\r\n  };\r\n\r\n  const deleteCategoryData = async (categoryId: string) => {\r\n    try {\r\n      const success = await deleteCategory(categoryId);\r\n\r\n      if (success) {\r\n        invalidateCategoryCache();\r\n        await fetchCategories();\r\n        setError(null);\r\n        return Promise.resolve();\r\n      }\r\n    } catch (error) {\r\n      console.error('Error deleting category:', error);\r\n      setError('Error deleting category: ' + (error instanceof Error ? error.message : 'Unknown error'));\r\n      return Promise.reject(error);\r\n    }\r\n  };\r\n\r\n  // Memoize the context value to prevent unnecessary re-renders\r\n  const contextValue: ProductContextType = useMemo(() => ({\r\n    products,\r\n    featuredProducts,\r\n    categories,\r\n    addProduct,\r\n    updateProduct: updateProductData,\r\n    deleteProduct: deleteProductData,\r\n    fetchReviewsForProduct,\r\n    submitReview,\r\n    fetchProducts,\r\n    fetchCategories,\r\n    fetchFeaturedProducts,\r\n    loading,\r\n    basicLoading,\r\n    detailsLoading,\r\n    featuredLoading,\r\n    isUsingMockData,\r\n    addCategory,\r\n    updateCategory: updateCategoryData,\r\n    deleteCategory: deleteCategoryData\r\n  }), [\r\n    products,\r\n    featuredProducts,\r\n    categories,\r\n    loading,\r\n    basicLoading,\r\n    detailsLoading,\r\n    featuredLoading,\r\n    isUsingMockData,\r\n    addProduct,\r\n    updateProductData,\r\n    deleteProductData,\r\n    fetchReviewsForProduct,\r\n    submitReview,\r\n    fetchProducts,\r\n    fetchCategories,\r\n    fetchFeaturedProducts,\r\n    addCategory,\r\n    updateCategoryData,\r\n    deleteCategoryData\r\n  ]);\r\n\r\n  return (\r\n    <ProductContext.Provider value={contextValue}>\r\n      {children}\r\n    </ProductContext.Provider>\r\n  );\r\n});","import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\r\nimport { Collection } from '../types';\r\nimport { useNotification } from './NotificationContext';\r\n\r\ninterface CollectionContextType {\r\n  collections: Collection[];\r\n  loading: boolean;\r\n  error: string | null;\r\n  featuredCollections: Collection[];\r\n  activeCollections: Collection[];\r\n  getCollectionById: (id: string) => Collection | undefined;\r\n  getCollectionBySlug: (slug: string) => Collection | undefined;\r\n  addCollection: (collection: Omit<Collection, 'id' | 'productCount' | 'createdAt' | 'updatedAt'>) => Promise<Collection>;\r\n  updateCollection: (id: string, updates: Partial<Collection>) => Promise<Collection>;\r\n  deleteCollection: (id: string) => Promise<void>;\r\n  refreshCollections: () => Promise<void>;\r\n}\r\n\r\nconst CollectionContext = createContext<CollectionContextType | undefined>(undefined);\r\n\r\n// Mock data for collections\r\nconst mockCollections: Collection[] = [\r\n  {\r\n    id: '1',\r\n    name: 'Royal Heritage Collection',\r\n    slug: 'royal-heritage',\r\n    description: 'Timeless fragrances inspired by royal traditions and ancient perfumery arts. Each bottle contains centuries of wisdom and craftsmanship, bringing you the essence of royal courts and majestic ceremonies.',\r\n    shortDescription: 'Royal-inspired luxury attars',\r\n    image: 'https://images.unsplash.com/photo-1541643600914-78b084683601?w=400',\r\n    bannerImage: 'https://images.unsplash.com/photo-1541643600914-78b084683601?w=800',\r\n    type: 'heritage',\r\n    status: 'active',\r\n    price: 299,\r\n    originalPrice: 399,\r\n    discount: 25,\r\n    productIds: ['1', '2', '3'],\r\n    productCount: 12,\r\n    featured: true,\r\n    isExclusive: true,\r\n    launchDate: new Date('2024-01-15'),\r\n    sortOrder: 1,\r\n    tags: ['luxury', 'heritage', 'royal', 'exclusive'],\r\n    metaTitle: 'Royal Heritage Collection - Luxury Attars',\r\n    metaDescription: 'Discover our Royal Heritage Collection featuring timeless fragrances inspired by royal traditions.',\r\n    createdAt: new Date('2024-01-01'),\r\n    updatedAt: new Date('2024-01-15'),\r\n  },\r\n  {\r\n    id: '2',\r\n    name: 'Seasonal Blossoms',\r\n    slug: 'seasonal-blossoms',\r\n    description: 'Fresh floral compositions that capture the essence of each season. From spring cherry blossoms to autumn roses, experience nature\\'s beauty in every drop.',\r\n    shortDescription: 'Seasonal floral fragrances',\r\n    image: 'https://images.unsplash.com/photo-1578662996442-48f60103fc96?w=400',\r\n    bannerImage: 'https://images.unsplash.com/photo-1578662996442-48f60103fc96?w=800',\r\n    type: 'seasonal',\r\n    status: 'active',\r\n    price: 199,\r\n    originalPrice: 249,\r\n    discount: 20,\r\n    productIds: ['4', '5', '6'],\r\n    productCount: 8,\r\n    featured: true,\r\n    isExclusive: false,\r\n    launchDate: new Date('2024-03-01'),\r\n    endDate: new Date('2024-06-30'),\r\n    sortOrder: 2,\r\n    tags: ['floral', 'seasonal', 'fresh'],\r\n    metaTitle: 'Seasonal Blossoms Collection - Floral Attars',\r\n    metaDescription: 'Experience the beauty of seasonal flowers with our Seasonal Blossoms collection.',\r\n    createdAt: new Date('2024-02-15'),\r\n    updatedAt: new Date('2024-03-01'),\r\n  },\r\n  {\r\n    id: '3',\r\n    name: 'Limited Edition Oud',\r\n    slug: 'limited-oud',\r\n    description: 'Rare and precious oud compositions available for a limited time only. Sourced from the finest agarwood trees, these exclusive blends represent the pinnacle of oud craftsmanship.',\r\n    shortDescription: 'Exclusive limited oud collection',\r\n    image: 'https://images.unsplash.com/photo-1594736797933-d0401ba2fe65?w=400',\r\n    bannerImage: 'https://images.unsplash.com/photo-1594736797933-d0401ba2fe65?w=800',\r\n    type: 'limited',\r\n    status: 'coming_soon',\r\n    price: 599,\r\n    originalPrice: 799,\r\n    discount: 25,\r\n    productIds: ['7', '8'],\r\n    productCount: 5,\r\n    featured: true,\r\n    isExclusive: true,\r\n    launchDate: new Date('2024-12-01'),\r\n    endDate: new Date('2025-02-28'),\r\n    sortOrder: 3,\r\n    tags: ['oud', 'limited', 'premium', 'rare'],\r\n    metaTitle: 'Limited Edition Oud Collection - Rare Attars',\r\n    metaDescription: 'Discover our exclusive Limited Edition Oud collection featuring rare and precious compositions.',\r\n    createdAt: new Date('2024-10-01'),\r\n    updatedAt: new Date('2024-11-15'),\r\n  },\r\n  {\r\n    id: '4',\r\n    name: 'Modern Fusion',\r\n    slug: 'modern-fusion',\r\n    description: 'Contemporary blends that merge traditional attars with modern perfumery techniques. Innovation meets tradition in these groundbreaking compositions.',\r\n    shortDescription: 'Modern attar innovations',\r\n    image: 'https://images.unsplash.com/photo-1588405748880-12d1d2a59d32?w=400',\r\n    bannerImage: 'https://images.unsplash.com/photo-1588405748880-12d1d2a59d32?w=800',\r\n    type: 'modern',\r\n    status: 'active',\r\n    price: 249,\r\n    originalPrice: 299,\r\n    discount: 17,\r\n    productIds: ['9', '10', '11'],\r\n    productCount: 10,\r\n    featured: false,\r\n    isExclusive: false,\r\n    sortOrder: 4,\r\n    tags: ['modern', 'fusion', 'contemporary'],\r\n    metaTitle: 'Modern Fusion Collection - Contemporary Attars',\r\n    metaDescription: 'Experience the future of fragrance with our Modern Fusion collection.',\r\n    createdAt: new Date('2024-05-01'),\r\n    updatedAt: new Date('2024-06-15'),\r\n  },\r\n  {\r\n    id: '5',\r\n    name: 'Signature Classics',\r\n    slug: 'signature-classics',\r\n    description: 'Our most beloved and iconic fragrances that have defined our brand for generations. These timeless classics continue to captivate and inspire.',\r\n    shortDescription: 'Iconic signature fragrances',\r\n    image: 'https://images.unsplash.com/photo-1592945403244-b3fbafd7f539?w=400',\r\n    bannerImage: 'https://images.unsplash.com/photo-1592945403244-b3fbafd7f539?w=800',\r\n    type: 'signature',\r\n    status: 'active',\r\n    price: 179,\r\n    originalPrice: 199,\r\n    discount: 10,\r\n    productIds: ['12', '13', '14', '15'],\r\n    productCount: 15,\r\n    featured: true,\r\n    isExclusive: false,\r\n    sortOrder: 5,\r\n    tags: ['signature', 'classic', 'bestseller'],\r\n    metaTitle: 'Signature Classics Collection - Iconic Attars',\r\n    metaDescription: 'Discover our most beloved Signature Classics collection featuring iconic fragrances.',\r\n    createdAt: new Date('2023-01-01'),\r\n    updatedAt: new Date('2024-01-01'),\r\n  }\r\n];\r\n\r\ninterface CollectionProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const CollectionProvider: React.FC<CollectionProviderProps> = ({ children }) => {\r\n  const [collections, setCollections] = useState<Collection[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const { showNotification } = useNotification();\r\n\r\n  // Initialize collections\r\n  useEffect(() => {\r\n    const initializeCollections = async () => {\r\n      try {\r\n        setLoading(true);\r\n        setError(null);\r\n        \r\n        // Simulate API call delay\r\n        await new Promise(resolve => setTimeout(resolve, 1000));\r\n        \r\n        // In a real app, this would be an API call\r\n        setCollections(mockCollections);\r\n      } catch (err) {\r\n        setError('Failed to load collections');\r\n        console.error('Error loading collections:', err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    initializeCollections();\r\n  }, []);\r\n\r\n  // Computed values\r\n  const featuredCollections = collections.filter(collection => collection.featured);\r\n  const activeCollections = collections.filter(collection => collection.status === 'active');\r\n\r\n  // Helper functions\r\n  const getCollectionById = (id: string): Collection | undefined => {\r\n    return collections.find(collection => collection.id === id);\r\n  };\r\n\r\n  const getCollectionBySlug = (slug: string): Collection | undefined => {\r\n    return collections.find(collection => collection.slug === slug);\r\n  };\r\n\r\n  // CRUD operations\r\n  const addCollection = async (collectionData: Omit<Collection, 'id' | 'productCount' | 'createdAt' | 'updatedAt'>): Promise<Collection> => {\r\n    try {\r\n      const newCollection: Collection = {\r\n        ...collectionData,\r\n        id: Date.now().toString(),\r\n        productCount: collectionData.productIds.length,\r\n        createdAt: new Date(),\r\n        updatedAt: new Date()\r\n      };\r\n\r\n      // Simulate API call\r\n      await new Promise(resolve => setTimeout(resolve, 500));\r\n\r\n      setCollections(prev => [...prev, newCollection]);\r\n      \r\n      showNotification({\r\n        type: 'success',\r\n        title: 'Collection Created',\r\n        message: `${newCollection.name} has been successfully created.`\r\n      });\r\n\r\n      return newCollection;\r\n    } catch (err) {\r\n      const errorMessage = 'Failed to create collection';\r\n      setError(errorMessage);\r\n      showNotification({\r\n        type: 'error',\r\n        title: 'Creation Failed',\r\n        message: errorMessage\r\n      });\r\n      throw new Error(errorMessage);\r\n    }\r\n  };\r\n\r\n  const updateCollection = async (id: string, updates: Partial<Collection>): Promise<Collection> => {\r\n    try {\r\n      const existingCollection = getCollectionById(id);\r\n      if (!existingCollection) {\r\n        throw new Error('Collection not found');\r\n      }\r\n\r\n      const updatedCollection: Collection = {\r\n        ...existingCollection,\r\n        ...updates,\r\n        id, // Ensure ID doesn't change\r\n        updatedAt: new Date()\r\n      };\r\n\r\n      // Simulate API call\r\n      await new Promise(resolve => setTimeout(resolve, 500));\r\n\r\n      setCollections(prev => prev.map(collection => \r\n        collection.id === id ? updatedCollection : collection\r\n      ));\r\n\r\n      showNotification({\r\n        type: 'success',\r\n        title: 'Collection Updated',\r\n        message: `${updatedCollection.name} has been successfully updated.`\r\n      });\r\n\r\n      return updatedCollection;\r\n    } catch (err) {\r\n      const errorMessage = 'Failed to update collection';\r\n      setError(errorMessage);\r\n      showNotification({\r\n        type: 'error',\r\n        title: 'Update Failed',\r\n        message: errorMessage\r\n      });\r\n      throw new Error(errorMessage);\r\n    }\r\n  };\r\n\r\n  const deleteCollection = async (id: string): Promise<void> => {\r\n    try {\r\n      const collection = getCollectionById(id);\r\n      if (!collection) {\r\n        throw new Error('Collection not found');\r\n      }\r\n\r\n      // Simulate API call\r\n      await new Promise(resolve => setTimeout(resolve, 500));\r\n\r\n      setCollections(prev => prev.filter(c => c.id !== id));\r\n\r\n      showNotification({\r\n        type: 'success',\r\n        title: 'Collection Deleted',\r\n        message: `${collection.name} has been successfully deleted.`\r\n      });\r\n    } catch (err) {\r\n      const errorMessage = 'Failed to delete collection';\r\n      setError(errorMessage);\r\n      showNotification({\r\n        type: 'error',\r\n        title: 'Deletion Failed',\r\n        message: errorMessage\r\n      });\r\n      throw new Error(errorMessage);\r\n    }\r\n  };\r\n\r\n  const refreshCollections = async (): Promise<void> => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      // Simulate API call\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n\r\n      // In a real app, this would refetch from the API\r\n      setCollections([...mockCollections]);\r\n\r\n      showNotification({\r\n        type: 'success',\r\n        title: 'Collections Refreshed',\r\n        message: 'Collection data has been refreshed successfully.'\r\n      });\r\n    } catch (err) {\r\n      const errorMessage = 'Failed to refresh collections';\r\n      setError(errorMessage);\r\n      showNotification({\r\n        type: 'error',\r\n        title: 'Refresh Failed',\r\n        message: errorMessage\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const value: CollectionContextType = {\r\n    collections,\r\n    loading,\r\n    error,\r\n    featuredCollections,\r\n    activeCollections,\r\n    getCollectionById,\r\n    getCollectionBySlug,\r\n    addCollection,\r\n    updateCollection,\r\n    deleteCollection,\r\n    refreshCollections\r\n  };\r\n\r\n  return (\r\n    <CollectionContext.Provider value={value}>\r\n      {children}\r\n    </CollectionContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useCollections = (): CollectionContextType => {\r\n  const context = useContext(CollectionContext);\r\n  if (context === undefined) {\r\n    throw new Error('useCollections must be used within a CollectionProvider');\r\n  }\r\n  return context;\r\n};\r\n","import React, { createContext, useContext, useState, useEffect, useCallback, ReactNode } from 'react';\r\nimport { Product, CompareContextType } from '../types';\r\nimport { useNotification } from './NotificationContext';\r\nimport { useAuth } from './AuthContext';\r\n\r\nconst CompareContext = createContext<CompareContextType | undefined>(undefined);\r\n\r\nexport const useCompare = () => {\r\n  const context = useContext(CompareContext);\r\n  if (!context) {\r\n    throw new Error('useCompare must be used within a CompareProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\ninterface CompareProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const CompareProvider: React.FC<CompareProviderProps> = ({ children }) => {\r\n  const { user } = useAuth();\r\n  const [items, setItems] = useState<Product[]>(() => {\r\n    const savedCompare = localStorage.getItem('compare');\r\n    return savedCompare ? JSON.parse(savedCompare) : [];\r\n  });\r\n  const { showNotification } = useNotification();\r\n  const [lastAddedItem, setLastAddedItem] = useState<Product | null>(null);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('compare', JSON.stringify(items));\r\n  }, [items]);\r\n\r\n  useEffect(() => {\r\n    if (lastAddedItem) {\r\n      showNotification({\r\n        type: 'info',\r\n        title: 'Added to Compare',\r\n        message: `${lastAddedItem.name} has been added to your compare list.`\r\n      });\r\n      setLastAddedItem(null);\r\n    }\r\n  }, [lastAddedItem, showNotification]);\r\n\r\n  const addItem = useCallback((product: Product) => {\r\n    if (!user) {\r\n      showNotification({ \r\n        type: 'info', \r\n        title: 'Authentication Required', \r\n        message: 'Please log in or create an account to compare products.' \r\n      });\r\n      return;\r\n    }\r\n    \r\n    setItems(prevItems => {\r\n      if (prevItems.find(item => item.id === product.id)) {\r\n        return prevItems;\r\n      }\r\n      if (prevItems.length >= 4) {\r\n        showNotification({\r\n          type: 'error',\r\n          title: 'Compare List Full',\r\n          message: 'You can only compare up to 4 products at a time.'\r\n        });\r\n        return prevItems;\r\n      }\r\n      setLastAddedItem(product);\r\n      return [...prevItems, product];\r\n    });\r\n  }, [showNotification, user]);\r\n\r\n  const removeItem = useCallback((productId: string) => {\r\n    setItems(prevItems => prevItems.filter(item => item.id !== productId));\r\n  }, []);\r\n\r\n  const isInCompare = useCallback((productId: string) => {\r\n    return items.some(item => item.id === productId);\r\n  }, [items]);\r\n\r\n  const clearCompare = useCallback(() => {\r\n    setItems([]);\r\n  }, []);\r\n\r\n  const value: CompareContextType = {\r\n    items,\r\n    addItem,\r\n    removeItem,\r\n    isInCompare,\r\n    clearCompare,\r\n  };\r\n\r\n  return <CompareContext.Provider value={value}>{children}</CompareContext.Provider>;\r\n};","import React, { createContext, useContext, useState, ReactNode, useCallback, useEffect } from 'react';\r\nimport { Order, CartItem, Address, OrderContextType } from '../types';\r\nimport {\r\n  createOrder as createOrderDB,\r\n  getOrders,\r\n  getOrderById as getOrderByIdDB,\r\n  updateOrderStatus as updateOrderStatusDB\r\n} from '../lib/supabase';\r\nimport { useAuth } from './AuthContext';\r\nimport { useNotification } from './NotificationContext';\r\n\r\nconst OrderContext = createContext<OrderContextType | undefined>(undefined);\r\n\r\nexport const useOrders = () => {\r\n  const context = useContext(OrderContext);\r\n  if (!context) throw new Error('useOrders must be used within an OrderProvider');\r\n  return context;\r\n};\r\n\r\nexport const OrderProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\r\n  const { user } = useAuth();\r\n  const { showNotification } = useNotification();\r\n  const [orders, setOrders] = useState<Order[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const fetchUserOrders = useCallback(async () => {\r\n    if (!user) {\r\n      setOrders([]);\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n\r\n    try {\r\n      const ordersData = await getOrders(user.id);\r\n      setOrders(ordersData);\r\n    } catch (error) {\r\n      console.error('Error fetching orders:', error);\r\n      showNotification({\r\n        type: 'error',\r\n        title: 'Error',\r\n        message: 'Failed to load orders. Please try again later.'\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [user, showNotification]);\r\n\r\n\r\n\r\n  // Initial fetch\r\n  useEffect(() => {\r\n    fetchUserOrders();\r\n  }, [fetchUserOrders]);\r\n\r\n  const createOrder = async (\r\n    items: CartItem[],\r\n    shippingAddress: Address,\r\n    billingAddress?: Address,\r\n    paymentMethod: string = 'cash_on_delivery'\r\n  ): Promise<string | null> => {\r\n    if (!user) {\r\n      showNotification({\r\n        type: 'error',\r\n        title: 'Authentication Required',\r\n        message: 'Please log in to place an order'\r\n      });\r\n      return null;\r\n    }\r\n\r\n    setLoading(true);\r\n\r\n    try {\r\n      const orderId = await createOrderDB({\r\n        items,\r\n        shippingAddress,\r\n        billingAddress,\r\n        paymentMethod\r\n      });\r\n\r\n      if (orderId) {\r\n        showNotification({\r\n          type: 'success',\r\n          title: 'Order Placed',\r\n          message: 'Your order has been placed successfully!'\r\n        });\r\n        await fetchUserOrders(); // Refresh orders\r\n        return orderId;\r\n      } else {\r\n        showNotification({\r\n          type: 'error',\r\n          title: 'Order Failed',\r\n          message: 'Failed to create order. Please try again.'\r\n        });\r\n        return null;\r\n      }\r\n    } catch (error) {\r\n      console.error('Error creating order:', error);\r\n      showNotification({\r\n        type: 'error',\r\n        title: 'Order Failed',\r\n        message: 'An unexpected error occurred. Please try again.'\r\n      });\r\n      return null;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const updateOrderStatus = async (orderId: string, status: Order['status']) => {\r\n    try {\r\n      const success = await updateOrderStatusDB(orderId, status);\r\n      if (success) {\r\n        await fetchUserOrders(); // Refresh orders\r\n        showNotification({\r\n          type: 'success',\r\n          title: 'Status Updated',\r\n          message: `Order status updated to ${status}`\r\n        });\r\n      } else {\r\n        showNotification({\r\n          type: 'error',\r\n          title: 'Update Failed',\r\n          message: 'Failed to update order status'\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating order status:', error);\r\n      showNotification({\r\n        type: 'error',\r\n        title: 'Update Failed',\r\n        message: 'Failed to update order status. Please try again later.'\r\n      });\r\n    }\r\n  };\r\n\r\n  const getOrderById = async (orderId: string): Promise<Order | null> => {\r\n    try {\r\n      const order = await getOrderByIdDB(orderId);\r\n      return order;\r\n    } catch (error) {\r\n      console.error('Error fetching order:', error);\r\n      // Check local orders as fallback\r\n      const localOrder = orders.find(order => order.id === orderId);\r\n      if (localOrder) return localOrder;\r\n\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const getUserOrders = async (userId?: string): Promise<Order[]> => {\r\n    const targetUserId = userId || user?.id;\r\n    if (!targetUserId) return [];\r\n\r\n    try {\r\n      const ordersData = await getOrders(targetUserId);\r\n      return ordersData;\r\n    } catch (error) {\r\n      console.error('Error fetching user orders:', error);\r\n      return [];\r\n    }\r\n  };\r\n\r\n  const value: OrderContextType = {\r\n    orders,\r\n    loading,\r\n    createOrder,\r\n    updateOrderStatus,\r\n    getOrderById,\r\n    getUserOrders\r\n  };\r\n\r\n  return <OrderContext.Provider value={value}>{children}</OrderContext.Provider>;\r\n};\r\n","import React, { createContext, useContext, useState, ReactNode, useCallback, useEffect } from 'react';\r\nimport { Address, AddressContextType } from '../types';\r\nimport {\r\n  getUserAddresses,\r\n  addAddress as addAddressDB,\r\n  updateAddress as updateAddressDB,\r\n  deleteAddress as deleteAddressDB,\r\n  setDefaultAddress as setDefaultAddressDB\r\n} from '../lib/supabase';\r\nimport { useAuth } from './AuthContext';\r\nimport { useNotification } from './NotificationContext';\r\n\r\nconst AddressContext = createContext<AddressContextType | undefined>(undefined);\r\n\r\nexport const useAddresses = () => {\r\n  const context = useContext(AddressContext);\r\n  if (!context) throw new Error('useAddresses must be used within an AddressProvider');\r\n  return context;\r\n};\r\n\r\nexport const AddressProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\r\n  const [addresses, setAddresses] = useState<Address[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const { user } = useAuth();\r\n  const { showNotification } = useNotification();\r\n\r\n  const fetchAddresses = useCallback(async () => {\r\n    if (!user) {\r\n      setAddresses([]);\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      const addressesData = await getUserAddresses();\r\n      setAddresses(addressesData);\r\n    } catch (error) {\r\n      console.error('Error fetching addresses:', error);\r\n      showNotification({\r\n        type: 'error',\r\n        title: 'Error',\r\n        message: 'Failed to fetch addresses'\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [user, showNotification]);\r\n\r\n  useEffect(() => {\r\n    fetchAddresses();\r\n  }, [fetchAddresses]);\r\n\r\n  const addAddress = async (address: Omit<Address, 'id' | 'createdAt' | 'updatedAt'>) => {\r\n    if (!user) {\r\n      showNotification({\r\n        type: 'error',\r\n        title: 'Authentication Required',\r\n        message: 'Please log in to add an address'\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const success = await addAddressDB(address);\r\n      if (success) {\r\n        await fetchAddresses();\r\n        showNotification({\r\n          type: 'success',\r\n          title: 'Address Added',\r\n          message: 'Your address has been added successfully'\r\n        });\r\n      } else {\r\n        showNotification({\r\n          type: 'error',\r\n          title: 'Error',\r\n          message: 'Failed to add address'\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Error adding address:', error);\r\n      showNotification({\r\n        type: 'error',\r\n        title: 'Error',\r\n        message: 'Failed to add address'\r\n      });\r\n    }\r\n  };\r\n\r\n  const updateAddress = async (address: Address) => {\r\n    try {\r\n      const success = await updateAddressDB(address);\r\n      if (success) {\r\n        await fetchAddresses();\r\n        showNotification({\r\n          type: 'success',\r\n          title: 'Address Updated',\r\n          message: 'Your address has been updated successfully'\r\n        });\r\n      } else {\r\n        showNotification({\r\n          type: 'error',\r\n          title: 'Error',\r\n          message: 'Failed to update address'\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating address:', error);\r\n      showNotification({\r\n        type: 'error',\r\n        title: 'Error',\r\n        message: 'Failed to update address'\r\n      });\r\n    }\r\n  };\r\n\r\n  const deleteAddress = async (addressId: string) => {\r\n    try {\r\n      const success = await deleteAddressDB(addressId);\r\n      if (success) {\r\n        await fetchAddresses();\r\n        showNotification({\r\n          type: 'success',\r\n          title: 'Address Deleted',\r\n          message: 'Your address has been deleted successfully'\r\n        });\r\n      } else {\r\n        showNotification({\r\n          type: 'error',\r\n          title: 'Error',\r\n          message: 'Failed to delete address'\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Error deleting address:', error);\r\n      showNotification({\r\n        type: 'error',\r\n        title: 'Error',\r\n        message: 'Failed to delete address'\r\n      });\r\n    }\r\n  };\r\n\r\n  const setDefaultAddress = async (addressId: string, type: 'shipping' | 'billing') => {\r\n    try {\r\n      const success = await setDefaultAddressDB(addressId, type);\r\n      if (success) {\r\n        await fetchAddresses();\r\n        showNotification({\r\n          type: 'success',\r\n          title: 'Default Address Set',\r\n          message: `Default ${type} address has been updated`\r\n        });\r\n      } else {\r\n        showNotification({\r\n          type: 'error',\r\n          title: 'Error',\r\n          message: 'Failed to set default address'\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Error setting default address:', error);\r\n      showNotification({\r\n        type: 'error',\r\n        title: 'Error',\r\n        message: 'Failed to set default address'\r\n      });\r\n    }\r\n  };\r\n\r\n  const value: AddressContextType = {\r\n    addresses,\r\n    addAddress,\r\n    updateAddress,\r\n    deleteAddress,\r\n    setDefaultAddress,\r\n    fetchAddresses,\r\n    loading\r\n  };\r\n\r\n  return <AddressContext.Provider value={value}>{children}</AddressContext.Provider>;\r\n};\r\n","import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\r\nimport { Product } from '../types';\r\nimport { useProducts } from './ProductContext';\r\nimport { recentlyViewedService } from '../services/recentlyViewedService';\r\n\r\ninterface RecommendationData {\r\n  related: Product[];\r\n  frequentlyBought: Product[];\r\n  youMayLike: Product[];\r\n  recentlyViewed: Product[];\r\n  trending: Product[];\r\n  newArrivals: Product[];\r\n}\r\n\r\ninterface RecommendationsContextType {\r\n  recommendations: RecommendationData;\r\n  loading: boolean;\r\n  error: string | null;\r\n  \r\n  // Methods\r\n  getRelatedProducts: (productId: string, maxItems?: number) => Product[];\r\n  getFrequentlyBoughtTogether: (productId: string, maxItems?: number) => Product[];\r\n  getPersonalizedRecommendations: (maxItems?: number) => Product[];\r\n  getRecentlyViewed: (maxItems?: number) => Product[];\r\n  getTrendingProducts: (maxItems?: number) => Product[];\r\n  getNewArrivals: (maxItems?: number) => Product[];\r\n  \r\n  // Recently viewed management\r\n  addToRecentlyViewed: (productId: string) => void;\r\n  removeFromRecentlyViewed: (productId: string) => void;\r\n  clearRecentlyViewed: () => void;\r\n  \r\n  // Analytics\r\n  getRecommendationAnalytics: () => any;\r\n  \r\n  // Refresh recommendations\r\n  refreshRecommendations: (productId?: string) => void;\r\n}\r\n\r\nconst RecommendationsContext = createContext<RecommendationsContextType | undefined>(undefined);\r\n\r\ninterface RecommendationsProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const RecommendationsProvider: React.FC<RecommendationsProviderProps> = ({ children }) => {\r\n  const { products } = useProducts();\r\n  const [recommendations, setRecommendations] = useState<RecommendationData>({\r\n    related: [],\r\n    frequentlyBought: [],\r\n    youMayLike: [],\r\n    recentlyViewed: [],\r\n    trending: [],\r\n    newArrivals: []\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  // Advanced recommendation algorithms\r\n  const calculateProductSimilarity = (product1: Product, product2: Product): number => {\r\n    let score = 0;\r\n    \r\n    // Category similarity (40% weight)\r\n    if (product1.category === product2.category) score += 40;\r\n    \r\n    // Price similarity (25% weight) - within 30% range\r\n    const priceDiff = Math.abs(product1.price - product2.price) / Math.max(product1.price, product2.price);\r\n    if (priceDiff <= 0.3) score += 25;\r\n    \r\n    // Brand similarity (20% weight) - using seller name\r\n    if (product1.sellerName && product2.sellerName && product1.sellerName === product2.sellerName) score += 20;\r\n    \r\n    // Rating similarity (10% weight)\r\n    const ratingDiff = Math.abs(product1.rating - product2.rating);\r\n    if (ratingDiff <= 0.5) score += 10;\r\n    \r\n    // Tag similarity (5% weight)\r\n    if (product1.tags && product2.tags) {\r\n      const commonTags = product1.tags.filter(tag => product2.tags!.includes(tag));\r\n      score += (commonTags.length / Math.max(product1.tags.length, product2.tags.length)) * 5;\r\n    }\r\n    \r\n    return score;\r\n  };\r\n\r\n  const getRelatedProducts = (productId: string, maxItems: number = 4): Product[] => {\r\n    const currentProduct = products.find(p => p.id === productId);\r\n    if (!currentProduct) return [];\r\n\r\n    return products\r\n      .filter(p => p.id !== productId)\r\n      .map(product => ({\r\n        product,\r\n        score: calculateProductSimilarity(currentProduct, product)\r\n      }))\r\n      .sort((a, b) => b.score - a.score)\r\n      .slice(0, maxItems)\r\n      .map(item => item.product);\r\n  };\r\n\r\n  const getFrequentlyBoughtTogether = (productId: string, maxItems: number = 3): Product[] => {\r\n    const currentProduct = products.find(p => p.id === productId);\r\n    if (!currentProduct) return [];\r\n\r\n    // Simulate frequently bought together logic\r\n    const complementaryCategories: Record<string, string[]> = {\r\n      'Oudh Attars': ['Amber Attars', 'Sandalwood Attars', 'Musk Attars'],\r\n      'Floral Attars': ['Jasmine Attars', 'Rose Attars', 'Attar Blends'],\r\n      'Musk Attars': ['Oudh Attars', 'Amber Attars', 'Heritage Attars'],\r\n      'Amber Attars': ['Oudh Attars', 'Saffron Attars', 'Musk Attars'],\r\n      'Saffron Attars': ['Amber Attars', 'Heritage Attars', 'Attar Blends'],\r\n      'Sandalwood Attars': ['Oudh Attars', 'Musk Attars', 'Floral Attars'],\r\n      'Jasmine Attars': ['Floral Attars', 'Attar Blends', 'Seasonal Attars'],\r\n      'Attar Blends': ['Heritage Attars', 'Saffron Attars', 'Seasonal Attars'],\r\n      'Seasonal Attars': ['Attar Blends', 'Floral Attars', 'Jasmine Attars'],\r\n      'Heritage Attars': ['Oudh Attars', 'Saffron Attars', 'Attar Blends']\r\n    };\r\n\r\n    return products\r\n      .filter(p => p.id !== productId)\r\n      .map(product => {\r\n        let score = 0;\r\n        \r\n        // Complementary categories get higher scores\r\n        if (currentProduct.category && product.category && complementaryCategories[currentProduct.category]?.includes(product.category)) {\r\n          score += 50;\r\n        } else if (currentProduct.category === product.category) {\r\n          score += 30;\r\n        }\r\n        \r\n        // Price complementarity (accessories should be cheaper)\r\n        const priceRatio = product.price / currentProduct.price;\r\n        if (priceRatio >= 0.1 && priceRatio <= 0.6) score += 30;\r\n        \r\n        // High-rated products get priority\r\n        score += product.rating * 10;\r\n        \r\n        // In-stock products get priority\r\n        if (product.stock > 0) score += 10;\r\n        \r\n        return { product, score };\r\n      })\r\n      .sort((a, b) => b.score - a.score)\r\n      .slice(0, maxItems)\r\n      .map(item => item.product);\r\n  };\r\n\r\n  const getPersonalizedRecommendations = (maxItems: number = 8): Product[] => {\r\n    const recentlyViewedProducts = recentlyViewedService.getRecentlyViewedProducts(products);\r\n    \r\n    if (recentlyViewedProducts.length === 0) {\r\n      // Return trending/featured products for new users\r\n      return products\r\n        .filter(p => p.featured || p.rating >= 4.0)\r\n        .sort((a, b) => {\r\n          // Prioritize featured products, then by rating\r\n          if (a.featured && !b.featured) return -1;\r\n          if (!a.featured && b.featured) return 1;\r\n          return b.rating - a.rating;\r\n        })\r\n        .slice(0, maxItems);\r\n    }\r\n\r\n    // Get user preferences from viewing history\r\n    const viewedCategories = [...new Set(recentlyViewedProducts.map(p => p.category))];\r\n    const viewedBrands = [...new Set(recentlyViewedProducts.map(p => p.sellerName).filter(Boolean))];\r\n    const avgViewedPrice = recentlyViewedProducts.reduce((sum, p) => sum + p.price, 0) / recentlyViewedProducts.length;\r\n    const viewedIds = new Set(recentlyViewedProducts.map(p => p.id));\r\n\r\n    return products\r\n      .filter(product => !viewedIds.has(product.id))\r\n      .map(product => {\r\n        let score = 0;\r\n        \r\n        // Category preference (30% weight)\r\n        if (viewedCategories.includes(product.category)) score += 30;\r\n        \r\n        // Brand preference (20% weight) - using seller name\r\n        if (product.sellerName && viewedBrands.includes(product.sellerName)) score += 20;\r\n        \r\n        // Rating boost (25% weight)\r\n        score += product.rating * 5;\r\n        \r\n        // Featured product boost (10% weight)\r\n        if (product.featured) score += 10;\r\n        \r\n        // Price similarity (10% weight)\r\n        const priceDiff = Math.abs(product.price - avgViewedPrice) / avgViewedPrice;\r\n        if (priceDiff <= 0.5) score += 10;\r\n        \r\n        // Stock availability (5% weight)\r\n        if (product.stock > 0) score += 5;\r\n        \r\n        // Add some randomness for discovery\r\n        score += Math.random() * 5;\r\n        \r\n        return { product, score };\r\n      })\r\n      .sort((a, b) => b.score - a.score)\r\n      .slice(0, maxItems)\r\n      .map(item => item.product);\r\n  };\r\n\r\n  const getRecentlyViewed = (maxItems: number = 6): Product[] => {\r\n    return recentlyViewedService.getRecentlyViewedProducts(products).slice(0, maxItems);\r\n  };\r\n\r\n  const getTrendingProducts = (maxItems: number = 8): Product[] => {\r\n    // Simulate trending based on rating, featured status, and random factor\r\n    return products\r\n      .map(product => ({\r\n        product,\r\n        score: (product.rating * 20) + (product.featured ? 30 : 0) + (Math.random() * 50)\r\n      }))\r\n      .sort((a, b) => b.score - a.score)\r\n      .slice(0, maxItems)\r\n      .map(item => item.product);\r\n  };\r\n\r\n  const getNewArrivals = (maxItems: number = 8): Product[] => {\r\n    // Sort by creation date (newest first)\r\n    return products\r\n      .filter(p => p.createdAt)\r\n      .sort((a, b) => new Date(b.createdAt!).getTime() - new Date(a.createdAt!).getTime())\r\n      .slice(0, maxItems);\r\n  };\r\n\r\n  const addToRecentlyViewed = (productId: string): void => {\r\n    recentlyViewedService.addProduct(productId);\r\n    // Update recently viewed in recommendations\r\n    setRecommendations(prev => ({\r\n      ...prev,\r\n      recentlyViewed: getRecentlyViewed()\r\n    }));\r\n  };\r\n\r\n  const removeFromRecentlyViewed = (productId: string): void => {\r\n    recentlyViewedService.removeProduct(productId);\r\n    setRecommendations(prev => ({\r\n      ...prev,\r\n      recentlyViewed: getRecentlyViewed()\r\n    }));\r\n  };\r\n\r\n  const clearRecentlyViewed = (): void => {\r\n    recentlyViewedService.clearAll();\r\n    setRecommendations(prev => ({\r\n      ...prev,\r\n      recentlyViewed: []\r\n    }));\r\n  };\r\n\r\n  const getRecommendationAnalytics = () => {\r\n    return {\r\n      recentlyViewed: recentlyViewedService.getAnalytics(),\r\n      totalRecommendations: Object.values(recommendations).flat().length,\r\n      categoriesRepresented: [...new Set(Object.values(recommendations).flat().map(p => p.category))].length,\r\n      averageRating: Object.values(recommendations).flat().reduce((sum, p) => sum + p.rating, 0) / Object.values(recommendations).flat().length || 0\r\n    };\r\n  };\r\n\r\n  const refreshRecommendations = (productId?: string): void => {\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const newRecommendations: RecommendationData = {\r\n        related: productId ? getRelatedProducts(productId) : [],\r\n        frequentlyBought: productId ? getFrequentlyBoughtTogether(productId) : [],\r\n        youMayLike: getPersonalizedRecommendations(),\r\n        recentlyViewed: getRecentlyViewed(),\r\n        trending: getTrendingProducts(),\r\n        newArrivals: getNewArrivals()\r\n      };\r\n\r\n      setRecommendations(newRecommendations);\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'Failed to load recommendations');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Initialize recommendations when products are loaded\r\n  useEffect(() => {\r\n    if (products.length > 0) {\r\n      refreshRecommendations();\r\n    }\r\n  }, [products]);\r\n\r\n  // Listen for recently viewed updates\r\n  useEffect(() => {\r\n    const handleRecentlyViewedUpdate = () => {\r\n      setRecommendations(prev => ({\r\n        ...prev,\r\n        recentlyViewed: getRecentlyViewed(),\r\n        youMayLike: getPersonalizedRecommendations() // Update personalized recommendations too\r\n      }));\r\n    };\r\n\r\n    window.addEventListener('recentlyViewedUpdated', handleRecentlyViewedUpdate);\r\n    return () => window.removeEventListener('recentlyViewedUpdated', handleRecentlyViewedUpdate);\r\n  }, [products]);\r\n\r\n  const value: RecommendationsContextType = {\r\n    recommendations,\r\n    loading,\r\n    error,\r\n    getRelatedProducts,\r\n    getFrequentlyBoughtTogether,\r\n    getPersonalizedRecommendations,\r\n    getRecentlyViewed,\r\n    getTrendingProducts,\r\n    getNewArrivals,\r\n    addToRecentlyViewed,\r\n    removeFromRecentlyViewed,\r\n    clearRecentlyViewed,\r\n    getRecommendationAnalytics,\r\n    refreshRecommendations\r\n  };\r\n\r\n  return (\r\n    <RecommendationsContext.Provider value={value}>\r\n      {children}\r\n    </RecommendationsContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useRecommendations = (): RecommendationsContextType => {\r\n  const context = useContext(RecommendationsContext);\r\n  if (context === undefined) {\r\n    throw new Error('useRecommendations must be used within a RecommendationsProvider');\r\n  }\r\n  return context;\r\n};\r\n","import React, { createContext, useContext, ReactNode, useEffect } from 'react';\r\nimport {\r\n  useAdvancedTheme,\r\n  ThemeConfig,\r\n  ThemePreferences,\r\n  ThemeMode,\r\n  ColorScheme,\r\n  FontScale,\r\n  BorderRadius,\r\n  AnimationLevel\r\n} from '../utils/advancedThemeSystem';\r\n\r\n// Re-export types for convenience\r\nexport type {\r\n  ThemeMode,\r\n  ColorScheme,\r\n  FontScale,\r\n  BorderRadius,\r\n  AnimationLevel,\r\n  ThemeConfig,\r\n  ThemePreferences\r\n};\r\n\r\ninterface ThemeContextType {\r\n  // Current theme configuration\r\n  themeConfig: ThemeConfig;\r\n\r\n  // User preferences\r\n  preferences: ThemePreferences;\r\n\r\n  // System preferences\r\n  systemPreferences: {\r\n    prefersDark: boolean;\r\n    prefersReducedMotion: boolean;\r\n    prefersHighContrast: boolean;\r\n  };\r\n\r\n  // Theme controls\r\n  setMode: (mode: ThemeMode) => void;\r\n  setColorScheme: (scheme: ColorScheme) => void;\r\n  setFontScale: (scale: FontScale) => void;\r\n  setBorderRadius: (radius: BorderRadius) => void;\r\n  setAnimationLevel: (level: AnimationLevel) => void;\r\n  toggleHighContrast: () => void;\r\n  toggleReducedMotion: () => void;\r\n\r\n  // Utility functions\r\n  updatePreferences: (updates: Partial<ThemePreferences>) => void;\r\n  resetToDefaults: () => void;\r\n\r\n  // Legacy compatibility\r\n  theme: ThemeMode;\r\n  actualTheme: ThemeMode;\r\n}\r\n\r\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\r\n\r\nexport const useTheme = () => {\r\n  const context = useContext(ThemeContext);\r\n  if (!context) {\r\n    throw new Error('useTheme must be used within a ThemeProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\ninterface ThemeProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const ThemeProvider: React.FC<ThemeProviderProps> = ({ children }) => {\r\n  const {\r\n    preferences,\r\n    themeConfig,\r\n    systemPreferences,\r\n    updatePreferences,\r\n    resetToDefaults\r\n  } = useAdvancedTheme();\r\n\r\n  // Theme control functions\r\n  const setMode = (mode: ThemeMode) => updatePreferences({ mode });\r\n  const setColorScheme = (colorScheme: ColorScheme) => updatePreferences({ colorScheme });\r\n  const setFontScale = (fontScale: FontScale) => updatePreferences({ fontScale });\r\n  const setBorderRadius = (borderRadius: BorderRadius) => updatePreferences({ borderRadius });\r\n  const setAnimationLevel = (animationLevel: AnimationLevel) => updatePreferences({ animationLevel });\r\n  const toggleHighContrast = () => updatePreferences({ highContrast: !preferences.highContrast });\r\n  const toggleReducedMotion = () => updatePreferences({ reducedMotion: !preferences.reducedMotion });\r\n\r\n  // Announce theme changes to screen readers\r\n  useEffect(() => {\r\n    const announcement = `Theme changed to ${themeConfig.mode} mode with ${themeConfig.colorScheme} color scheme`;\r\n\r\n    // Create temporary announcement element\r\n    const announcer = document.createElement('div');\r\n    announcer.setAttribute('aria-live', 'polite');\r\n    announcer.setAttribute('aria-atomic', 'true');\r\n    announcer.className = 'sr-only';\r\n    announcer.textContent = announcement;\r\n\r\n    document.body.appendChild(announcer);\r\n\r\n    // Remove after announcement\r\n    setTimeout(() => {\r\n      if (document.body.contains(announcer)) {\r\n        document.body.removeChild(announcer);\r\n      }\r\n    }, 1000);\r\n  }, [themeConfig.mode, themeConfig.colorScheme]);\r\n\r\n  const contextValue: ThemeContextType = {\r\n    themeConfig,\r\n    preferences,\r\n    systemPreferences,\r\n    setMode,\r\n    setColorScheme,\r\n    setFontScale,\r\n    setBorderRadius,\r\n    setAnimationLevel,\r\n    toggleHighContrast,\r\n    toggleReducedMotion,\r\n    updatePreferences,\r\n    resetToDefaults,\r\n\r\n    // Legacy compatibility\r\n    theme: themeConfig.mode,\r\n    actualTheme: themeConfig.mode\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Provider value={contextValue}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n","import React, { createContext, useContext, useState, ReactNode } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport { Product } from '../types';\r\nimport { EnhancedAuthModal } from '../components/Auth/EnhancedAuthModal';\r\n\r\ninterface AuthModalContextType {\r\n  showAuthModal: (product: Product, action: 'cart' | 'wishlist' | 'compare') => void;\r\n  hideAuthModal: () => void;\r\n  isModalOpen: boolean;\r\n  modalAction: 'cart' | 'wishlist' | 'compare' | null;\r\n  selectedProduct: Product | null;\r\n}\r\n\r\nconst AuthModalContext = createContext<AuthModalContextType | undefined>(undefined);\r\n\r\nexport const useAuthModal = () => {\r\n  const context = useContext(AuthModalContext);\r\n  if (!context) {\r\n    throw new Error('useAuthModal must be used within an AuthModalProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\ninterface AuthModalProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const AuthModalProvider: React.FC<AuthModalProviderProps> = ({ children }) => {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [modalAction, setModalAction] = useState<'cart' | 'wishlist' | 'compare' | null>(null);\r\n  const [selectedProduct, setSelectedProduct] = useState<Product | null>(null);\r\n\r\n  const showAuthModal = (product: Product, action: 'cart' | 'wishlist' | 'compare') => {\r\n    setSelectedProduct(product);\r\n    setModalAction(action);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const hideAuthModal = () => {\r\n    setIsModalOpen(false);\r\n    setModalAction(null);\r\n    setSelectedProduct(null);\r\n  };\r\n\r\n  const handleModalClose = () => {\r\n    hideAuthModal();\r\n  };\r\n\r\n  const value: AuthModalContextType = {\r\n    showAuthModal,\r\n    hideAuthModal,\r\n    isModalOpen,\r\n    modalAction,\r\n    selectedProduct\r\n  };\r\n\r\n  return (\r\n    <AuthModalContext.Provider value={value}>\r\n      {children}\r\n      {isModalOpen && selectedProduct && createPortal(\r\n        <EnhancedAuthModal\r\n          isOpen={isModalOpen}\r\n          onClose={handleModalClose}\r\n          initialMode=\"login\"\r\n        />,\r\n        document.body\r\n      )}\r\n    </AuthModalContext.Provider>\r\n  );\r\n};","import React, { memo, ReactNode } from 'react';\r\nimport { AuthProvider } from './AuthContext';\r\nimport { CartProvider } from './CartContext';\r\nimport { WishlistProvider } from './WishlistContext';\r\nimport { NotificationProvider } from './NotificationContext';\r\nimport { ProductProvider } from './ProductContext';\r\nimport { CollectionProvider } from './CollectionContext';\r\nimport { CompareProvider } from './CompareContext';\r\nimport { ErrorProvider } from './ErrorContext';\r\nimport { OrderProvider } from './OrderContext';\r\nimport { AddressProvider } from './AddressContext';\r\nimport { RecommendationsProvider } from './RecommendationsContext';\r\nimport { ThemeProvider } from './ThemeContext';\r\nimport { AuthModalProvider } from './AuthModalContext';\r\n\r\nimport { SecurityProvider } from '../components/Security/SecurityProvider';\r\n\r\ninterface CombinedProviderProps {\r\n    children: ReactNode;\r\n}\r\n\r\n/**\r\n * Combined provider that wraps all context providers in a single component\r\n * This reduces the nesting level and improves performance\r\n */\r\nexport const CombinedProvider = memo<CombinedProviderProps>(({ children }) => {\r\n    return (\r\n        <ErrorProvider>\r\n            <ThemeProvider>\r\n                <NotificationProvider>\r\n                    <AuthProvider>\r\n                        <SecurityProvider>\r\n                            <AuthModalProvider>\r\n                                <ProductProvider>\r\n                                    <CollectionProvider>\r\n                                        <RecommendationsProvider>\r\n                                            <CartProvider>\r\n                                                <WishlistProvider>\r\n                                                    <CompareProvider>\r\n                                                        <OrderProvider>\r\n                                                            <AddressProvider>\r\n                                                                {children}\r\n                                                            </AddressProvider>\r\n                                                        </OrderProvider>\r\n                                                    </CompareProvider>\r\n                                                </WishlistProvider>\r\n                                            </CartProvider>\r\n                                        </RecommendationsProvider>\r\n                                    </CollectionProvider>\r\n                                </ProductProvider>\r\n                            </AuthModalProvider>\r\n                        </SecurityProvider>\r\n                    </AuthProvider>\r\n                </NotificationProvider>\r\n            </ThemeProvider>\r\n        </ErrorProvider>\r\n    );\r\n});\r\n\r\nCombinedProvider.displayName = 'CombinedProvider';\r\n"],"file":"assets/contexts-Cb1lEMMf.js"}