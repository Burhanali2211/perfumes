{"version":3,"file":"admin-analytics-BjhDWLJ4.js","sources":["../../src/components/Dashboard/Admin/AdvancedAnalytics.tsx","../../src/components/Dashboard/Admin/EnhancedAnalyticsDashboard.tsx","../../src/components/Dashboard/Admin/DedicatedAnalyticsDashboard.tsx","../../src/components/Dashboard/Admin/AdvancedReports.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport {\r\n  TrendingUp,\r\n  Users,\r\n  ShoppingCart,\r\n  Package,\r\n  DollarSign,\r\n  BarChart3,\r\n  PieChart,\r\n  Activity,\r\n  AlertTriangle,\r\n  CheckCircle,\r\n  Star\r\n} from 'lucide-react';\r\nimport { supabase } from '../../../lib/supabase';\r\nimport { LoadingSpinner } from '../../Common/LoadingSpinner';\r\n\r\ninterface AnalyticsData {\r\n  overview: {\r\n    totalUsers: number;\r\n    totalOrders: number;\r\n    totalProducts: number;\r\n    totalRevenue: number;\r\n    userGrowth: number;\r\n    orderGrowth: number;\r\n    revenueGrowth: number;\r\n  };\r\n  recentActivity: {\r\n    newUsers: number;\r\n    newOrders: number;\r\n    newProducts: number;\r\n    newReviews: number;\r\n  };\r\n  orderStats: {\r\n    pending: number;\r\n    processing: number;\r\n    shipped: number;\r\n    delivered: number;\r\n    cancelled: number;\r\n  };\r\n  topProducts: Array<{\r\n    id: string;\r\n    name: string;\r\n    sales: number;\r\n    revenue: number;\r\n  }>;\r\n  userActivity: Array<{\r\n    date: string;\r\n    logins: number;\r\n    registrations: number;\r\n  }>;\r\n  salesTrends: Array<{\r\n    date: string;\r\n    sales: number;\r\n    orders: number;\r\n  }>;\r\n}\r\n\r\nexport const AdvancedAnalytics: React.FC = () => {\r\n  const [data, setData] = useState<AnalyticsData | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [timeRange, setTimeRange] = useState<'7d' | '30d' | '90d' | '1y'>('30d');\r\n\r\n  const fetchAnalyticsData = async () => {\r\n    try {\r\n      setError(null);\r\n      setLoading(true);\r\n\r\n      // Calculate date range\r\n      const endDate = new Date();\r\n      const startDate = new Date();\r\n      switch (timeRange) {\r\n        case '7d':\r\n          startDate.setDate(endDate.getDate() - 7);\r\n          break;\r\n        case '30d':\r\n          startDate.setDate(endDate.getDate() - 30);\r\n          break;\r\n        case '90d':\r\n          startDate.setDate(endDate.getDate() - 90);\r\n          break;\r\n        case '1y':\r\n          startDate.setFullYear(endDate.getFullYear() - 1);\r\n          break;\r\n      }\r\n\r\n      // Fetch overview data\r\n      const [usersResult, ordersResult, productsResult] = await Promise.all([\r\n        supabase.from('profiles').select('*', { count: 'exact', head: true }),\r\n        supabase.from('orders').select('total_amount, created_at').gte('created_at', startDate.toISOString()),\r\n        supabase.from('products').select('*', { count: 'exact', head: true })\r\n      ]);\r\n\r\n      const totalUsers = usersResult.count || 0;\r\n      const totalProducts = productsResult.count || 0;\r\n      const orders = ordersResult.data || [];\r\n      const totalOrders = orders.length;\r\n      const totalRevenue = orders.reduce((sum, order) => sum + parseFloat(order.total_amount), 0);\r\n\r\n      // Fetch recent activity (last 24 hours)\r\n      const yesterday = new Date();\r\n      yesterday.setDate(yesterday.getDate() - 1);\r\n\r\n      const [newUsersResult, newOrdersResult, newProductsResult, newReviewsResult] = await Promise.all([\r\n        supabase.from('profiles').select('*', { count: 'exact', head: true }).gte('created_at', yesterday.toISOString()),\r\n        supabase.from('orders').select('*', { count: 'exact', head: true }).gte('created_at', yesterday.toISOString()),\r\n        supabase.from('products').select('*', { count: 'exact', head: true }).gte('created_at', yesterday.toISOString()),\r\n        supabase.from('reviews').select('*', { count: 'exact', head: true }).gte('created_at', yesterday.toISOString())\r\n      ]);\r\n\r\n      // Fetch order status distribution\r\n      const orderStatusResult = await supabase\r\n        .from('orders')\r\n        .select('status')\r\n        .gte('created_at', startDate.toISOString());\r\n\r\n      const orderStats = {\r\n        pending: 0,\r\n        processing: 0,\r\n        shipped: 0,\r\n        delivered: 0,\r\n        cancelled: 0\r\n      };\r\n\r\n      orderStatusResult.data?.forEach(order => {\r\n        if (order.status in orderStats) {\r\n          orderStats[order.status as keyof typeof orderStats]++;\r\n        }\r\n      });\r\n\r\n      // Fetch top products\r\n      const topProductsResult = await supabase\r\n        .from('order_items')\r\n        .select(`\r\n          product_id,\r\n          quantity,\r\n          unit_price,\r\n          products(name)\r\n        `)\r\n        .gte('created_at', startDate.toISOString());\r\n\r\n      const productSales: Record<string, { name: string; sales: number; revenue: number }> = {};\r\n      \r\n      topProductsResult.data?.forEach(item => {\r\n        const productId = item.product_id;\r\n        const productName = item.products?.name || 'Unknown Product';\r\n        const quantity = item.quantity;\r\n        const revenue = item.quantity * parseFloat(item.unit_price);\r\n\r\n        if (!productSales[productId]) {\r\n          productSales[productId] = { name: productName, sales: 0, revenue: 0 };\r\n        }\r\n        \r\n        productSales[productId].sales += quantity;\r\n        productSales[productId].revenue += revenue;\r\n      });\r\n\r\n      const topProducts = Object.entries(productSales)\r\n        .map(([id, data]) => ({ id, ...data }))\r\n        .sort((a, b) => b.revenue - a.revenue)\r\n        .slice(0, 5);\r\n\r\n      // Generate sample trends data (in a real app, you'd calculate this from actual data)\r\n      const salesTrends = Array.from({ length: 30 }, (_, i) => {\r\n        const date = new Date();\r\n        date.setDate(date.getDate() - (29 - i));\r\n        return {\r\n          date: date.toISOString().split('T')[0],\r\n          sales: Math.floor(Math.random() * 10000) + 5000,\r\n          orders: Math.floor(Math.random() * 50) + 20\r\n        };\r\n      });\r\n\r\n      const userActivity = Array.from({ length: 30 }, (_, i) => {\r\n        const date = new Date();\r\n        date.setDate(date.getDate() - (29 - i));\r\n        return {\r\n          date: date.toISOString().split('T')[0],\r\n          logins: Math.floor(Math.random() * 200) + 50,\r\n          registrations: Math.floor(Math.random() * 20) + 5\r\n        };\r\n      });\r\n\r\n      setData({\r\n        overview: {\r\n          totalUsers,\r\n          totalOrders,\r\n          totalProducts,\r\n          totalRevenue,\r\n          userGrowth: 12.5, // Mock data\r\n          orderGrowth: 8.3,\r\n          revenueGrowth: 15.7\r\n        },\r\n        recentActivity: {\r\n          newUsers: newUsersResult.count || 0,\r\n          newOrders: newOrdersResult.count || 0,\r\n          newProducts: newProductsResult.count || 0,\r\n          newReviews: newReviewsResult.count || 0\r\n        },\r\n        orderStats,\r\n        topProducts,\r\n        userActivity,\r\n        salesTrends\r\n      });\r\n    } catch (err) {\r\n      console.error('Error fetching analytics data:', err);\r\n      setError('Failed to load analytics data');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchAnalyticsData();\r\n  }, [timeRange, fetchAnalyticsData]);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"p-8\">\r\n        <LoadingSpinner size=\"large\" text=\"Loading analytics...\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error || !data) {\r\n    return (\r\n      <div className=\"p-8\">\r\n        <div className=\"text-center\">\r\n          <AlertTriangle className=\"h-12 w-12 text-red-500 mx-auto mb-4\" />\r\n          <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Failed to Load Analytics</h3>\r\n          <p className=\"text-gray-600 mb-4\">{error}</p>\r\n          <button\r\n            onClick={fetchAnalyticsData}\r\n            className=\"px-4 py-2 bg-primary text-white rounded-lg hover:bg-primary-dark\"\r\n          >\r\n            Retry\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"p-6 space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h1 className=\"text-3xl font-bold text-gray-900 flex items-center\">\r\n            <BarChart3 className=\"h-8 w-8 mr-3 text-primary\" />\r\n            Advanced Analytics\r\n          </h1>\r\n          <p className=\"text-gray-600 mt-1\">\r\n            Comprehensive business insights and performance metrics\r\n          </p>\r\n        </div>\r\n        <div className=\"flex items-center space-x-2\">\r\n          {(['7d', '30d', '90d', '1y'] as const).map((range) => (\r\n            <button\r\n              key={range}\r\n              onClick={() => setTimeRange(range)}\r\n              className={`px-3 py-2 rounded-lg text-sm font-medium transition-colors ${\r\n                timeRange === range\r\n                  ? 'bg-primary text-white'\r\n                  : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\r\n              }`}\r\n            >\r\n              {range === '7d' ? '7 Days' : range === '30d' ? '30 Days' : range === '90d' ? '90 Days' : '1 Year'}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Overview Metrics */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6\"\r\n        >\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <p className=\"text-sm font-medium text-gray-600\">Total Users</p>\r\n              <p className=\"text-2xl font-bold text-gray-900\">{data.overview.totalUsers.toLocaleString()}</p>\r\n            </div>\r\n            <div className=\"p-3 bg-blue-100 rounded-lg\">\r\n              <Users className=\"h-6 w-6 text-blue-600\" />\r\n            </div>\r\n          </div>\r\n          <div className=\"mt-4 flex items-center\">\r\n            <TrendingUp className=\"h-4 w-4 text-green-500 mr-1\" />\r\n            <span className=\"text-sm text-green-600 font-medium\">+{data.overview.userGrowth}%</span>\r\n            <span className=\"text-sm text-gray-500 ml-2\">vs last period</span>\r\n          </div>\r\n        </motion.div>\r\n\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ delay: 0.1 }}\r\n          className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6\"\r\n        >\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <p className=\"text-sm font-medium text-gray-600\">Total Orders</p>\r\n              <p className=\"text-2xl font-bold text-gray-900\">{data.overview.totalOrders.toLocaleString()}</p>\r\n            </div>\r\n            <div className=\"p-3 bg-green-100 rounded-lg\">\r\n              <ShoppingCart className=\"h-6 w-6 text-green-600\" />\r\n            </div>\r\n          </div>\r\n          <div className=\"mt-4 flex items-center\">\r\n            <TrendingUp className=\"h-4 w-4 text-green-500 mr-1\" />\r\n            <span className=\"text-sm text-green-600 font-medium\">+{data.overview.orderGrowth}%</span>\r\n            <span className=\"text-sm text-gray-500 ml-2\">vs last period</span>\r\n          </div>\r\n        </motion.div>\r\n\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ delay: 0.2 }}\r\n          className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6\"\r\n        >\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <p className=\"text-sm font-medium text-gray-600\">Total Products</p>\r\n              <p className=\"text-2xl font-bold text-gray-900\">{data.overview.totalProducts.toLocaleString()}</p>\r\n            </div>\r\n            <div className=\"p-3 bg-purple-100 rounded-lg\">\r\n              <Package className=\"h-6 w-6 text-purple-600\" />\r\n            </div>\r\n          </div>\r\n          <div className=\"mt-4 flex items-center\">\r\n            <CheckCircle className=\"h-4 w-4 text-blue-500 mr-1\" />\r\n            <span className=\"text-sm text-blue-600 font-medium\">Active</span>\r\n            <span className=\"text-sm text-gray-500 ml-2\">in catalog</span>\r\n          </div>\r\n        </motion.div>\r\n\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ delay: 0.3 }}\r\n          className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6\"\r\n        >\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <p className=\"text-sm font-medium text-gray-600\">Total Revenue</p>\r\n              <p className=\"text-2xl font-bold text-gray-900\">${data.overview.totalRevenue.toLocaleString()}</p>\r\n            </div>\r\n            <div className=\"p-3 bg-yellow-100 rounded-lg\">\r\n              <DollarSign className=\"h-6 w-6 text-yellow-600\" />\r\n            </div>\r\n          </div>\r\n          <div className=\"mt-4 flex items-center\">\r\n            <TrendingUp className=\"h-4 w-4 text-green-500 mr-1\" />\r\n            <span className=\"text-sm text-green-600 font-medium\">+{data.overview.revenueGrowth}%</span>\r\n            <span className=\"text-sm text-gray-500 ml-2\">vs last period</span>\r\n          </div>\r\n        </motion.div>\r\n      </div>\r\n\r\n      {/* Recent Activity */}\r\n      <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6\">\r\n        <h2 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\r\n          <Activity className=\"h-5 w-5 mr-2 text-primary\" />\r\n          Recent Activity (Last 24 Hours)\r\n        </h2>\r\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\r\n          <div className=\"text-center p-4 bg-blue-50 rounded-lg\">\r\n            <Users className=\"h-8 w-8 text-blue-600 mx-auto mb-2\" />\r\n            <p className=\"text-2xl font-bold text-blue-900\">{data.recentActivity.newUsers}</p>\r\n            <p className=\"text-sm text-blue-600\">New Users</p>\r\n          </div>\r\n          <div className=\"text-center p-4 bg-green-50 rounded-lg\">\r\n            <ShoppingCart className=\"h-8 w-8 text-green-600 mx-auto mb-2\" />\r\n            <p className=\"text-2xl font-bold text-green-900\">{data.recentActivity.newOrders}</p>\r\n            <p className=\"text-sm text-green-600\">New Orders</p>\r\n          </div>\r\n          <div className=\"text-center p-4 bg-purple-50 rounded-lg\">\r\n            <Package className=\"h-8 w-8 text-purple-600 mx-auto mb-2\" />\r\n            <p className=\"text-2xl font-bold text-purple-900\">{data.recentActivity.newProducts}</p>\r\n            <p className=\"text-sm text-purple-600\">New Products</p>\r\n          </div>\r\n          <div className=\"text-center p-4 bg-yellow-50 rounded-lg\">\r\n            <Star className=\"h-8 w-8 text-yellow-600 mx-auto mb-2\" />\r\n            <p className=\"text-2xl font-bold text-yellow-900\">{data.recentActivity.newReviews}</p>\r\n            <p className=\"text-sm text-yellow-600\">New Reviews</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Order Status Distribution */}\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n        <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6\">\r\n          <h2 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\r\n            <PieChart className=\"h-5 w-5 mr-2 text-primary\" />\r\n            Order Status Distribution\r\n          </h2>\r\n          <div className=\"space-y-3\">\r\n            {Object.entries(data.orderStats).map(([status, count]) => (\r\n              <div key={status} className=\"flex items-center justify-between\">\r\n                <div className=\"flex items-center\">\r\n                  <div className={`w-3 h-3 rounded-full mr-3 ${\r\n                    status === 'pending' ? 'bg-yellow-500' :\r\n                    status === 'processing' ? 'bg-blue-500' :\r\n                    status === 'shipped' ? 'bg-purple-500' :\r\n                    status === 'delivered' ? 'bg-green-500' :\r\n                    'bg-red-500'\r\n                  }`}></div>\r\n                  <span className=\"text-sm font-medium text-gray-700 capitalize\">{status}</span>\r\n                </div>\r\n                <span className=\"text-sm font-bold text-gray-900\">{count}</span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6\">\r\n          <h2 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\r\n            <TrendingUp className=\"h-5 w-5 mr-2 text-primary\" />\r\n            Top Products\r\n          </h2>\r\n          <div className=\"space-y-3\">\r\n            {data.topProducts.map((product, index) => (\r\n              <div key={product.id} className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\">\r\n                <div className=\"flex items-center\">\r\n                  <span className=\"w-6 h-6 bg-primary text-white text-xs rounded-full flex items-center justify-center mr-3\">\r\n                    {index + 1}\r\n                  </span>\r\n                  <div>\r\n                    <p className=\"text-sm font-medium text-gray-900\">{product.name}</p>\r\n                    <p className=\"text-xs text-gray-500\">{product.sales} units sold</p>\r\n                  </div>\r\n                </div>\r\n                <span className=\"text-sm font-bold text-green-600\">${product.revenue.toLocaleString()}</span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { TrendingUp, TrendingDown, DollarSign, Users, ShoppingCart, Package, Download, RefreshCw, BarChart3, Activity } from 'lucide-react';\r\nimport { supabase } from '../../../lib/supabase';\r\nimport { LoadingSpinner } from '../../Common/LoadingSpinner';\r\nimport { EnhancedButton } from '../../Common/EnhancedButton';\r\n\r\ninterface AnalyticsData {\r\n  totalRevenue: number;\r\n  revenueGrowth: number;\r\n  totalOrders: number;\r\n  ordersGrowth: number;\r\n  totalCustomers: number;\r\n  customersGrowth: number;\r\n  totalProducts: number;\r\n  productsGrowth: number;\r\n  averageOrderValue: number;\r\n  conversionRate: number;\r\n  topProducts: Array<{\r\n    id: string;\r\n    name: string;\r\n    sales: number;\r\n    revenue: number;\r\n  }>;\r\n  recentOrders: Array<{\r\n    id: string;\r\n    total: number;\r\n    status: string;\r\n    created_at: string;\r\n    customer_name: string;\r\n  }>;\r\n  salesByMonth: Array<{\r\n    month: string;\r\n    revenue: number;\r\n    orders: number;\r\n  }>;\r\n  ordersByStatus: Array<{\r\n    status: string;\r\n    count: number;\r\n  }>;\r\n}\r\n\r\nexport const EnhancedAnalyticsDashboard: React.FC = () => {\r\n  const [analytics, setAnalytics] = useState<AnalyticsData | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [dateRange, setDateRange] = useState('30');\r\n  const [refreshing, setRefreshing] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchAnalytics();\r\n  }, [dateRange]);\r\n\r\n  const fetchAnalytics = async () => {\r\n    setLoading(true);\r\n    try {\r\n      // Calculate date range\r\n      const endDate = new Date();\r\n      const startDate = new Date();\r\n      startDate.setDate(endDate.getDate() - parseInt(dateRange));\r\n\r\n      // Fetch revenue data\r\n      const { data: revenueData } = await supabase\r\n        .from('orders')\r\n        .select('total, created_at')\r\n        .gte('created_at', startDate.toISOString())\r\n        .eq('status', 'completed');\r\n\r\n      // Fetch orders data\r\n      const { data: ordersData } = await supabase\r\n        .from('orders')\r\n        .select('id, total, status, created_at, profiles(name)')\r\n        .gte('created_at', startDate.toISOString())\r\n        .order('created_at', { ascending: false })\r\n        .limit(10);\r\n\r\n      // Fetch customers data\r\n      const { data: customersData } = await supabase\r\n        .from('profiles')\r\n        .select('id, created_at')\r\n        .gte('created_at', startDate.toISOString());\r\n\r\n      // Fetch products data\r\n      const { data: productsData } = await supabase\r\n        .from('products')\r\n        .select('id, created_at');\r\n\r\n      // Calculate metrics\r\n      const totalRevenue = revenueData?.reduce((sum, order) => sum + order.total, 0) || 0;\r\n      const totalOrders = ordersData?.length || 0;\r\n      const totalCustomers = customersData?.length || 0;\r\n      const totalProducts = productsData?.length || 0;\r\n\r\n      // Calculate growth rates (mock data for now)\r\n      const revenueGrowth = Math.random() * 20 - 10; // -10% to +10%\r\n      const ordersGrowth = Math.random() * 15 - 7.5;\r\n      const customersGrowth = Math.random() * 25 - 12.5;\r\n      const productsGrowth = Math.random() * 10 - 5;\r\n\r\n      const averageOrderValue = totalOrders > 0 ? totalRevenue / totalOrders : 0;\r\n      const conversionRate = Math.random() * 5 + 2; // 2-7%\r\n\r\n      // Process top products (mock data)\r\n      const topProducts = [\r\n        { id: '1', name: 'Premium Headphones', sales: 45, revenue: 2250 },\r\n        { id: '2', name: 'Wireless Mouse', sales: 38, revenue: 1140 },\r\n        { id: '3', name: 'Gaming Keyboard', sales: 32, revenue: 1920 },\r\n        { id: '4', name: 'USB-C Cable', sales: 28, revenue: 420 },\r\n        { id: '5', name: 'Phone Case', sales: 25, revenue: 625 }\r\n      ];\r\n\r\n      // Process recent orders\r\n      const recentOrders = ordersData?.map(order => ({\r\n        id: order.id,\r\n        total: order.total,\r\n        status: order.status,\r\n        created_at: order.created_at,\r\n        customer_name: order.profiles?.name || 'Unknown'\r\n      })) || [];\r\n\r\n      // Generate sales by month data\r\n      const salesByMonth = Array.from({ length: 6 }, (_, i) => {\r\n        const date = new Date();\r\n        date.setMonth(date.getMonth() - i);\r\n        return {\r\n          month: date.toLocaleDateString('en-US', { month: 'short' }),\r\n          revenue: Math.random() * 10000 + 5000,\r\n          orders: Math.floor(Math.random() * 100 + 50)\r\n        };\r\n      }).reverse();\r\n\r\n      // Generate orders by status data\r\n      const ordersByStatus = [\r\n        { status: 'pending', count: Math.floor(Math.random() * 20 + 10) },\r\n        { status: 'confirmed', count: Math.floor(Math.random() * 30 + 15) },\r\n        { status: 'shipped', count: Math.floor(Math.random() * 25 + 12) },\r\n        { status: 'delivered', count: Math.floor(Math.random() * 40 + 20) },\r\n        { status: 'cancelled', count: Math.floor(Math.random() * 10 + 2) }\r\n      ];\r\n\r\n      setAnalytics({\r\n        totalRevenue,\r\n        revenueGrowth,\r\n        totalOrders,\r\n        ordersGrowth,\r\n        totalCustomers,\r\n        customersGrowth,\r\n        totalProducts,\r\n        productsGrowth,\r\n        averageOrderValue,\r\n        conversionRate,\r\n        topProducts,\r\n        recentOrders,\r\n        salesByMonth,\r\n        ordersByStatus\r\n      });\r\n\r\n    } catch (error) {\r\n      console.error('Error fetching analytics:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleRefresh = async () => {\r\n    setRefreshing(true);\r\n    await fetchAnalytics();\r\n    setRefreshing(false);\r\n  };\r\n\r\n  const formatCurrency = (amount: number) => {\r\n    return new Intl.NumberFormat('en-US', {\r\n      style: 'currency',\r\n      currency: 'USD'\r\n    }).format(amount);\r\n  };\r\n\r\n  const getGrowthColor = (growth: number) => {\r\n    if (growth > 0) return 'text-green-600';\r\n    if (growth < 0) return 'text-red-600';\r\n    return 'text-gray-600';\r\n  };\r\n\r\n  const getGrowthIcon = (growth: number) => {\r\n    if (growth > 0) return <TrendingUp className=\"h-4 w-4\" />;\r\n    if (growth < 0) return <TrendingDown className=\"h-4 w-4\" />;\r\n    return <Activity className=\"h-4 w-4\" />;\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"p-8\">\r\n        <LoadingSpinner size=\"large\" text=\"Loading analytics...\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!analytics) {\r\n    return (\r\n      <div className=\"p-8 text-center\">\r\n        <p className=\"text-gray-500\">No analytics data available</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between\">\r\n        <div>\r\n          <h1 className=\"text-2xl font-bold text-gray-900 flex items-center\">\r\n            <BarChart3 className=\"h-8 w-8 mr-3 text-indigo-600\" />\r\n            Analytics Dashboard\r\n          </h1>\r\n          <p className=\"text-gray-600 mt-1\">Track your store's performance and growth</p>\r\n        </div>\r\n        \r\n        <div className=\"flex items-center space-x-3 mt-4 sm:mt-0\">\r\n          <select\r\n            value={dateRange}\r\n            onChange={(e) => setDateRange(e.target.value)}\r\n            className=\"px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\r\n          >\r\n            <option value=\"7\">Last 7 days</option>\r\n            <option value=\"30\">Last 30 days</option>\r\n            <option value=\"90\">Last 90 days</option>\r\n            <option value=\"365\">Last year</option>\r\n          </select>\r\n          \r\n          <EnhancedButton\r\n            onClick={handleRefresh}\r\n            loading={refreshing}\r\n            icon={<RefreshCw className=\"h-4 w-4\" />}\r\n            variant=\"outline\"\r\n          >\r\n            Refresh\r\n          </EnhancedButton>\r\n          \r\n          <EnhancedButton\r\n            icon={<Download className=\"h-4 w-4\" />}\r\n            variant=\"outline\"\r\n          >\r\n            Export\r\n          </EnhancedButton>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Key Metrics */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n        <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <p className=\"text-sm font-medium text-gray-600\">Total Revenue</p>\r\n              <p className=\"text-3xl font-bold text-gray-900\">{formatCurrency(analytics.totalRevenue)}</p>\r\n              <div className={`flex items-center mt-2 ${getGrowthColor(analytics.revenueGrowth)}`}>\r\n                {getGrowthIcon(analytics.revenueGrowth)}\r\n                <span className=\"ml-1 text-sm font-medium\">\r\n                  {analytics.revenueGrowth > 0 ? '+' : ''}{analytics.revenueGrowth.toFixed(1)}%\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div className=\"p-3 bg-green-100 rounded-lg\">\r\n              <DollarSign className=\"h-6 w-6 text-green-600\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <p className=\"text-sm font-medium text-gray-600\">Total Orders</p>\r\n              <p className=\"text-3xl font-bold text-gray-900\">{analytics.totalOrders.toLocaleString()}</p>\r\n              <div className={`flex items-center mt-2 ${getGrowthColor(analytics.ordersGrowth)}`}>\r\n                {getGrowthIcon(analytics.ordersGrowth)}\r\n                <span className=\"ml-1 text-sm font-medium\">\r\n                  {analytics.ordersGrowth > 0 ? '+' : ''}{analytics.ordersGrowth.toFixed(1)}%\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div className=\"p-3 bg-blue-100 rounded-lg\">\r\n              <ShoppingCart className=\"h-6 w-6 text-blue-600\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <p className=\"text-sm font-medium text-gray-600\">Total Customers</p>\r\n              <p className=\"text-3xl font-bold text-gray-900\">{analytics.totalCustomers.toLocaleString()}</p>\r\n              <div className={`flex items-center mt-2 ${getGrowthColor(analytics.customersGrowth)}`}>\r\n                {getGrowthIcon(analytics.customersGrowth)}\r\n                <span className=\"ml-1 text-sm font-medium\">\r\n                  {analytics.customersGrowth > 0 ? '+' : ''}{analytics.customersGrowth.toFixed(1)}%\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div className=\"p-3 bg-purple-100 rounded-lg\">\r\n              <Users className=\"h-6 w-6 text-purple-600\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <p className=\"text-sm font-medium text-gray-600\">Avg Order Value</p>\r\n              <p className=\"text-3xl font-bold text-gray-900\">{formatCurrency(analytics.averageOrderValue)}</p>\r\n              <div className=\"flex items-center mt-2 text-gray-600\">\r\n                <Activity className=\"h-4 w-4\" />\r\n                <span className=\"ml-1 text-sm font-medium\">\r\n                  {analytics.conversionRate.toFixed(1)}% conversion\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div className=\"p-3 bg-orange-100 rounded-lg\">\r\n              <Package className=\"h-6 w-6 text-orange-600\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Charts and Tables */}\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n        {/* Top Products */}\r\n        <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6\">\r\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Top Products</h3>\r\n          <div className=\"space-y-3\">\r\n            {analytics.topProducts.map((product, index) => (\r\n              <div key={product.id} className=\"flex items-center justify-between\">\r\n                <div className=\"flex items-center\">\r\n                  <span className=\"text-sm font-medium text-gray-500 w-6\">#{index + 1}</span>\r\n                  <span className=\"text-sm font-medium text-gray-900 ml-2\">{product.name}</span>\r\n                </div>\r\n                <div className=\"text-right\">\r\n                  <p className=\"text-sm font-medium text-gray-900\">{formatCurrency(product.revenue)}</p>\r\n                  <p className=\"text-xs text-gray-500\">{product.sales} sales</p>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Recent Orders */}\r\n        <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6\">\r\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Recent Orders</h3>\r\n          <div className=\"space-y-3\">\r\n            {analytics.recentOrders.slice(0, 5).map((order) => (\r\n              <div key={order.id} className=\"flex items-center justify-between\">\r\n                <div>\r\n                  <p className=\"text-sm font-medium text-gray-900\">{order.customer_name}</p>\r\n                  <p className=\"text-xs text-gray-500\">\r\n                    {new Date(order.created_at).toLocaleDateString()}\r\n                  </p>\r\n                </div>\r\n                <div className=\"text-right\">\r\n                  <p className=\"text-sm font-medium text-gray-900\">{formatCurrency(order.total)}</p>\r\n                  <span className={`inline-flex px-2 py-1 text-xs font-medium rounded-full ${\r\n                    order.status === 'completed' ? 'bg-green-100 text-green-800' :\r\n                    order.status === 'pending' ? 'bg-yellow-100 text-yellow-800' :\r\n                    'bg-gray-100 text-gray-800'\r\n                  }`}>\r\n                    {order.status}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { TrendingUp, DollarSign, Users, ShoppingCart, Package, Download, RefreshCw, ArrowUp, ArrowDown, Eye } from 'lucide-react';\r\nimport { supabase } from '../../../lib/supabase';\r\nimport { LoadingSpinner } from '../../Common/LoadingSpinner';\r\nimport { ErrorFallback } from '../../Common/ErrorFallback';\r\n\r\ninterface AnalyticsData {\r\n  totalRevenue: number;\r\n  revenueGrowth: number;\r\n  totalOrders: number;\r\n  ordersGrowth: number;\r\n  totalCustomers: number;\r\n  customersGrowth: number;\r\n  totalProducts: number;\r\n  productsGrowth: number;\r\n  averageOrderValue: number;\r\n  conversionRate: number;\r\n  topProducts: Array<{\r\n    id: string;\r\n    name: string;\r\n    sales: number;\r\n    revenue: number;\r\n  }>;\r\n  recentOrders: Array<{\r\n    id: string;\r\n    total: number;\r\n    status: string;\r\n    created_at: string;\r\n    customer_name: string;\r\n  }>;\r\n  salesByMonth: Array<{\r\n    month: string;\r\n    sales: number;\r\n    orders: number;\r\n  }>;\r\n}\r\n\r\nexport const DedicatedAnalyticsDashboard: React.FC = () => {\r\n  const [analyticsData, setAnalyticsData] = useState<AnalyticsData | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [dateRange, setDateRange] = useState('30d');\r\n  const [refreshing, setRefreshing] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchAnalyticsData();\r\n  }, [dateRange]);\r\n\r\n  const fetchAnalyticsData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      // Validate Supabase client configuration\r\n      if (!supabase) {\r\n        throw new Error('Supabase client is not initialized');\r\n      }\r\n\r\n      // Check if environment variables are available\r\n      const supabaseUrl = import.meta.env.VITE_SUPABASE_URL;\r\n      const supabaseKey = import.meta.env.VITE_SUPABASE_ANON_KEY;\r\n\r\n      if (!supabaseUrl || !supabaseKey) {\r\n        throw new Error('Supabase configuration is missing. Please check environment variables.');\r\n      }\r\n\r\n      // Calculate date range\r\n      const endDate = new Date();\r\n      const startDate = new Date();\r\n      switch (dateRange) {\r\n        case '7d':\r\n          startDate.setDate(endDate.getDate() - 7);\r\n          break;\r\n        case '30d':\r\n          startDate.setDate(endDate.getDate() - 30);\r\n          break;\r\n        case '90d':\r\n          startDate.setDate(endDate.getDate() - 90);\r\n          break;\r\n        case '1y':\r\n          startDate.setFullYear(endDate.getFullYear() - 1);\r\n          break;\r\n      }\r\n\r\n      // Fetch analytics data with proper error handling\r\n      const [ordersResponse, productsResponse, usersResponse] = await Promise.all([\r\n        supabase\r\n          .from('orders')\r\n          .select('id, total, status, created_at, profiles(id, email, full_name)')\r\n          .gte('created_at', startDate.toISOString())\r\n          .lte('created_at', endDate.toISOString()),\r\n        supabase.from('products').select('id, name, price'),\r\n        supabase.from('profiles').select('id, created_at')\r\n      ]);\r\n\r\n      // Enhanced error handling with specific error messages\r\n      if (ordersResponse.error) {\r\n        console.error('Orders fetch error:', ordersResponse.error);\r\n        throw new Error(`Failed to fetch orders: ${ordersResponse.error.message}`);\r\n      }\r\n      if (productsResponse.error) {\r\n        console.error('Products fetch error:', productsResponse.error);\r\n        throw new Error(`Failed to fetch products: ${productsResponse.error.message}`);\r\n      }\r\n      if (usersResponse.error) {\r\n        console.error('Users fetch error:', usersResponse.error);\r\n        throw new Error(`Failed to fetch users: ${usersResponse.error.message}`);\r\n      }\r\n\r\n      const orders = ordersResponse.data || [];\r\n      const products = productsResponse.data || [];\r\n      const users = usersResponse.data || [];\r\n\r\n      // Log successful data fetch for debugging\r\n      console.log('Analytics data fetched successfully:', {\r\n        ordersCount: orders.length,\r\n        productsCount: products.length,\r\n        usersCount: users.length\r\n      });\r\n\r\n      // Calculate metrics\r\n      const totalRevenue = orders.reduce((sum, order) => sum + (parseFloat(order.total_amount) || 0), 0);\r\n      const totalOrders = orders.length;\r\n      const totalCustomers = users.length;\r\n      const totalProducts = products.length;\r\n      const averageOrderValue = totalOrders > 0 ? totalRevenue / totalOrders : 0;\r\n\r\n      // Mock growth data (in real app, compare with previous period)\r\n      const revenueGrowth = Math.random() * 20 - 10; // -10% to +10%\r\n      const ordersGrowth = Math.random() * 15 - 5; // -5% to +10%\r\n      const customersGrowth = Math.random() * 25; // 0% to +25%\r\n      const productsGrowth = Math.random() * 10; // 0% to +10%\r\n\r\n      // Recent orders\r\n      const recentOrders = orders\r\n        .sort((a, b) => new Date(b.created_at).getTime() - new Date(a.created_at).getTime())\r\n        .slice(0, 5)\r\n        .map(order => ({\r\n          id: order.id,\r\n          total: order.total,\r\n          status: order.status,\r\n          created_at: order.created_at,\r\n          customer_name: order.profiles?.full_name || order.profiles?.email || 'Unknown'\r\n        }));\r\n\r\n      // Mock top products (in real app, join with order_items)\r\n      const topProducts = products.slice(0, 5).map(product => ({\r\n        id: product.id,\r\n        name: product.name,\r\n        sales: Math.floor(Math.random() * 100) + 10,\r\n        revenue: Math.floor(Math.random() * 5000) + 500\r\n      }));\r\n\r\n      // Mock sales by month\r\n      const salesByMonth = Array.from({ length: 6 }, (_, i) => {\r\n        const date = new Date();\r\n        date.setMonth(date.getMonth() - i);\r\n        return {\r\n          month: date.toLocaleDateString('en-US', { month: 'short' }),\r\n          sales: Math.floor(Math.random() * 10000) + 5000,\r\n          orders: Math.floor(Math.random() * 100) + 50\r\n        };\r\n      }).reverse();\r\n\r\n      setAnalyticsData({\r\n        totalRevenue,\r\n        revenueGrowth,\r\n        totalOrders,\r\n        ordersGrowth,\r\n        totalCustomers,\r\n        customersGrowth,\r\n        totalProducts,\r\n        productsGrowth,\r\n        averageOrderValue,\r\n        conversionRate: Math.random() * 5 + 2, // 2-7%\r\n        topProducts,\r\n        recentOrders,\r\n        salesByMonth\r\n      });\r\n    } catch (err) {\r\n      console.error('Error fetching analytics data:', err);\r\n\r\n      // Enhanced error handling with specific error types\r\n      let errorMessage = 'Failed to fetch analytics data';\r\n\r\n      if (err instanceof Error) {\r\n        if (err.message.includes('apikey') || err.message.includes('API key')) {\r\n          errorMessage = 'Authentication error: Please check your Supabase configuration and ensure the API key is properly set.';\r\n        } else if (err.message.includes('network') || err.message.includes('fetch')) {\r\n          errorMessage = 'Network error: Please check your internet connection and try again.';\r\n        } else if (err.message.includes('timeout')) {\r\n          errorMessage = 'Request timeout: The server is taking too long to respond. Please try again.';\r\n        } else {\r\n          errorMessage = err.message;\r\n        }\r\n      }\r\n\r\n      setError(errorMessage);\r\n\r\n      // Fallback to mock data if database is unavailable\r\n      if (err instanceof Error && (err.message.includes('apikey') || err.message.includes('network'))) {\r\n        console.warn('Falling back to mock analytics data due to database error');\r\n        setAnalyticsData({\r\n          totalRevenue: 125000,\r\n          revenueGrowth: 12.5,\r\n          totalOrders: 450,\r\n          ordersGrowth: 8.2,\r\n          totalCustomers: 1250,\r\n          customersGrowth: 15.3,\r\n          totalProducts: 89,\r\n          productsGrowth: 5.1,\r\n          averageOrderValue: 277.78,\r\n          conversionRate: 3.2,\r\n          topProducts: [],\r\n          recentOrders: [],\r\n          salesByMonth: []\r\n        });\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n      setRefreshing(false);\r\n    }\r\n  };\r\n\r\n  const handleRefresh = async () => {\r\n    setRefreshing(true);\r\n    await fetchAnalyticsData();\r\n  };\r\n\r\n  const formatCurrency = (amount: number) => {\r\n    return new Intl.NumberFormat('en-US', {\r\n      style: 'currency',\r\n      currency: 'USD'\r\n    }).format(amount);\r\n  };\r\n\r\n  const formatPercentage = (value: number) => {\r\n    return `${value >= 0 ? '+' : ''}${value.toFixed(1)}%`;\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"p-8\">\r\n        <LoadingSpinner size=\"large\" text=\"Loading analytics data...\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"p-8\">\r\n        <ErrorFallback\r\n          error={error}\r\n          onRetry={fetchAnalyticsData}\r\n          type=\"analytics\"\r\n          size=\"large\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!analyticsData) {\r\n    return (\r\n      <div className=\"p-8 text-center\">\r\n        <p className=\"text-gray-500\">No analytics data available</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between\">\r\n        <div>\r\n          <h1 className=\"text-2xl font-bold text-gray-900\">Analytics Dashboard</h1>\r\n          <p className=\"text-gray-600 mt-1\">Track your business performance and insights</p>\r\n        </div>\r\n        <div className=\"flex items-center space-x-3 mt-4 sm:mt-0\">\r\n          <select\r\n            value={dateRange}\r\n            onChange={(e) => setDateRange(e.target.value)}\r\n            className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\r\n          >\r\n            <option value=\"7d\">Last 7 days</option>\r\n            <option value=\"30d\">Last 30 days</option>\r\n            <option value=\"90d\">Last 90 days</option>\r\n            <option value=\"1y\">Last year</option>\r\n          </select>\r\n          <button\r\n            onClick={handleRefresh}\r\n            disabled={refreshing}\r\n            className=\"px-4 py-2 bg-indigo-600 text-white rounded-lg hover:bg-indigo-700 focus:ring-2 focus:ring-indigo-500 disabled:opacity-50 flex items-center space-x-2\"\r\n          >\r\n            <RefreshCw className={`h-4 w-4 ${refreshing ? 'animate-spin' : ''}`} />\r\n            <span>Refresh</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Key Metrics */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n        <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <p className=\"text-sm font-medium text-gray-600\">Total Revenue</p>\r\n              <p className=\"text-3xl font-bold text-gray-900\">{formatCurrency(analyticsData.totalRevenue)}</p>\r\n              <div className=\"flex items-center mt-2\">\r\n                {analyticsData.revenueGrowth >= 0 ? (\r\n                  <ArrowUp className=\"h-4 w-4 text-green-500\" />\r\n                ) : (\r\n                  <ArrowDown className=\"h-4 w-4 text-red-500\" />\r\n                )}\r\n                <span className={`text-sm font-medium ${\r\n                  analyticsData.revenueGrowth >= 0 ? 'text-green-600' : 'text-red-600'\r\n                }`}>\r\n                  {formatPercentage(analyticsData.revenueGrowth)}\r\n                </span>\r\n                <span className=\"text-sm text-gray-500 ml-1\">vs last period</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"p-3 bg-green-100 rounded-lg\">\r\n              <DollarSign className=\"h-6 w-6 text-green-600\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <p className=\"text-sm font-medium text-gray-600\">Total Orders</p>\r\n              <p className=\"text-3xl font-bold text-gray-900\">{analyticsData.totalOrders.toLocaleString()}</p>\r\n              <div className=\"flex items-center mt-2\">\r\n                {analyticsData.ordersGrowth >= 0 ? (\r\n                  <ArrowUp className=\"h-4 w-4 text-green-500\" />\r\n                ) : (\r\n                  <ArrowDown className=\"h-4 w-4 text-red-500\" />\r\n                )}\r\n                <span className={`text-sm font-medium ${\r\n                  analyticsData.ordersGrowth >= 0 ? 'text-green-600' : 'text-red-600'\r\n                }`}>\r\n                  {formatPercentage(analyticsData.ordersGrowth)}\r\n                </span>\r\n                <span className=\"text-sm text-gray-500 ml-1\">vs last period</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"p-3 bg-blue-100 rounded-lg\">\r\n              <ShoppingCart className=\"h-6 w-6 text-blue-600\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <p className=\"text-sm font-medium text-gray-600\">Total Customers</p>\r\n              <p className=\"text-3xl font-bold text-gray-900\">{analyticsData.totalCustomers.toLocaleString()}</p>\r\n              <div className=\"flex items-center mt-2\">\r\n                <ArrowUp className=\"h-4 w-4 text-green-500\" />\r\n                <span className=\"text-sm font-medium text-green-600\">\r\n                  {formatPercentage(analyticsData.customersGrowth)}\r\n                </span>\r\n                <span className=\"text-sm text-gray-500 ml-1\">vs last period</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"p-3 bg-purple-100 rounded-lg\">\r\n              <Users className=\"h-6 w-6 text-purple-600\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <p className=\"text-sm font-medium text-gray-600\">Avg Order Value</p>\r\n              <p className=\"text-3xl font-bold text-gray-900\">{formatCurrency(analyticsData.averageOrderValue)}</p>\r\n              <div className=\"flex items-center mt-2\">\r\n                <ArrowUp className=\"h-4 w-4 text-green-500\" />\r\n                <span className=\"text-sm font-medium text-green-600\">+5.2%</span>\r\n                <span className=\"text-sm text-gray-500 ml-1\">vs last period</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"p-3 bg-orange-100 rounded-lg\">\r\n              <TrendingUp className=\"h-6 w-6 text-orange-600\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Charts and Tables */}\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n        {/* Recent Orders */}\r\n        <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6\">\r\n          <div className=\"flex items-center justify-between mb-4\">\r\n            <h3 className=\"text-lg font-semibold text-gray-900\">Recent Orders</h3>\r\n            <Eye className=\"h-5 w-5 text-gray-400\" />\r\n          </div>\r\n          <div className=\"space-y-3\">\r\n            {analyticsData.recentOrders.map((order) => (\r\n              <div key={order.id} className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\">\r\n                <div>\r\n                  <p className=\"font-medium text-gray-900\">{order.customer_name}</p>\r\n                  <p className=\"text-sm text-gray-500\">\r\n                    {new Date(order.created_at).toLocaleDateString()}\r\n                  </p>\r\n                </div>\r\n                <div className=\"text-right\">\r\n                  <p className=\"font-semibold text-gray-900\">{formatCurrency(order.total)}</p>\r\n                  <span className={`inline-flex px-2 py-1 text-xs font-medium rounded-full ${\r\n                    order.status === 'completed' ? 'bg-green-100 text-green-800' :\r\n                    order.status === 'pending' ? 'bg-yellow-100 text-yellow-800' :\r\n                    'bg-gray-100 text-gray-800'\r\n                  }`}>\r\n                    {order.status}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Top Products */}\r\n        <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6\">\r\n          <div className=\"flex items-center justify-between mb-4\">\r\n            <h3 className=\"text-lg font-semibold text-gray-900\">Top Products</h3>\r\n            <Package className=\"h-5 w-5 text-gray-400\" />\r\n          </div>\r\n          <div className=\"space-y-3\">\r\n            {analyticsData.topProducts.map((product, index) => (\r\n              <div key={product.id} className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\">\r\n                <div className=\"flex items-center space-x-3\">\r\n                  <div className=\"w-8 h-8 bg-indigo-100 rounded-full flex items-center justify-center\">\r\n                    <span className=\"text-sm font-medium text-indigo-600\">#{index + 1}</span>\r\n                  </div>\r\n                  <div>\r\n                    <p className=\"font-medium text-gray-900\">{product.name}</p>\r\n                    <p className=\"text-sm text-gray-500\">{product.sales} sales</p>\r\n                  </div>\r\n                </div>\r\n                <p className=\"font-semibold text-gray-900\">{formatCurrency(product.revenue)}</p>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Export Options */}\r\n      <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <div>\r\n            <h3 className=\"text-lg font-semibold text-gray-900\">Export Data</h3>\r\n            <p className=\"text-gray-600\">Download your analytics data for further analysis</p>\r\n          </div>\r\n          <div className=\"flex space-x-3\">\r\n            <button className=\"px-4 py-2 bg-gray-100 text-gray-700 rounded-lg hover:bg-gray-200 flex items-center space-x-2\">\r\n              <Download className=\"h-4 w-4\" />\r\n              <span>CSV</span>\r\n            </button>\r\n            <button className=\"px-4 py-2 bg-indigo-600 text-white rounded-lg hover:bg-indigo-700 flex items-center space-x-2\">\r\n              <Download className=\"h-4 w-4\" />\r\n              <span>PDF Report</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { FileText, BarChart3, Download, Settings, Plus, Play, Eye, Edit, Trash2, Copy, RefreshCw, Save, Search } from 'lucide-react';\r\nimport { supabase } from '../../../lib/supabase';\r\nimport { useNotification } from '../../../contexts/NotificationContext';\r\nimport { LoadingSpinner } from '../../Common/LoadingSpinner';\r\nimport { EnhancedButton } from '../../Common/EnhancedButton';\r\nimport { Modal } from '../../Common/Modal';\r\nimport { AdminErrorBoundary } from '../../Common/AdminErrorBoundary';\r\n\r\ninterface Report {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n  type: 'sales' | 'users' | 'products' | 'orders' | 'inventory' | 'custom';\r\n  format: 'pdf' | 'csv' | 'excel' | 'json';\r\n  schedule: 'manual' | 'daily' | 'weekly' | 'monthly';\r\n  status: 'active' | 'inactive' | 'running' | 'completed' | 'failed';\r\n  lastRun: string;\r\n  nextRun: string;\r\n  createdBy: string;\r\n  createdAt: string;\r\n  parameters: Record<string, any>;\r\n  recipients: string[];\r\n}\r\n\r\ninterface ReportTemplate {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n  type: string;\r\n  fields: string[];\r\n  filters: string[];\r\n  groupBy: string[];\r\n  sortBy: string[];\r\n}\r\n\r\ninterface ExportJob {\r\n  id: string;\r\n  reportId: string;\r\n  reportName: string;\r\n  status: 'pending' | 'processing' | 'completed' | 'failed';\r\n  progress: number;\r\n  startTime: string;\r\n  endTime?: string;\r\n  fileUrl?: string;\r\n  fileSize?: number;\r\n  error?: string;\r\n}\r\n\r\nexport const AdvancedReports: React.FC = () => {\r\n  const [reports, setReports] = useState<Report[]>([]);\r\n  const [templates, setTemplates] = useState<ReportTemplate[]>([]);\r\n  const [exportJobs, setExportJobs] = useState<ExportJob[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [activeTab, setActiveTab] = useState<'reports' | 'templates' | 'exports' | 'builder'>('reports');\r\n  const [isCreateReportModalOpen, setIsCreateReportModalOpen] = useState(false);\r\n  const [isCreateTemplateModalOpen, setIsCreateTemplateModalOpen] = useState(false);\r\n  const [selectedReport, setSelectedReport] = useState<Report | null>(null);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [typeFilter, setTypeFilter] = useState('');\r\n  const [statusFilter, setStatusFilter] = useState('');\r\n  const { showNotification } = useNotification();\r\n\r\n  const tabs = [\r\n    { id: 'reports', name: 'Reports', icon: FileText },\r\n    { id: 'templates', name: 'Templates', icon: Settings },\r\n    { id: 'exports', name: 'Export Jobs', icon: Download },\r\n    { id: 'builder', name: 'Report Builder', icon: Plus }\r\n  ];\r\n\r\n  const reportTypes = [\r\n    { value: '', label: 'All Types' },\r\n    { value: 'sales', label: 'Sales Reports' },\r\n    { value: 'users', label: 'User Reports' },\r\n    { value: 'products', label: 'Product Reports' },\r\n    { value: 'orders', label: 'Order Reports' },\r\n    { value: 'inventory', label: 'Inventory Reports' },\r\n    { value: 'custom', label: 'Custom Reports' }\r\n  ];\r\n\r\n  const reportStatuses = [\r\n    { value: '', label: 'All Statuses' },\r\n    { value: 'active', label: 'Active' },\r\n    { value: 'inactive', label: 'Inactive' },\r\n    { value: 'running', label: 'Running' },\r\n    { value: 'completed', label: 'Completed' },\r\n    { value: 'failed', label: 'Failed' }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const fetchData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await Promise.all([\r\n        fetchReports(),\r\n        fetchTemplates(),\r\n        fetchExportJobs()\r\n      ]);\r\n    } catch (error) {\r\n      console.error('Error fetching reports data:', error);\r\n      showNotification({\r\n        type: 'error',\r\n        title: 'Error',\r\n        message: 'Failed to load reports data'\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchReports = async () => {\r\n    // Mock data - replace with actual Supabase query\r\n    const mockReports: Report[] = [\r\n      {\r\n        id: '1',\r\n        name: 'Monthly Sales Report',\r\n        description: 'Comprehensive monthly sales analysis with trends and comparisons',\r\n        type: 'sales',\r\n        format: 'pdf',\r\n        schedule: 'monthly',\r\n        status: 'active',\r\n        lastRun: '2024-06-01T09:00:00Z',\r\n        nextRun: '2024-07-01T09:00:00Z',\r\n        createdBy: 'John Admin',\r\n        createdAt: '2024-01-15T10:00:00Z',\r\n        parameters: { dateRange: '30days', includeComparisons: true },\r\n        recipients: ['admin@example.com', 'sales@example.com']\r\n      },\r\n      {\r\n        id: '2',\r\n        name: 'User Activity Report',\r\n        description: 'Weekly user engagement and activity metrics',\r\n        type: 'users',\r\n        format: 'csv',\r\n        schedule: 'weekly',\r\n        status: 'active',\r\n        lastRun: '2024-06-15T08:00:00Z',\r\n        nextRun: '2024-06-22T08:00:00Z',\r\n        createdBy: 'Jane Manager',\r\n        createdAt: '2024-02-01T14:00:00Z',\r\n        parameters: { includeInactive: false, groupBy: 'week' },\r\n        recipients: ['hr@example.com']\r\n      },\r\n      {\r\n        id: '3',\r\n        name: 'Inventory Status Report',\r\n        description: 'Daily inventory levels and low stock alerts',\r\n        type: 'inventory',\r\n        format: 'excel',\r\n        schedule: 'daily',\r\n        status: 'running',\r\n        lastRun: '2024-06-16T06:00:00Z',\r\n        nextRun: '2024-06-17T06:00:00Z',\r\n        createdBy: 'Bob Warehouse',\r\n        createdAt: '2024-03-10T11:00:00Z',\r\n        parameters: { lowStockThreshold: 10, includeOutOfStock: true },\r\n        recipients: ['warehouse@example.com', 'purchasing@example.com']\r\n      }\r\n    ];\r\n    setReports(mockReports);\r\n  };\r\n\r\n  const fetchTemplates = async () => {\r\n    // Mock data - replace with actual Supabase query\r\n    const mockTemplates: ReportTemplate[] = [\r\n      {\r\n        id: '1',\r\n        name: 'Sales Performance Template',\r\n        description: 'Standard template for sales performance analysis',\r\n        type: 'sales',\r\n        fields: ['date', 'revenue', 'orders', 'customers', 'avg_order_value'],\r\n        filters: ['date_range', 'product_category', 'customer_segment'],\r\n        groupBy: ['date', 'category', 'region'],\r\n        sortBy: ['date_desc', 'revenue_desc']\r\n      },\r\n      {\r\n        id: '2',\r\n        name: 'User Engagement Template',\r\n        description: 'Template for analyzing user engagement metrics',\r\n        type: 'users',\r\n        fields: ['user_id', 'login_count', 'session_duration', 'page_views', 'last_activity'],\r\n        filters: ['date_range', 'user_type', 'activity_level'],\r\n        groupBy: ['date', 'user_type', 'region'],\r\n        sortBy: ['activity_desc', 'date_desc']\r\n      }\r\n    ];\r\n    setTemplates(mockTemplates);\r\n  };\r\n\r\n  const fetchExportJobs = async () => {\r\n    // Mock data - replace with actual Supabase query\r\n    const mockJobs: ExportJob[] = [\r\n      {\r\n        id: '1',\r\n        reportId: '1',\r\n        reportName: 'Monthly Sales Report',\r\n        status: 'completed',\r\n        progress: 100,\r\n        startTime: '2024-06-16T09:00:00Z',\r\n        endTime: '2024-06-16T09:05:00Z',\r\n        fileUrl: '/downloads/monthly-sales-2024-06.pdf',\r\n        fileSize: 2048576\r\n      },\r\n      {\r\n        id: '2',\r\n        reportId: '3',\r\n        reportName: 'Inventory Status Report',\r\n        status: 'processing',\r\n        progress: 65,\r\n        startTime: '2024-06-16T10:00:00Z'\r\n      },\r\n      {\r\n        id: '3',\r\n        reportId: '2',\r\n        reportName: 'User Activity Report',\r\n        status: 'failed',\r\n        progress: 0,\r\n        startTime: '2024-06-16T08:00:00Z',\r\n        endTime: '2024-06-16T08:02:00Z',\r\n        error: 'Database connection timeout'\r\n      }\r\n    ];\r\n    setExportJobs(mockJobs);\r\n  };\r\n\r\n  const runReport = async (reportId: string) => {\r\n    try {\r\n      // Mock implementation - replace with actual report generation\r\n      const report = reports.find(r => r.id === reportId);\r\n      if (!report) return;\r\n\r\n      // Update report status to running\r\n      setReports(prev => prev.map(r => \r\n        r.id === reportId ? { ...r, status: 'running' as const } : r\r\n      ));\r\n\r\n      // Create export job\r\n      const newJob: ExportJob = {\r\n        id: Date.now().toString(),\r\n        reportId,\r\n        reportName: report.name,\r\n        status: 'processing',\r\n        progress: 0,\r\n        startTime: new Date().toISOString()\r\n      };\r\n      setExportJobs(prev => [newJob, ...prev]);\r\n\r\n      showNotification({\r\n        type: 'success',\r\n        title: 'Report Started',\r\n        message: `${report.name} is now being generated`\r\n      });\r\n\r\n      // Simulate progress\r\n      let progress = 0;\r\n      const interval = setInterval(() => {\r\n        progress += Math.random() * 20;\r\n        if (progress >= 100) {\r\n          progress = 100;\r\n          clearInterval(interval);\r\n          \r\n          // Update job as completed\r\n          setExportJobs(prev => prev.map(job => \r\n            job.id === newJob.id ? {\r\n              ...job,\r\n              status: 'completed' as const,\r\n              progress: 100,\r\n              endTime: new Date().toISOString(),\r\n              fileUrl: `/downloads/${report.name.toLowerCase().replace(/\\s+/g, '-')}.${report.format}`,\r\n              fileSize: Math.floor(Math.random() * 5000000) + 1000000\r\n            } : job\r\n          ));\r\n\r\n          // Update report status\r\n          setReports(prev => prev.map(r => \r\n            r.id === reportId ? { \r\n              ...r, \r\n              status: 'completed' as const,\r\n              lastRun: new Date().toISOString()\r\n            } : r\r\n          ));\r\n\r\n          showNotification({\r\n            type: 'success',\r\n            title: 'Report Completed',\r\n            message: `${report.name} has been generated successfully`\r\n          });\r\n        } else {\r\n          setExportJobs(prev => prev.map(job => \r\n            job.id === newJob.id ? { ...job, progress } : job\r\n          ));\r\n        }\r\n      }, 1000);\r\n\r\n    } catch (error) {\r\n      showNotification({\r\n        type: 'error',\r\n        title: 'Report Failed',\r\n        message: 'Failed to generate report'\r\n      });\r\n    }\r\n  };\r\n\r\n  const downloadReport = (job: ExportJob) => {\r\n    if (job.fileUrl) {\r\n      // Mock download - replace with actual file download\r\n      showNotification({\r\n        type: 'success',\r\n        title: 'Download Started',\r\n        message: `Downloading ${job.reportName}`\r\n      });\r\n    }\r\n  };\r\n\r\n  const getStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case 'active':\r\n      case 'completed':\r\n        return 'bg-green-100 text-green-800';\r\n      case 'running':\r\n      case 'processing':\r\n        return 'bg-blue-100 text-blue-800';\r\n      case 'inactive':\r\n        return 'bg-gray-100 text-gray-800';\r\n      case 'failed':\r\n        return 'bg-red-100 text-red-800';\r\n      default:\r\n        return 'bg-gray-100 text-gray-800';\r\n    }\r\n  };\r\n\r\n  const formatFileSize = (bytes: number) => {\r\n    if (bytes === 0) return '0 Bytes';\r\n    const k = 1024;\r\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\r\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"p-8\">\r\n        <LoadingSpinner size=\"large\" text=\"Loading reports...\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <AdminErrorBoundary>\r\n      <div className=\"space-y-6\">\r\n        {/* Header */}\r\n        <div className=\"flex flex-col lg:flex-row lg:items-center lg:justify-between gap-4\">\r\n          <div>\r\n            <h1 className=\"text-2xl font-bold text-gray-900 flex items-center\">\r\n              <BarChart3 className=\"h-8 w-8 mr-3 text-indigo-600\" />\r\n              Advanced Reports & Export\r\n            </h1>\r\n            <p className=\"text-gray-600 mt-1\">\r\n              Create, schedule, and manage comprehensive business reports\r\n            </p>\r\n          </div>\r\n          \r\n          <div className=\"flex items-center gap-2\">\r\n            <EnhancedButton\r\n              onClick={() => setIsCreateReportModalOpen(true)}\r\n              icon={Plus}\r\n            >\r\n              Create Report\r\n            </EnhancedButton>\r\n            <EnhancedButton\r\n              onClick={() => setIsCreateTemplateModalOpen(true)}\r\n              icon={Settings}\r\n              variant=\"outline\"\r\n            >\r\n              Create Template\r\n            </EnhancedButton>\r\n            <EnhancedButton\r\n              onClick={fetchData}\r\n              icon={RefreshCw}\r\n              variant=\"outline\"\r\n            >\r\n              Refresh\r\n            </EnhancedButton>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Tabs */}\r\n        <div className=\"border-b border-gray-200\">\r\n          <nav className=\"-mb-px flex space-x-8\">\r\n            {tabs.map((tab) => (\r\n              <button\r\n                key={tab.id}\r\n                onClick={() => setActiveTab(tab.id as any)}\r\n                className={`${\r\n                  activeTab === tab.id\r\n                    ? 'border-indigo-500 text-indigo-600'\r\n                    : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\r\n                } whitespace-nowrap py-2 px-1 border-b-2 font-medium text-sm flex items-center`}\r\n              >\r\n                <tab.icon className=\"h-5 w-5\" />\r\n                <span className=\"ml-2\">{tab.name}</span>\r\n              </button>\r\n            ))}\r\n          </nav>\r\n        </div>\r\n\r\n        {/* Tab Content */}\r\n        <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-6\">\r\n          {activeTab === 'reports' && (\r\n            <div className=\"space-y-6\">\r\n              {/* Filters */}\r\n              <div className=\"flex flex-col sm:flex-row gap-4\">\r\n                <div className=\"relative flex-1\">\r\n                  <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Search reports...\"\r\n                    value={searchTerm}\r\n                    onChange={(e) => setSearchTerm(e.target.value)}\r\n                    className=\"pl-10 pr-4 py-2 w-full border border-gray-300 rounded-md focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\r\n                  />\r\n                </div>\r\n                <select\r\n                  value={typeFilter}\r\n                  onChange={(e) => setTypeFilter(e.target.value)}\r\n                  className=\"px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\r\n                >\r\n                  {reportTypes.map(type => (\r\n                    <option key={type.value} value={type.value}>{type.label}</option>\r\n                  ))}\r\n                </select>\r\n                <select\r\n                  value={statusFilter}\r\n                  onChange={(e) => setStatusFilter(e.target.value)}\r\n                  className=\"px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\r\n                >\r\n                  {reportStatuses.map(status => (\r\n                    <option key={status.value} value={status.value}>{status.label}</option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n\r\n              {/* Reports Grid */}\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n                {reports.map((report) => (\r\n                  <div key={report.id} className=\"border border-gray-200 rounded-lg p-6 hover:shadow-md transition-shadow\">\r\n                    <div className=\"flex items-center justify-between mb-4\">\r\n                      <h3 className=\"text-lg font-medium text-gray-900\">{report.name}</h3>\r\n                      <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${getStatusColor(report.status)}`}>\r\n                        {report.status}\r\n                      </span>\r\n                    </div>\r\n\r\n                    <p className=\"text-sm text-gray-600 mb-4\">{report.description}</p>\r\n\r\n                    <div className=\"space-y-2 text-sm\">\r\n                      <div className=\"flex justify-between\">\r\n                        <span className=\"text-gray-500\">Type:</span>\r\n                        <span className=\"text-gray-900 capitalize\">{report.type}</span>\r\n                      </div>\r\n                      <div className=\"flex justify-between\">\r\n                        <span className=\"text-gray-500\">Format:</span>\r\n                        <span className=\"text-gray-900 uppercase\">{report.format}</span>\r\n                      </div>\r\n                      <div className=\"flex justify-between\">\r\n                        <span className=\"text-gray-500\">Schedule:</span>\r\n                        <span className=\"text-gray-900 capitalize\">{report.schedule}</span>\r\n                      </div>\r\n                      <div className=\"flex justify-between\">\r\n                        <span className=\"text-gray-500\">Last Run:</span>\r\n                        <span className=\"text-gray-900\">{new Date(report.lastRun).toLocaleDateString()}</span>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"flex justify-end space-x-2 mt-4\">\r\n                      <button\r\n                        onClick={() => runReport(report.id)}\r\n                        className=\"text-indigo-600 hover:text-indigo-900\"\r\n                        disabled={report.status === 'running'}\r\n                      >\r\n                        <Play className=\"h-4 w-4\" />\r\n                      </button>\r\n                      <button className=\"text-indigo-600 hover:text-indigo-900\">\r\n                        <Eye className=\"h-4 w-4\" />\r\n                      </button>\r\n                      <button className=\"text-indigo-600 hover:text-indigo-900\">\r\n                        <Edit className=\"h-4 w-4\" />\r\n                      </button>\r\n                      <button className=\"text-indigo-600 hover:text-indigo-900\">\r\n                        <Copy className=\"h-4 w-4\" />\r\n                      </button>\r\n                      <button className=\"text-red-600 hover:text-red-900\">\r\n                        <Trash2 className=\"h-4 w-4\" />\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {activeTab === 'exports' && (\r\n            <div className=\"space-y-6\">\r\n              <div className=\"overflow-x-auto\">\r\n                <table className=\"min-w-full divide-y divide-gray-200\">\r\n                  <thead className=\"bg-gray-50\">\r\n                    <tr>\r\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                        Report\r\n                      </th>\r\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                        Status\r\n                      </th>\r\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                        Progress\r\n                      </th>\r\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                        Start Time\r\n                      </th>\r\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                        File Size\r\n                      </th>\r\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                        Actions\r\n                      </th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                    {exportJobs.map((job) => (\r\n                      <tr key={job.id} className=\"hover:bg-gray-50\">\r\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                          <div className=\"text-sm font-medium text-gray-900\">{job.reportName}</div>\r\n                        </td>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                          <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${getStatusColor(job.status)}`}>\r\n                            {job.status}\r\n                          </span>\r\n                        </td>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                          <div className=\"flex items-center\">\r\n                            <div className=\"w-full bg-gray-200 rounded-full h-2 mr-2\">\r\n                              <div\r\n                                className=\"bg-indigo-600 h-2 rounded-full transition-all duration-300\"\r\n                                style={{ width: `${job.progress}%` }}\r\n                              ></div>\r\n                            </div>\r\n                            <span className=\"text-sm text-gray-900\">{job.progress}%</span>\r\n                          </div>\r\n                        </td>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                          {new Date(job.startTime).toLocaleString()}\r\n                        </td>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                          {job.fileSize ? formatFileSize(job.fileSize) : '-'}\r\n                        </td>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\r\n                          {job.status === 'completed' && job.fileUrl && (\r\n                            <button\r\n                              onClick={() => downloadReport(job)}\r\n                              className=\"text-indigo-600 hover:text-indigo-900\"\r\n                            >\r\n                              <Download className=\"h-4 w-4\" />\r\n                            </button>\r\n                          )}\r\n                          {job.status === 'failed' && (\r\n                            <span className=\"text-red-600 text-xs\">{job.error}</span>\r\n                          )}\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {activeTab === 'templates' && (\r\n            <div className=\"space-y-6\">\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n                {templates.map((template) => (\r\n                  <div key={template.id} className=\"border border-gray-200 rounded-lg p-6\">\r\n                    <h3 className=\"text-lg font-medium text-gray-900 mb-2\">{template.name}</h3>\r\n                    <p className=\"text-sm text-gray-600 mb-4\">{template.description}</p>\r\n\r\n                    <div className=\"space-y-2 text-sm\">\r\n                      <div>\r\n                        <span className=\"font-medium text-gray-700\">Type: </span>\r\n                        <span className=\"text-gray-900 capitalize\">{template.type}</span>\r\n                      </div>\r\n                      <div>\r\n                        <span className=\"font-medium text-gray-700\">Fields: </span>\r\n                        <span className=\"text-gray-900\">{template.fields.length} fields</span>\r\n                      </div>\r\n                      <div>\r\n                        <span className=\"font-medium text-gray-700\">Filters: </span>\r\n                        <span className=\"text-gray-900\">{template.filters.length} filters</span>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"flex justify-end space-x-2 mt-4\">\r\n                      <button className=\"text-indigo-600 hover:text-indigo-900\">\r\n                        <Eye className=\"h-4 w-4\" />\r\n                      </button>\r\n                      <button className=\"text-indigo-600 hover:text-indigo-900\">\r\n                        <Edit className=\"h-4 w-4\" />\r\n                      </button>\r\n                      <button className=\"text-indigo-600 hover:text-indigo-900\">\r\n                        <Copy className=\"h-4 w-4\" />\r\n                      </button>\r\n                      <button className=\"text-red-600 hover:text-red-900\">\r\n                        <Trash2 className=\"h-4 w-4\" />\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {activeTab === 'builder' && (\r\n            <div className=\"space-y-6\">\r\n              <div className=\"text-center py-12\">\r\n                <BarChart3 className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\r\n                <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Report Builder</h3>\r\n                <p className=\"text-gray-600 mb-6\">\r\n                  Create custom reports with our drag-and-drop report builder\r\n                </p>\r\n                <EnhancedButton\r\n                  onClick={() => {\r\n                    showNotification({\r\n                      type: 'info',\r\n                      title: 'Coming Soon',\r\n                      message: 'Advanced report builder will be available in the next update'\r\n                    });\r\n                  }}\r\n                  icon={Plus}\r\n                >\r\n                  Launch Report Builder\r\n                </EnhancedButton>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Create Report Modal */}\r\n        <Modal\r\n          isOpen={isCreateReportModalOpen}\r\n          onClose={() => setIsCreateReportModalOpen(false)}\r\n          title=\"Create New Report\"\r\n        >\r\n          <div className=\"space-y-4\">\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Report Name\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\r\n                placeholder=\"Enter report name\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Description\r\n              </label>\r\n              <textarea\r\n                rows={3}\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\r\n                placeholder=\"Enter report description\"\r\n              />\r\n            </div>\r\n            <div className=\"grid grid-cols-2 gap-4\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Report Type\r\n                </label>\r\n                <select className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\">\r\n                  <option value=\"sales\">Sales Report</option>\r\n                  <option value=\"users\">User Report</option>\r\n                  <option value=\"products\">Product Report</option>\r\n                  <option value=\"orders\">Order Report</option>\r\n                  <option value=\"inventory\">Inventory Report</option>\r\n                  <option value=\"custom\">Custom Report</option>\r\n                </select>\r\n              </div>\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Format\r\n                </label>\r\n                <select className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\">\r\n                  <option value=\"pdf\">PDF</option>\r\n                  <option value=\"csv\">CSV</option>\r\n                  <option value=\"excel\">Excel</option>\r\n                  <option value=\"json\">JSON</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Schedule\r\n              </label>\r\n              <select className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\">\r\n                <option value=\"manual\">Manual</option>\r\n                <option value=\"daily\">Daily</option>\r\n                <option value=\"weekly\">Weekly</option>\r\n                <option value=\"monthly\">Monthly</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"flex justify-end space-x-3\">\r\n              <EnhancedButton\r\n                onClick={() => setIsCreateReportModalOpen(false)}\r\n                variant=\"outline\"\r\n              >\r\n                Cancel\r\n              </EnhancedButton>\r\n              <EnhancedButton\r\n                onClick={() => {\r\n                  setIsCreateReportModalOpen(false);\r\n                  showNotification({\r\n                    type: 'success',\r\n                    title: 'Report Created',\r\n                    message: 'New report has been created successfully'\r\n                  });\r\n                }}\r\n                icon={Save}\r\n              >\r\n                Create Report\r\n              </EnhancedButton>\r\n            </div>\r\n          </div>\r\n        </Modal>\r\n      </div>\r\n    </AdminErrorBoundary>\r\n  );\r\n};\r\n"],"names":["AdvancedAnalytics","data","setData","useState","loading","setLoading","error","setError","timeRange","setTimeRange","fetchAnalyticsData","async","endDate","Date","startDate","setDate","getDate","setFullYear","getFullYear","usersResult","ordersResult","productsResult","Promise","all","supabase","from","select","count","head","gte","toISOString","totalUsers","totalProducts","orders","totalOrders","length","totalRevenue","reduce","sum","order","parseFloat","total_amount","yesterday","newUsersResult","newOrdersResult","newProductsResult","newReviewsResult","orderStatusResult","orderStats","pending","processing","shipped","delivered","cancelled","_a","forEach","status","topProductsResult","productSales","_b","item","productId","product_id","productName","products","name","quantity","revenue","unit_price","sales","topProducts","Object","entries","map","id","sort","a","b","slice","salesTrends","Array","_","i","date","split","Math","floor","random","userActivity","logins","registrations","overview","userGrowth","orderGrowth","revenueGrowth","recentActivity","newUsers","newOrders","newProducts","newReviews","err","useEffect","jsx","className","children","LoadingSpinner","size","text","jsxs","AlertTriangle","onClick","BarChart3","range","motion","div","initial","opacity","y","animate","toLocaleString","Users","TrendingUp","transition","delay","ShoppingCart","Package","CheckCircle","DollarSign","Activity","Star","PieChart","product","index","analytics","setAnalytics","dateRange","setDateRange","refreshing","setRefreshing","fetchAnalytics","parseInt","revenueData","eq","ordersData","ascending","limit","customersData","productsData","total","totalCustomers","ordersGrowth","customersGrowth","productsGrowth","averageOrderValue","conversionRate","recentOrders","created_at","customer_name","profiles","salesByMonth","setMonth","getMonth","month","toLocaleDateString","reverse","ordersByStatus","formatCurrency","amount","Intl","NumberFormat","style","currency","format","getGrowthColor","growth","getGrowthIcon","TrendingDown","value","onChange","e","target","EnhancedButton","icon","RefreshCw","variant","Download","toFixed","analyticsData","setAnalyticsData","Error","ordersResponse","productsResponse","usersResponse","lte","message","users","getTime","full_name","email","errorMessage","includes","formatPercentage","ErrorFallback","onRetry","type","disabled","ArrowUp","ArrowDown","Eye","reports","setReports","templates","setTemplates","exportJobs","setExportJobs","activeTab","setActiveTab","isCreateReportModalOpen","setIsCreateReportModalOpen","isCreateTemplateModalOpen","setIsCreateTemplateModalOpen","selectedReport","setSelectedReport","searchTerm","setSearchTerm","typeFilter","setTypeFilter","statusFilter","setStatusFilter","showNotification","useNotification","tabs","FileText","Settings","Plus","fetchData","fetchReports","fetchTemplates","fetchExportJobs","title","description","schedule","lastRun","nextRun","createdBy","createdAt","parameters","includeComparisons","recipients","includeInactive","groupBy","lowStockThreshold","includeOutOfStock","fields","filters","sortBy","reportId","reportName","progress","startTime","endTime","fileUrl","fileSize","getStatusColor","formatFileSize","bytes","log","pow","AdminErrorBoundary","tab","Search","placeholder","label","report","find","r","prev","newJob","now","toString","interval","setInterval","clearInterval","job","toLowerCase","replace","runReport","Play","Edit","Copy","Trash2","width","downloadReport","template","Modal","isOpen","onClose","rows","Save"],"mappings":"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"}